/*TODOS.SQL Generado el dia 3/12/2021 16:42:56 */

/* C:\V3\SummaAdvanced\Scripts\Informes\GenReportes.sql*/
Execute genReportesGuardar 'tesChequesClientes', 'tesChequesClientes', 'Cheques _de_Clientes', 'TesoreriaReportes', 'tesChequesClientes', 1, 1, 'INF_tesChequesClientes'

Execute genReportesGuardar 'tesPagosEmitidos', 'tesPagosEmitidos', 'Pagos_Emitidos', 'TesoreriaReportes', 'tesPagosEmitidos', 1, 1, 'INF_tesPagosEmitidos'
Execute genReportesGuardar 'tesChequesEmitidos', 'tesChequesEmitidos', 'Cheques_Emitidos', 'TesoreriaReportes', 'tesChequesEmitidos', 1, 1, 'INF_tesChequesEmitidos'
Execute genReportesGuardar 'tesChequesDevueltos', 'tesChequesDevueltos', 'Cheques_Devueltos', 'TesoreriaReportes', 'tesChequesDevueltos', 1, 1, 'INF_tesChequesDevueltos'
Execute genReportesGuardar 'tesCheqBusqueda', 'tesCheqBusqueda', 'Busqueda_De_Cheques', 'TesoreriaReportes', 'tesCheqBusqueda', 1, 1, 'INF_tesCheqBusqueda'
Execute genReportesGuardar 'tesSubMayor', 'tesSubMayor', 'Sub_Mayor', 'TesoreriaReportes', 'tesSubMayor', 1, 1, 'INF_tesSubMayor'
Execute genReportesGuardar 'tesTiposCambio', 'tesTiposCambio', 'Tipos_de_Cambio', 'TesoreriaReportes', 'tesTiposCambio', 1, 1, 'INF_tesTiposCambio'
Execute genReportesGuardar 'venSaldoXCuenta', 'venSaldoXCuenta', 'Deuda_por_cuenta_contable', 'VentasReportes', 'venSaldoXCuenta', 1, 1, 'INF_venSaldoXCuenta'

Execute genReportesGuardar 'venSubMayor', 'venSubMayor', 'Informe_Sub_Mayor_de_Ventas', 'VentasReportes', 'venSubMayor', 1, 1, 'INF_venSubMayor'
Execute genReportesGuardar 'venSubDiario', 'venSubDiario', 'Facturas_con_Productos_Pendientes_de_Entrega', 'VentasReportes', 'venFactProdPend', 1, 1, 'INF_venFactProdPend'
Execute genReportesGuardar 'venFactProdPend', 'venFactProdPend', 'Facturas_con_Productos_Pendientes_de_Entrega', 'VentasReportes', 'venFactProdPend', 1, 1, 'INF_venFactProdPend'
Execute genReportesGuardar 'venRemiPendFact', 'venRemiPendFact', 'Remisiones_Pendientes_de_Facturar', 'VentasReportes', 'venRemiPendFact', 1, 1, 'INF_venRemiPendFact'
Execute genReportesGuardar 'venRemiFactAsoc', 'venRemiFactAsoc', 'Remisiones_y_Facturas_Asociadas', 'VentasReportes', 'venRemiFactAsoc', 1, 1, 'INF_venRemiFactAsoc'
Execute genReportesGuardar 'venVentasProducto', 'venVentasProducto', 'Ventas_por_Producto', 'VentasReportes', 'venVentasProducto', 1, 1, 'INF_venVentasProducto'
Execute genReportesGuardar 'venContribMarg', 'venContribMarg', 'Contribucion_Marginal', 'VentasReportes', 'venContribMarg', 1, 1, 'INF_venContribMarg'
Execute genReportesGuardar 'venRankCli', 'venRankCli', 'Ranking_de_Clientes', 'VentasReportes', 'venRankCli', 1, 1, 'INF_venRankCli'
Execute genReportesGuardar 'venListaPrecios', 'venListaPrecios', 'Listas_de_Precios', 'VentasReportes', 'venListaPrecios', 1, 1, 'INF_venListaPrecios'
Execute genReportesGuardar 'venVendedores', 'venVendedores', 'Vendedores', 'VentasReportes', 'venVendedores', 1, 1, 'INF_venVendedores'
Execute genReportesGuardar 'venClientes', 'venClientes', 'Clientes', 'VentasReportes', 'venClientes', 1, 1, 'INF_venClientes'
Execute genReportesGuardar 'venSaldosClie', 'venSaldosClie', 'Saldos_de_Clientes', 'VentasReportes', 'venSaldosClie', 1, 1, 'INF_venSaldosClie'
Execute genReportesGuardar 'comUltimasCompras', 'comUltimasCompras', 'Ultimas_Compras_por_Producto', 'ComprasReportes', 'comUltimasCompras', 1, 1, 'INF_comUltimasCompras'
Execute genReportesGuardar 'comCompRegistrados', 'comCompRegistrados', 'Analisis_de_Facturas_a_Recibir_Importaciones', 'ComprasReportes', 'comCompRegistrados', 1, 1, 'INF_comCompRegistrados'
Execute genReportesGuardar 'comPagosHabi', 'comPagosHabi', 'Informe_de_Pagos_Habilitados', 'ComprasReportes', 'comPagosHabi', 1, 1, 'INF_comPagosHabi'
Execute genReportesGuardar 'RankProv', 'RankProv', 'Ranking_de_Proveedores', 'ComprasReportes', 'RankProv', 1, 1, 'INF_RankProv'
Execute genReportesGuardar 'COMCATPROV', 'COMCATPROV', 'Catalogo_de_Proveedores', 'ComprasReportes', 'CatProv', 1, 1, 'INF_CatProv'
Execute genReportesGuardar 'COMEDOCTA', 'COMEDOCTA', 'Estado_de_Cuenta', 'ComprasReportes', 'ComEdocta', 1, 1, 'INF_COMEDOCTA'
Execute genReportesGuardar 'COMPOSFINANCIERADETA', 'COMPOSFINANCIERADETA', 'Posicion_Financiera_Detallada', 'ComprasReportes', 'ComPosfinancieraDeta', 1, 1, 'INF_ComPosfinancieraDeta'
Execute genReportesGuardar 'ComFactARecibirNac', 'ComFactARecibirNac', 'Facturas_A_Recibir', 'ComprasReportes', 'ComFactARecibirNac', 1, 1, 'INF_ComFactARecibirNac'
Execute genReportesGuardar 'ComSaldoXCuenta', 'ComSaldoXCuenta', 'Saldo_Por_Cuenta', 'ComprasReportes', 'ComSaldoXCuenta', 1, 1, 'Inf_comSaldoXCuenta'
Execute genReportesGuardar 'COMSALDOSPROV', 'COMSALDOSPROV', 'Saldo_de_Proveedores', 'ComprasReportes', 'SaldosProv', 1, 1, 'INF_SaldosProv'
Execute genReportesGuardar 'ComSubDiario', 'ComSubDiario', 'Sub_Diario_de_Compras', 'ComprasReportes', 'comSubDiario', 1, 1, 'INF_ComSubDiario'
Execute genReportesGuardar 'ComSubMayor', 'ComSubMayor', 'Sub_Mayor_De_Compras', 'ComprasReportes', 'ComSubMayor', 1, 1, 'INF_ComSubMayor'
Execute genReportesGuardar 'CONSUBDIARIO', 'CONSUBDIARIO', 'Sub Diario Contable', 'ContabilidadReportes', 'conSubDiario', 1, 1, 'INF_SUBDIARIO'
Execute genReportesGuardar 'STKXALMACEN', 'STKXALMACEN', 'Stock_Por_Almacen', 'InventariosReportes', 'StkxAlmacen', 1, 1, 'INF_StockxAlmacen'
Execute genReportesGuardar 'VENPEDIAUTORIZADOS', 'VENPEDIAUTORIZADOS', 'Pedidos_Autorizados', 'VentasReportes', 'VenPediAutorizados', 1, 1, 'INF_venPediAutorizados'
Execute genReportesGuardar 'VENPEDIPENDXVEND', 'VENPEDIPENDXVEND', 'Pedidos_Pendientes_por_Vendedor', 'VentasReportes', 'VenPediPendxVend', 1, 1, 'INF_venPedVenedor'
Execute genReportesGuardar 'VENPEDIRETXCRED', 'VENPEDIRETXCRED', 'PEDIDOS_RETENIDOS_POR_CEDITOS', 'VentasReportes', 'venPediRetxCred', 1, 1, 'INF_venPediRetCreditos'
Execute genReportesGuardar 'venPedEstados', 'venPedEstados', 'Estado_De_Pedidos', 'VentasReportes', 'venPedEstados', 1, 1, 'INF_venPedEstados'
Execute genReportesGuardar 'venPedArtPendDeta', 'venPedArtPendDeta', 'Pedidos_Pendientes', 'VentasReportes', 'venPedArtPendDeta', 1, 1, 'INF_venPedArtPendDeta'
Execute genReportesGuardar 'venPedRankCliente', 'venPedRankCliente', 'Ranking_De_Pedidos_De_Clientes', 'VentasReportes', 'venPedRankCliente', 1, 1, 'INF_venPedRankCliente'
Execute genReportesGuardar 'STKPRODSINMOVIMIENTOS', 'STKPRODSINMOVIMIENTOS', 'Productos sin Movimiento', 'InventariosReportes', 'StkProdSinMovimientos', 1, 1, 'INF_StkProdSinMovimientos'
Execute genReportesGuardar 'StkRotacion', 'StkRotacion', 'Rotacion_de_Productos', 'InventariosReportes', 'StkRotacion', 1, 1, 'INF_StkRotacion'
Execute genReportesGuardar 'VENLIBROS5', 'VENLIBROS5', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros5', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS5', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS6', 'VENLIBROS6', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros6', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS6', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS7', 'VENLIBROS7', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros7', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS7', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS8', 'VENLIBROS8', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros8', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS8', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS9', 'VENLIBROS9', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros9', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS9', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS10', 'VENLIBROS10', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros10', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS10', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS11', 'VENLIBROS11', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros11', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS11', 1, 'INF_venLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'VENLIBROS12', 'VENLIBROS12', 'Libro_Iva_Ventas', 'VentasReportes', 'venLibros12', 1, 1, 'INF_venLibros'
Execute genReportesSPGuardar 'VENLIBROS12', 1, 'INF_venLibrosCabecera', 'Cabecera'

Execute genReportesGuardar 'COMLIBROS', 'COMLIBROS', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS5', 'COMLIBROS5', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros5', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS5', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS6', 'COMLIBROS6', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros6', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS6', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS7', 'COMLIBROS7', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros7', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS7', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS8', 'COMLIBROS8', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros8', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS8', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS9', 'COMLIBROS9', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros9', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS9', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS10', 'COMLIBROS10', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros10', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS10', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS11', 'COMLIBROS11', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros11', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS11', 1, 'INF_comLibrosCabecera', 'Cabecera'
Execute genReportesGuardar 'COMLIBROS12', 'COMLIBROS12', 'Libro_Iva_Compras', 'ComprasReportes', 'comLibros12', 1, 1, 'INF_comLibros'
Execute genReportesSPGuardar 'COMLIBROS12', 1, 'INF_comLibrosCabecera', 'Cabecera'

Execute genReportesGuardar 'tesSubDiario', 'tesSubDiario', 'Sub_Diario_de_Tesoreria', 'TesoreriaReportes', 'tesSubDiario', 1, 1, 'INF_tesSubDiario'
execute genReportesGuardar 'COMORDENCOMP', 'COMORDENCOMP', 'Ordenes_de_Compra', 'ComprasReportes', 'comOrdenComp',1,1,'inf_comOrdenCompPrincipal', 'OC'
execute genReportesSPGuardar 'COMORDENCOMP', 1, 'inf_comOrdenCompCuerpo', 'Cuerpo'
Execute genReportesGuardar 'venEdoCuenta', 'venEdoCuenta', 'Estado_de_Cuenta', 'VentasReportes', 'venEdoCtaCCG', 1, 1, 'Inf_venEdoCta'
exec genReportesGuardar 'TESCOBRANZAS', 'TESCOBRANZAS', 'Cobranzas','TesoreriaReportes','tesCobranzas',1,1,'inf_tesCobranzasDatos', 'TES'
exec genReportesspGuardar 'TESCOBRANZAS',1,'inf_tesCobranzasCuerpo','Cuerpo'
exec genReportesspGuardar 'TESCOBRANZAS',2,'inf_tesCobranzasAdicional','Adicional'
exec genReportesGuardar 'TESPAGOSPROV', 'TESPAGOSPROV', 'Pagos_Proveedores','TesoreriaReportes','tesPagosProv',1,1,'inf_tesPagosProvDatos', 'TES'
exec genReportesspGuardar 'TESPAGOSPROV',1,'inf_tesPagosProvCuerpo','Cuerpo'
exec genReportesspGuardar 'TESPAGOSPROV',2,'inf_tesPagosProvAdicional','Adicional'
exec genReportesGuardar 'TESMOVIMIENTOSDH', 'TESMOVIMIENTOSDH', 'Otros_Movimientos','TesoreriaReportes','tesMovimientosDH',1,1,'inf_tesMovimientosDHPrincipal', 'TES'

exec genReportesspGuardar 'TESMOVIMIENTOSDH',1,'inf_tesCobranzasCuerpo','Debe'
exec genReportesspGuardar 'TESMOVIMIENTOSDH',2,'inf_tesPagosProvCuerpo','Haber'
exec genReportesspGuardar 'TESMOVIMIENTOSDH',3,'inf_tesMovimientosDHProve','Prove'

exec genReportesGuardar 'COMMOVPROVSS','COMMOVPROVSS','comMovProv','ComprasReportes','comMovProv',1,1,'inf_comMovProvPrincipal','COM'
exec genReportesSPGuardar 'COMMOVPROVSS',1,'inf_comMovProvAsiento','Asientos'
exec genReportesSPGuardar 'COMMOVPROVSS',2,'inf_comMovProvImpuestos','Impuestos'

exec genReportesGuardar 'COMMOVPROVCS','COMMOVPROVCS','comMovProvCS','ComprasReportes','comMovProvCS',1,1,'inf_comMovProvPrincipal','COM'
exec genReportesSPGuardar 'COMMOVPROVCS',1,'inf_comMovProvStock','Stock'
exec genReportesSPGuardar 'COMMOVPROVCS',2,'inf_comMovProvImpuestos','Impuestos'

exec genReportesGuardar 'COMMOVPROVOC','COMMOVPROVOC','comMovProvOC','ComprasReportes','comMovProvOC',1,1,'inf_comMovProvPrincipal','COM'
exec genReportesSPGuardar 'COMMOVPROVOC',1,'inf_comMovProvOC','Stock'
exec genReportesSPGuardar 'COMMOVPROVOC',2,'inf_comMovProvImpuestos','Impuestos'
exec genReportesSPGuardar 'COMMOVPROVOC',3,'inf_comMovProvSTR','OCSTR'

exec genReportesGuardar 'COMMOVPROVVOC','COMMOVPROVVOC','comMovProvVOC','ComprasReportes','comMovProvVOC',1,1,'inf_comMovProvPrincipal','COM'
exec genReportesSPGuardar 'COMMOVPROVVOC',1,'inf_comMovProvVOC','Stock'
exec genReportesSPGuardar 'COMMOVPROVVOC',2,'inf_comMovProvImpuestos','Impuestos'

exec genReportesGuardar 'COMMOVPROVEMB','COMMOVPROVEMB','comMovProvEMB','ComprasReportes','comMovProvEMB',1,1,'inf_comMovProvPrincipal','COM'
exec genReportesSPGuardar 'COMMOVPROVEMB',1,'inf_comMovProvEMBCuerpo','Stock'
exec genReportesSPGuardar 'COMMOVPROVEMB',2,'inf_comMovProvImpuestos','Impuestos'
exec genReportesSPGuardar'COMMOVPROVEMB',3,'inf_comMovPRovEMBGastos','Gastos'

Execute genReportesGuardar 'venEdoCta', 'venEdoCta', 'Estado_de_Cuenta', 'VentasReportes', 'venEdoCta', 1, 1, 'Inf_venEdoCta'


Execute genReportesGuardar 'CONMAYOR', 'CONMAYOR', 'Mayor Contable Detallado', 'ContabilidadReportes', 'conMayor', 1, 1, 'Inf_conMayor'
Execute genReportesGuardar 'CONMAYORRES', 'CONMAYORRES', 'Mayor Contable Resumido', 'ContabilidadReportes', 'conMayorRes', 1, 1, 'Inf_conMayorRes'

Execute genReportesGuardar 'STKANAMOVISTOCK', 'STKANAMOVISTOCK', 'Analisis de Movimientos de Stock', 'InventariosReportes', 'stkAnaMovimientos', 1, 1, 'INF_stkAnamoviStock'

Execute genReportesGuardar 'STKAFECHA', 'STKAFECHA', 'Stock a Fecha', 'InventariosReportes', 'stkAFecha', 1, 1, 'INF_stkAFecha'
Execute genReportesGuardar 'StkSubDiario', 'StkSubDiario', 'Sub Diario de Inventarios', 'InventariosReportes', 'StkSubDiario', 1, 1, 'INF_StkSubDiario'
Execute genReportesGuardar 'StkSubMayor', 'StkSubMayor', 'Mayor De Stock', 'InventariosReportes', 'StkSubMayor', 1, 1, 'INF_StkSubMayor'

exec genReportesGuardar  'STKMOVICABECD','STKMOVICABECD', 'Cambio_de_Deposito','InventariosReportes','stkMoviCabeCD',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKMOVICABECD',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKMOVICABECD',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKMOVICABECD',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKMOVICABECD',4,'inf_stkEnTransito','EnTransito'

 
exec genReportesGuardar 'STKMOVICAUSA','STKMOVICAUSA','Movimientos_por_Causas','InventariosReportes','stkMoviCausa',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKMOVICAUSA',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKMOVICAUSA',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKMOVICAUSA',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKMOVICAUSA',4,'inf_stkMoviCausa','stkMoviCausa'

exec genReportesGuardar 'STKDEVPROV','STKDEVPROV','Devoluciones_a_Proveedores','InventariosReportes','stkDevolucionesProv',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKDEVPROV',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKDEVPROV',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKDEVPROV',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKDEVPROV',4,'inf_stkOrdenComp','OrdenComp'

exec genReportesGuardar 'STKENTREMB','STKENTREMB','Entradas_Por_Embarque','InventariosReportes','stkEntradasEmbarque',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKENTREMB',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKENTREMB',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKENTREMB',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKENTREMB',4,'inf_stkEmbarque','Embarque'

exec genReportesGuardar 'STKREMIPROV','STKREMIPROV','Remitos_Proveedores','InventariosReportes','stkRemiProv',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKREMIPROV',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKREMIPROV',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKREMIPROV',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKREMIPROV',4,'inf_stkRemitos','Remitos'

exec genReportesGuardar 'STKREMICLIE','STKREMICLIE','Remitos_Clientes','InventariosReportes','stkRemiClie',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKREMICLIE',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKREMICLIE',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKREMICLIE',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKREMICLIE',4,'inf_stkRemiClie','Remitos'
exec genReportesSPGuardar 'STKREMICLIE',5,'inf_stkMoviCausa','Causa'

Execute genReportesGuardar 'StkRankConsumo', 'StkRankConsumo', 'Ranking De Consumo', 'InventariosReportes', 'StkRankConsumo', 1, 1, 'INF_StkRankConsumo'
Execute genReportesGuardar 'stkMercTransLoc', 'stkMercTransLoc', 'Mercancias En Transito', 'InventariosReportes', 'stkMercTransLoc', 1, 1, 'INF_stkMercTransLoc'

Execute genReportesGuardar 'venPedArtPendRes', 'venPedArtPendRes', 'Articulos Pedidos Pendientes', 'VentasReportes', 'venPedArtPendRes', 1, 1, 'INF_venPedArtPendRes'
Execute genReportesGuardar 'venPedCliente', 'venPedCliente', 'Pedidos Ingresados por Cliente', 'VentasReportes', 'venPedCliente', 1, 1, 'INF_venPedCliente'
Execute genReportesGuardar 'venMercAutorizada', 'venMercAutorizada', 'Mercancia Autorizada', 'VentasReportes', 'venMercAutorizada', 1, 1, 'INF_venMercAutorizada'

exec genReportesGuardar 'VENFACTURASMX', 'VENFACTURASMX','FacturacionMX','VentasReportes','venFacturaMX',1,1,'INF_venFactuCabe', 'FC'
exec genReportesSPGuardar 'VENFACTURASMX',1,'INF_venFactuCuerpo','Cuerpo'
exec genReportesSPGuardar 'VENFACTURASMX',2,'INF_venFactuImpuestos','Impuestos'
exec genReportesSPGuardar 'VENFACTURASMX',3,'INF_venFactuComRel','ComRel'
exec genReportesSPGuardar 'VENFACTURASMX',4,'INF_venFactuINE','Ine'
exec genReportesSPGuardar 'VENFACTURASMX',5,'INF_venFactuExpedicion','Expedicion'
exec genReportesSPGuardar 'VENFACTURASMX',6,'INF_venFactuCartaPorte','CartaPorte'
exec genReportesSPGuardar 'VENFACTURASMX',7,'INF_venFactuOrigenes','Origenes'
exec genReportesSPGuardar 'VENFACTURASMX',8,'INF_venFactuDestinos','Destinos'
exec genReportesSPGuardar 'VENFACTURASMX',9,'INF_venFactuCPMercancias','Mercancias'

-- 16/5/18
Execute genReportesGuardar 'VENPEDARTPENDRES', 'VENPEDARTPENDRES', 'Articulos_Pedidos_Pendientes_Resumen', 'VentasReportes', 'venPedArtPendRes', 1, 1, 'INF_venPedArtPendRes'


Execute genReportesGuardar 'stkSeguimientoDespa', 'stkSeguimientoDespa', 'Seguimiento de Despachos Importacion', 'InventariosReportes', 'stkSeguimientoDespa', 1, 1, 'INF_stkSeguimientoDespa'
Execute genReportesGuardar 'stkSeguimientoSerie', 'stkSeguimientoSerie', 'Seguimientos de Numeros de Serie/Lote', 'InventariosReportes', 'stkSeguimientoSerie', 1, 1, 'INF_stkSeguimientoSerie'
Execute genReportesGuardar 'stkReposicion', 'stkReposicion', 'Reposicion de Stock', 'InventariosReportes', 'stkReposicion', 1, 1, 'INF_stkReposicion'
Execute genReportesGuardar 'stkExceso', 'stkExceso', 'Exceso de Stock', 'InventariosReportes', 'stkExceso', 1, 1, 'INF_stkExceso'

Execute genReportesGuardar 'CONBALANCE', 'CONBALANCE', 'Balance', 'ContabilidadReportes', 'Balance', 1, 1, 'inf_Balance'
Execute genReportesGuardar 'CONEDORES', 'CONEDORES', 'Estado de Resultados','ContabilidadReportes', 'conEdoRes',1,1,'Inf_conEstadoRes'

execute genReportesGuardar 'venCorteDocumentacion', 'venCorteDocumentacion', 'Corte de Documentacion','VentasReportes','venCorteDocumentacion',1,1,'inf_venSegSTR'



Execute genReportesGuardar 'stkOtrosMovimientos', 'stkOtrosMovimientos', 'Otros Movimientos', 'InventariosReportes', 'stkOtrosMovimientos', 1, 1, 'INF_stkOtrosMovimientos'
Execute genReportesGuardar 'stkTraspasosPend', 'stkTraspasosPend', 'Traspasos Pendientes', 'InventariosReportes', 'stkTraspasosPend', 1, 1, 'INF_stkTraspasosPend'
Execute genReportesGuardar 'stkInvIngresado', 'stkInvIngresado', 'Informe Inventario Ingresado', 'InventariosReportes', 'stkInvIngresado', 1, 1, 'INF_stkInvIngresado'


Execute genReportesGuardar 'stockNegativo', 'stockNegativo', 'Informe Stock Negativo', 'InventariosReportes', 'StockNegativo', 1, 1, 'INF_StockNegativo'

Execute genReportesGuardar 'stkInvAjustes', 'stkInvAjustes', 'Informe de Ajustes Necesarios', 'InventariosReportes', 'stkInvAjustes', 1, 1, 'INF_stkInvAjustes'
Execute genReportesGuardar 'stkMaxMin', 'stkMaxMin', 'Maximos y Minimos', 'InventariosReportes', 'stkMaxMin', 1, 1, 'INF_stkMaxMin'
Execute genReportesGuardar 'stkMercTransImp', 'stkMercTransImp', 'Mercancia en Transito Importacion', 'InventariosReportes', 'stkMercTransImp', 1, 1, 'INF_stkMercTransImp'
Execute genReportesGuardar 'comPrevCompras', 'comPrevCompras', 'Prevision de Compras', 'ComprasReportes', 'comPrevCompras', 1, 1, 'INF_comPrevCompras'
Execute genReportesGuardar 'MatrizDistribCantidad', 'MatrizDistribCantidad', 'Matriz de Distribucion Cantidad', 'InventariosReportes', 'MatrizDistribCantidad', 1, 1, 'INF_MatrizDistribCantidad'
Execute genReportesGuardar 'MatrizDistribMonto', 'MatrizDistribMonto', 'Matriz de Distribucion Monto', 'InventariosReportes', 'MatrizDistribMonto', 1, 1, 'INF_MatrizDistribMonto'
Execute genReportesGuardar 'MatrizDistribStock', 'MatrizDistribStock', 'Matriz de Distribucion Stock', 'InventariosReportes', 'MatrizDistribStock', 1, 1, 'INF_MatrizDistribStock'

Execute genReportesGuardar 'genPermisos', 'genPermisos', 'Permisos por Usuario', 'GeneralesReportes', 'genPermisos', 1, 1, 'Inf_genPermisos'
Execute genReportesGuardar 'genUsuGrupo', 'genUsuGrupo', 'Usuarios por Grupo', 'GeneralesReportes', 'genUsuGrupo', 1, 1, 'Inf_genUsuGrupo'


exec genReportesGuardar 'tesIdentifica','tesIdentifica','Movimientos por Cartera','TesoreriaReportes','tesCarteras',1,1,'inf_tesIdentifica'




Execute genReportesGuardar 'ComFactARecibirImp', 'ComFactARecibirImp', 'Facturas a Recibir Importaciones', 'ComprasReportes', 'ComFactARecibirImp', 1, 1, 'Inf_ComFactARecibirImp'


exec genReportesGuardar 'VENFACTURASAR', 'VENFACTURASAR', 'FacturacionAR','VentasReportes','venFacturaAR',1,1,'INF_venFactuCabe', 'FC'
exec genReportesSPGuardar 'VENFACTURASAR',1,'INF_venFactuCuerpo','Cuerpo'
exec genReportesSPGuardar 'VENFACTURASAR',2,'INF_venFactuImpuestos','Impuestos'

Execute genReportesGuardar 'TesCfdiCobranza', 'TesCfdiCobranza', 'CFDI Complemento de Pago', 'TesoreriaReportes', 'TesCfdiCobranza', 1, 1, 'Inf_CfdiCobranzaCabe'
Execute genReportesSPGuardar  'TesCfdiCobranza', 1, 'Inf_CfdiCobranzaEmisor', 'Emisor'
Execute genReportesSPGuardar  'TesCfdiCobranza', 2, 'Inf_CfdiCobranzaReceptor', 'Receptor'
Execute genReportesSPGuardar  'TesCfdiCobranza', 3, 'Inf_CfdiCobranzaConcepto', 'Conceptos'
Execute genReportesSPGuardar  'TesCfdiCobranza', 4, 'Inf_CfdiCobranzaComplementoPago', 'Pagos'
Execute genReportesSPGuardar  'TesCfdiCobranza', 5, 'Inf_CfdiCobranzaRel', 'Relacionado'
Execute genReportesSPGuardar  'TesCfdiCobranza', 6, 'Inf_CfdiCobranzaRelCuerpo', 'RelacionadoCuerpo'
Execute genReportesSPGuardar  'TesCfdiCobranza', 7, 'Inf_CfdiCobranzaComplemento', 'Complemento'

Execute genReportesGuardar 'venImpCobrados', 'venImpCobrados', 'Impuestos Cobrados', 'VentasReportes', 'venImpCobrados', 1, 1, 'Inf_venImpCobrados'
Execute genReportesGuardar 'comImpPagados', 'comImpPagados', 'Impuestos Pagados', 'ComprasReportes', 'comImpPagados', 1, 1, 'Inf_comImpPagados'


Execute genReportesGuardar 'venAplicaciones', 'venAplicaciones', 'Aplicaciones de Ventas', 'VentasReportes', 'venAplicaciones', 1, 1, 'INF_venAplicaciones'
Execute genReportesGuardar 'venSubDiario', 'venSubDiario', 'Facturas_con_Productos_Pendientes_de_Entrega', 'VentasReportes', 'venSubDiario', 1, 1, 'INF_venSubDiario'
Execute genReportesGuardar 'venSubMayor', 'venSubMayor', 'Informe_Sub_Mayor_de_Ventas', 'VentasReportes', 'venSubMayor', 1, 1, 'INF_venSubMayor'
Execute genReportesGuardar 'venFactProdPend', 'venFactProdPend', 'Facturas_con_Productos_Pendientes_de_Entrega', 'VentasReportes', 'venFactProdPend', 1, 1, 'INF_venFactProdPend'
Execute genReportesGuardar 'venRemiPendFact', 'venRemiPendFact', 'Remisiones_Pendientes_de_Facturar', 'VentasReportes', 'venRemiPendFact', 1, 1, 'INF_venRemiPendFact'
Execute genReportesGuardar 'venRemiFactAsoc', 'venRemiFactAsoc', 'Remisiones_y_Facturas_Asociadas', 'VentasReportes', 'venRemiFactAsoc', 1, 1, 'INF_venRemiFactAsoc'
Execute genReportesGuardar 'venVentasProducto', 'venVentasProducto', 'Ventas_por_Producto', 'VentasReportes', 'venVentasProducto', 1, 1, 'INF_venVentasProducto'
Execute genReportesGuardar 'venContribMarg', 'venContribMarg', 'Contribucion_Marginal', 'VentasReportes', 'venContribMarg', 1, 1, 'INF_venContribMarg'

EXECUTE genReportesGuardar 'venReparto', 'venReparto', 'Repartos','VentasReportes','venReparto',1,1,'Inf_venReparto'

Execute genReportesGuardar 'venPosFinanciera', 'venPosFinanciera', 'Posicion_Financiera', 'VentasReportes', 'venPosFinanciera', 1, 1, 'INF_venPosFinanciera'
Execute genReportesGuardar 'venPosFinancieraDeta', 'venPosFinancieraDeta', 'Posicion_Financiera_Detallado', 'VentasReportes', 'venPosFinancieraDeta', 1, 1, 'INF_venPosFinancieraDeta'

Execute genReportesGuardar 'tesRendicionCaja', 'tesRendicionCaja', 'Rendicion_de_Caja', 'TesoreriaReportes', 'tesRendicionCaja', 1, 1, 'INF_tesRendicionCaja'
exec genReportesSPGuardar 'tesRendicionCaja',1, 'INF_tesRendicionCajaMov','MovDia'
exec genReportesSPGuardar 'tesRendicionCaja',2, 'INF_tesRendicionCajaSF','SaldoFinal'

execute genReportesGuardar 'tesSubMayor','tesSubMayor','SubMayor','TesoreriaReportes','tesSubMayor',1,1,'INF_tesSubMayor'
Execute genReportesGuardar 'conSituPatri', 'conSituPatri', 'Situacion_Patrimonial', 'ContabilidadReportes', 'conSituPatri', 1, 1, 'INF_SituPatri3'

Execute genReportesGuardar 'CONSUBDIARIORES', 'CONSUBDIARIORES', 'Sub Diario Contable Resumen', 'ContabilidadReportes', 'conSubDiarioRes', 1, 1, 'Inf_conSubDiarioRes'

Execute genReportesGuardar 'stkRemiPendFact', 'stkRemiPendFact', 'Remitos Pendientes de Facturar', 'InventariosReportes', 'stkRemiPendFact', 1, 1, 'INF_stkRemiPendFact'
execute genReportesGuardar 'tesCobraProv', 'tesCobraProv', 'Cobranzas a Proveedores', 'TesoreriaReportes', 'tesCobranzasProveedores', 1, 1, 'inf_tesCobraProvDatos'
execute genReportesSPGuardar 'tesCobraProv', 1, 'inf_tesCobraProvCuerpo','Cuerpo'
execute genReportesSPGuardar 'tesCobraProv', 2, 'inf_tesCobraProvAdicional','Adicional'

execute genReportesGuardar 'tesLibroBanco', 'tesLibroBanco', 'Libro de Banco', 'TesoreriaReportes', 'tesLibroBanco', 1, 1, 'inf_tesLibroBanco'

Execute genReportesGuardar 'tesIngCobranzas', 'tesIngCobranzas', 'Ingresos_por_Cobranzas', 'TesoreriaReportes', 'tesIngCobranzas', 1, 1, 'INF_tesIngCobranzas'
Execute genReportesGuardar 'tesConcBancaria', 'tesConcBancaria', 'Conciliacion_Bancaria', 'TesoreriaReportes', 'tesConcBancaria', 1, 1, 'INF_tesConcBancaria'

execute genReportesGuardar 'ComOrdenCompra', 'ComOrdenCompra', 'Ordenes_de_Compra', 'ComprasReportes', 'ComOrdenCompra',1,1,'INF_comOrdenCompra'



exec genReportesGuardar 'COMMOVPROVDIFP','COMMOVPROVDIFP','Movimientos por Diferencia en Precio','ComprasReportes','comMovProvDIFP',1,1,'inf_comMovProvPrincipal'
exec genReportesSPGuardar 'COMMOVPROVDIFP',1,'inf_comMovProvDifP','Stock'
exec genReportesSPGuardar 'COMMOVPROVDIFP',2,'inf_comMovProvImpuestos','Impuestos'


exec genReportesGuardar 'COMMOVPROVREMI','COMMOVPROVREMI','Movimientos por Remito Pendiente','ComprasReportes','comMovProvRemi',1,1,'inf_comMovProvPrincipal'
exec genReportesSPGuardar 'COMMOVPROVREMI',1,'inf_comMovProvRemi','Stock'
exec genReportesSPGuardar 'COMMOVPROVREMI',2,'inf_comMovProvImpuestos','Impuestos'


exec genReportesGuardar 'stkMoviOC','stkMoviOC','Movimientos_por_Orden_Compra','InventariosReportes','stkMoviOC',1,1,'inf_stkMoviCabeH'
exec genReportesSPGuardar 'stkMoviOC',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'stkMoviOC',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'stkMoviOC',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'stkMoviOC',4,'inf_stkMoviOC','OrdenCompra'


EXEC genReportesGuardar 'venMovimientosXSubTipoMov','venMovimientosXSubTipoMov','Por_SubTipo_de_Movimiento','VentasReportes', 'venMovimientosXSubTipoMov',1,1,'inf_venMovimientosXSubTipoMov'
EXEC genReportesGuardar 'venMovimientosXSubTipoMovResumen','venMovimientosXSubTipoMovResumen','Por_SubTipo_de_Movimiento','VentasReportes', 'venMovimientosXSubTipoMovResumen',1,1,'inf_venMovimientosXSubTipoMov'

EXEC genReportesGuardar 'tesMovimientosXCartera','tesMovimientosXCartera','Por_Cartera','TesoreriaReportes', 'tesMovimientosXCartera',1,1,'inf_tesMovXCartera'
EXEC genReportesGuardar 'tesCheqPropImpresion','tesCheqPropImpresion','Impresion_de_cheques','TesoreriaReportes', 'tesCheqPropImpresion',1,1,'inf_tesCheqPropImpresion'


EXEC genReportesGuardar 'conAsientos','conAsientos','Asientos_Contables','ContabilidadReportes', 'conAsientos',1,1,'inf_conAsientosPrincipal'
exec genReportesSPGuardar 'conAsientos',1,'inf_conAsientosCuerpo','Cuerpo'

EXEC genReportesGuardar 'conBalanzaXCentro','conBalanzaXCentro','Balanza_por_Centro_de_Costos','ContabilidadReportes', 'conBalanzaXCentro',1,1,'inf_conBalanzaXCentro'

EXEC genReportesGuardar 'tesEstadoDeCuenta','tesEstadoDeCuenta','Estado_de_Cuentas','TesoreriaReportes', 'tesEstadoDeCuenta',1,1,'inf_tesEstadoCuenta'

EXEC genReportesGuardar 'comFactProvMenores','comFactProvMenores','Factura_de_Proveedores_Menores','ComprasReportes', 'comFactProvMenores',1,1,'inf_comFactProvMenores'
EXEC genReportesGuardar 'tesRetencion1','tesRetencion1','Retencion_IIBB','TesoreriaReportes', 'tesRetencion1',1,1,'inf_tesRetencion1', 'RETPROV'

EXEC genReportesGuardar 'tesCheqPropImpresionCitiAR','tesCheqPropImpresionCitiAR','Impresion_de_cheques_Citi_AR','TesoreriaReportes', 'tesCheqPropImpresionCitiAR',1,1,'inf_tesCheqPropImpresion','ImpCheq', 'Custom', 800, 1200

EXEC genReportesGuardar   'conCatalgoCuentas','conCatalgoCuentas','Catalogo_de_Cuentas','ContabilidadReportes', 'conCuentas',1,1,'Inf_CatalgoCuentas'

EXEC genReportesGuardar 'comEmbarques', 'comEmbarques', 'Embarques','ComprasReportes','comEmbarques',1,1,'Inf_comEmbarques'
EXEC genReportesSPGuardar 'comEmbarques',1,'Inf_comEmbarquesCuerpo','Cuerpo'
EXEC genReportesSPGuardar 'comEmbarques',2,'Inf_comEmbarquesGastos','Gastos'
EXEC genReportesSPGuardar 'comEmbarques',3,'Inf_comEmbarquesSegmento','Segmento'

EXEC genReportesGuardar 'venPedidos', 'venPedidos', 'Pedidos','VentasReportes','venPedidos',1,1,'INF_venPediCabe'
EXEC genReportesSPGuardar 'venPedidos',1,'INF_venPediCuerpo','Cuerpo'

EXEC genReportesGuardar 'impSifere', 'ImpSifere', 'Sifere','ImpuestosReportes','impSifere',1,1,'Inf_ImpSifereRet'
EXEC genReportesSPGuardar 'impSifere',1,'Inf_ImpSiferePerc','Percepciones'

EXEC genReportesGuardar 'venVentasPeriodo', 'venVentasPeriodo', 'Ventas_por_Periodo', 'VentasReportes', 'venVentasPeriodo', 1, 1, 'Inf_venVentasPeriodo'
Exec genReportesGuardar 'VentasxCliente','VentasxCliente', 'Ventas_por_Cliente', 'VentasReportes', 'VentasxCliente', 1, 1, 'Inf_VentaxCliente'
 
Exec genReportesGuardar 'comCostosImportacion','comCostosImportacion', 'Costos_Importacion','ComprasReportes','CostoImportacion',1,1,'Inf_comCostosImprtacion'

Exec genReportesGuardar 'comComposicionSaldos','comComposicionSaldos', 'Composicion_de_Saldos_Compras','ComprasReportes','comCompSaldo',1,1,'Inf_comCompSaldo'
Exec genReportesGuardar 'venComposicionSaldos','venComposicionSaldos', 'Composicion_de_Saldos_Ventas','VentasReportes','venCompSaldo',1,1,'Inf_venCompSaldo'




Execute genReportesGuardar 'venVentasProductoRes', 'venVentasProductoRes', 'Ventas_por_Producto_Resumen', 'VentasReportes', 'venVentasProductoRes', 1, 1, 'INF_venVentasProductoRes'
Execute genReportesGuardar 'venVentasProductoResFam', 'venVentasProductoResFam', 'Ventas_por_Producto_Resumen_Familia', 'VentasReportes', 'venVentasProductoRes1', 1, 1, 'INF_venVentasProductoResFam'
Execute genReportesGuardar 'venVentasProductoResGru', 'venVentasProductoResGru', 'Ventas_por_Producto_Resumen_Grupo', 'VentasReportes', 'venVentasProductoRes1', 1, 1, 'INF_venVentasProductoResGru'
EXEC genReportesGuardar 'venVentasPeriodoRes', 'venVentasPeriodoRes', 'Ventas_por_Periodo_Resumido', 'VentasReportes', 'venVentasPeriodoRes', 1, 1, 'Inf_venVentasPeriodo'
-- V2

Execute genReportesGuardar  'AfiDepreciaciones', 'AfiDepreciaciones', 'Depreciaciones', 'ActivoFijoReportes', 'AfiDepreciaciones', 1, 1, 'INF_AMORTIZACIONES'
Execute genReportesGuardar  'AfiDepreciacionesRes', 'AfiDepreciacionesRes', 'Depreciaciones', 'ActivoFijoReportes', 'AfiDepreciacionesRes', 1, 1, 'INF_AMORTIZACIONES'

Execute genReportesGuardar  'PRORECETAS', 'PRORECETAS', 'Recetas', 'ProduccionReportes', 'proRecetas', 1, 1, 'INF_proRecetasPrincipal'

Execute genReportesGuardar  'proExplosionProd', 'proExplosionProd', 'Explosion de Un Producto', 'ProduccionReportes', 'proRecetaExplosion', 1, 1, 'inf_proRecetaExplosion'
Execute genReportesSPGuardar 'proExplosionProd',1, ' ', 'Productos'
Execute genReportesSPGuardar 'proExplosionProd',2, ' ', 'Trabajos3'
Execute genReportesSPGuardar 'proExplosionProd',3, ' ', 'Recursos'

Execute genReportesGuardar  'proExplosionPrograma', 'proExplosionPrograma', 'Explosion de Un Programa', 'ProduccionReportes', 'proExplosionPrograma', 1, 1, ' '
Execute genReportesSPGuardar 'proExplosionPrograma',1, ' ', 'Productos'
Execute genReportesSPGuardar 'proExplosionPrograma',2, ' ', 'Trabajos3'
Execute genReportesSPGuardar 'proExplosionPrograma',3, ' ', 'Recursos'


Execute genReportesGuardar  'proFaltantes', 'proFaltantes', 'Faltantes Stock', 'ProduccionReportes', 'proFaltantes', 1, 1, ' '
Execute genReportesSPGuardar 'proFaltantes',1, ' ', 'Productos'


Execute genReportesGuardar  'proFechasMRP', 'proFechasMRP', 'Fechas MRP', 'ProduccionReportes', 'proFechasMRP', 1, 1, ' '
Execute genReportesSPGuardar 'proFechasMRP',1, ' ', 'Productos'


Execute genReportesGuardar  'CadenaProduccion', 'CadenaProduccion', 'Cadena_de_Produccion', 'ProduccionReportes','CadenaProduccion', 1, 1, 'INF_proCadenaProduccion'
Execute genReportesGuardar  'proUsoUnProducto', 'proUsoUnProducto', 'Uso de un Producto', 'ProduccionReportes','proUsoUnProducto', 1, 1, 'INF_proUsoUnProducto'

Execute genReportesGuardar  'proPrograma', 'proPrograma', 'Informe de Programa', 'ProduccionReportes', 'proPrograma', 1, 1,'inf_proPrograma'
Execute genReportesGuardar  'proTrabajosCP', 'proTrabajosCP', 'Explosion de Un Producto', 'ProduccionReportes','proTrabajosCP', 1, 1,'inf_proTrabajosCP'
Execute genReportesGuardar  'proTrabajosCPDeta', 'proTrabajosCPDeta', ' Trabajos_por_Centro_Productivo_Detallado', 'ProduccionReportes','proTrabajosCPDeta', 1, 1,'inf_proTrabajosCPDeta'
Execute genReportesGuardar  'proTrabajosRecu', 'proTrabajosRecu', ' Trabajos_por_Recurso', 'ProduccionReportes','proTrabajosRecu', 1, 1,'inf_proTrabajosRecu'


Execute genReportesGuardar  'proTrabajosProv', 'proTrabajosProv', 'Trabajos_por_Proveedor', 'ProduccionReportes','proTrabajosProv', 1, 1,'inf_proTrabajosProv'
Execute genReportesGuardar  'proConsMateriales', 'proConsMateriales', 'Consumos_para_el_Proveedor_Interno', 'ProduccionReportes','proConsMateriales', 1, 1,'inf_proConsMateriales'
Execute genReportesGuardar  'proOrdenOrigen', 'proOrdenOrigen', 'Origen_de_Ordenes_de_Produccion', 'ProduccionReportes','proOrdenOrigen', 1, 1,'inf_proOrdenOrigen'
Execute genReportesGuardar  'proMovStockOrden', 'proMovStockOrden', 'Movimientos_de_Stock_por_Orden_de_Produccion', 'ProduccionReportes','proMovStockOrden', 1, 1,'inf_proMovStockOrden'

Execute genReportesGuardar  'proProduccionesPend', 'proProduccionesPend', 'Producciones_Pendientes', 'ProduccionReportes','proProduccionesPend', 1, 1,'inf_proProduccionesPend'
Execute genReportesGuardar  'proProduccionesPeriodo', 'proProduccionesPeriodo', 'Producciones_del_Periodo', 'ProduccionReportes','proProduccionesPeriodo', 1, 1,'inf_proProduccionesPeriodo'
Execute genReportesGuardar  'proEficiencia', 'proEficiencia', 'Eficiencia', 'ProduccionReportes','proEficiencia', 1, 1,'inf_proEficiencia'

Execute genReportesGuardar  'proCausasMov', 'proCausasMov', 'Ineficiencias_por_Causa', 'ProduccionReportes','proCausasMov', 1, 1,'inf_proCausasMov'
Execute genReportesGuardar  'proCostos', 'proCostos', 'Costo', 'ProduccionReportes','proCostos', 1, 1,'inf_proCostos'
Execute genReportesGuardar  'proCostosPorOrden', 'proCostosPorOrden', 'Costos_por_Orden_de_Produccion', 'ProduccionReportes','proCostosPorOrden', 1, 1,'inf_proCostosPorOrden'



Execute genReportesGuardar  'SUERECIBO', 'SUERECIBO', 'Recibo de Sueldos', 'SueldosReportes','sueReciboMX', 1, 1,'Inf_SueRecibosCabe'
Execute genReportesSPGuardar 'SUERECIBO',1, 'Inf_SueRecibosCuerpo', 'Cuerpo'
Execute genReportesSPGuardar 'SUERECIBO',2, 'Inf_SueRecibosComple', 'sueRecibosComple'

Execute genReportesGuardar  'SUERECIBOGEN', 'SUERECIBOGEN', 'Recibo de Sueldos Generico', 'SueldosReportes','sueRecibo', 1, 1,'Inf_SueRecibos'


Execute genReportesGuardar  'sueConceptosRes', 'sueConceptosRes', 'Conceptos_Resumido', 'SueldosReportes','sueConceptosLiqRes', 1, 1,'Inf_sueConceptosLiqRes'
Execute genReportesGuardar  'sueConceptosDet', 'sueConceptosDet', 'Conceptos_Detallado', 'SueldosReportes','sueConceptosLiqDet', 1, 1,'Inf_sueConceptosLiqDet'
Execute genReportesGuardar 'sueNomina','sueNomina','Nomina','SueldosReportes','sueNomina',1,1,'inf_sueNomina'
Execute genReportesGuardar 'sueNetos','sueNetos','Sueldos Netos','SueldosReportes','sueNetos',1,1,'inf_sueNetos'
Execute genReportesGuardar 'sueDescTope','sueDescTope','Decuentos por Tope','SueldosReportes','sueDescTope',1,1,'inf_sueDescTope'
Execute genReportesGuardar 'sueEmpleadosMX','sueEmpleadosMX','Empleados MX','SueldosReportes','sueEmpleadosMX',1,1,'inf_sueEmpleadosMX'
Execute genReportesGuardar  'sueConceptos', 'sueConceptos', 'Conceptos', 'SueldosReportes','sueConceptos', 1, 1,'Inf_sueConceptos'
Execute genReportesGuardar  'sueSubDiario', 'sueSubDiario', 'Sub Diario', 'SueldosReportes','sueSubDiario', 1, 1,'Inf_sueSubDiario'
Execute genReportesGuardar  'sueSubMayor', 'sueSubMayor', 'Sub Mayor', 'SueldosReportes','sueSubMayor', 1, 1,'Inf_sueSubMayor'
Execute genReportesGuardar  'sueDetAsiConc', 'sueDetAsiConc', 'Detalle Asiento Concepto', 'SueldosReportes','sueDetAsiConc', 1, 1,'Inf_sueDetAsiConc'


Execute genReportesGuardar  'COMREQINTERNO', 'COMREQINTERNO', 'Requerimientos Internos', 'ComprasReportes','comReqInterno', 1, 1,'inf_comReqInternoPrincipal'
Execute genReportesSPGuardar 'COMREQINTERNO',1, 'inf_comReqInternoCuerpo', 'Cuerpo'


EXEC genReportesGuardar 'venCotizaciones', 'venCotizaciones', 'Cotizaciones','VentasReportes','venCotizaciones',1,1,'INF_venCotizPrincipal'
EXEC genReportesSPGuardar 'venCotizaciones',1,'INF_venCotizCuerpo','Cuerpo'
EXEC genReportesSPGuardar 'venCotizaciones',2,'INF_venCotizExpedi','Expedicion'

EXEC genReportesGuardar 'unidadesvend', 'unidadesvend', 'Unidades_Vendidas','VentasReportes','unidadesvend',1,1,'INF_venunidadesvend'


EXEC genReportesGuardar 'stkXUbicacion', 'stkXUbicacion', 'Stock_por_Ubicacion','InventariosReportes','stkXUbicacion',1,1,'INF_StockxUbicacion'


EXEC genReportesGuardar 'conInfDefiniblesMensual', 'conInfDefiniblesMensual', 'Definible_Mensual','ContabilidadReportes','conInfDefiniblesMensual',1,1,''
Execute genReportesSPGuardar 'conInfDefiniblesMensual',1, '', 'Cabecera'



EXEC genReportesGuardar 'conInfDefMes', 'conInfDefMes', 'Definible_del_Mes','ContabilidadReportes','conInfDefMes',1,1,''
Execute genReportesSPGuardar 'conInfDefMes',1, '', 'Cabecera'

EXEC genReportesGuardar 'conInfDefMesAA', 'conInfDefMesAA', 'Definible_del_Mes_AA','ContabilidadReportes','conInfDefMesAA',1,1,''
Execute genReportesSPGuardar 'conInfDefMesAA',1, '', 'Cabecera'


EXEC genReportesGuardar   'conInfAjustesAxiMx', 'conInfAjustesAxiMx', 'Ajuste Por Inflacion Mx','ContabilidadReportes','conAjusteAxiMx',1,1,'INF_PapelTrabajo1'
Execute genReportesSPGuardar 'conInfAjustesAxiMx',1, 'INF_PapelTrabajo1Ind', 'Indices'

EXEC genReportesGuardar 'tesMovporSubTipo', 'tesMovporSubTipo', 'Movimientos de Tesoreria por SubTipo','TesoreriaReportes','tesMovPorSubTipo',1,1,'inf_tesMovporSubTipo'


EXEC genReportesGuardar   'conComprasEjercicio', 'conComprasEjercicio', 'Compras Ejercicio','ContabilidadReportes','conComprasEjercicio',1,1,'Inf_ComprasEjercicio'


Execute genReportesGuardar 'suePlantilla', 'suePlantilla', 'Plantilla de Centros', 'SueldosReportes', 'suePlantilla', 1, 1, 'inf_suePlantilla'
Execute genReportesGuardar 'suePlantillaDetalle', 'suePlantillaDetalle', 'Plantilla de Centros Detallado', 'SueldosReportes', 'suePlantillaDetalle', 1, 1, 'inf_suePlantillaDetalle'

execute genReportesGuardar  'SolicitudGas', 'SolicitudGas', 'Solicitud_Gastos','TesoreriaReportes', 'tesSolicutudGastos', 0, 1, 'INF_tesSolicutudGastos'
execute genReportesGuardar  'SolicitudGasDeta', 'SolicitudGasDeta', 'Solicitud_Gastos_Detallado','TesoreriaReportes', 'tesSolicutudGastosDeta', 0, 1, 'INF_tesSolicutudGastos'

Update genreportes set TipoReporte = 'TES' WHERE Reporte_Id IN ('TESCOBRANZAS','TESPAGOSPROV','TESMOVIMIENTOSDH')

execute genReportesGuardar  'comReqInternoDet', 'comReqInternoDet', 'Requerimientos_Detallado','ComprasReportes', 'comReqInternoDET', 0, 1, 'Inf_comReqInternoDet'

execute genReportesGuardar  'tesSolicitudPago', 'tesSolicitudPago', 'Pago_Anticipo','TesoreriaReportes', 'tesAnticiposPago', 0, 1, 'inf_tesAnticiposPagoPrincipal', 'TES'
exec genReportesspGuardar 'tesSolicitudPago',1,'inf_tesCobranzasCuerpo','Debe'
exec genReportesspGuardar 'tesSolicitudPago',2,'inf_tesPagosProvCuerpo','Haber'
exec genReportesspGuardar 'tesSolicitudPago',3,'inf_tesMovimientosDHProve','Prove'

execute genReportesGuardar  'tesSolicitudRendicion', 'tesSolicitudRendicion', 'Rendicion_Anticipo','TesoreriaReportes', 'tesAnticiposRendicion', 0, 1, 'inf_tesAnticiposRendicionPrincipal','TES'
exec genReportesspGuardar 'tesSolicitudPago',1,'inf_tesCobranzasCuerpo','Debe'
exec genReportesspGuardar 'tesSolicitudPago',2,'inf_tesPagosProvCuerpo','Haber'
exec genReportesspGuardar 'tesSolicitudPago',3,'inf_tesMovimientosDHProve','Prove'

execute genReportesGuardar  'conArbolAsientos', 'conArbolAsientos', 'Arbol_Asientos','ContabilidadReportes', 'conArbolAsientos', 0, 1, ''


execute genReportesGuardar  'tesConcBancariaConc', 'tesConcBancariaConc', 'Partidas Conciliadas','TesoreriaReportes', 'tesConcBancariaConc', 0, 1, 'Inf_tesConcBancariaConc'

execute genReportesGuardar  'conGruposCont', 'conGruposCont', 'Grupo de centros','ContabilidadReportes', 'conGruposCont', 0, 1, 'Inf_conGruposCont'


execute genReportesGuardar 'conCentro1', 'conCentro1', 'Centros1 de Costo','ContabilidadReportes', 'conInfCentro1', 0, 1, 'Inf_conCentro1'
execute genReportesGuardar 'conCentro2', 'conCentro2', 'Centros2 de Costo','ContabilidadReportes', 'conInfCentro2', 0, 1, 'Inf_conCentro2'

execute genReportesGuardar 'stkProductos', 'stkProductos', 'Productos','InventariosReportes', 'vstkProductos', 0, 1, 'Inf_stkProductos'

execute genReportesGuardar 'impControlCfdi', 'impControlCfdi', 'Control de Cfdis','ImpuestosReportes', 'impControlCfdi', 0, 1, 'Inf_impControlCfdi'
GO

Update genReportes set TipoReporte = 'STK' where StoreProcedure= 'inf_stkMoviCabeH'
Update genReportes set TipoReporte = 'RI' where StoreProcedure= 'inf_comReqInternoPrincipal'


Execute genReportesGuardar 'tesIngCobranzasRes', 'tesIngCobranzasRes', 'Ingresos_por_Cobranzas_Resument', 'TesoreriaReportes', 'tesIngCobranzasRes', 1, 1, 'INF_tesIngCobranzasRes'
Execute genReportesGuardar 'venRemiPendFactRes', 'venRemiPendFactRes', 'Remisiones_Pendientes_de_Facturar_Resumen', 'VentasReportes', 'venRemiPendFactRes', 1, 1, 'INF_venRemiPendFactRes'

go

Execute genReportesGuardar  'ControlEntrega', 'ControlEntrega', 'Control_Entregas', 'VentasReportes', 'ControlEntrega', 1, 1, 'Inf_ControlEntrega'
Execute genReportesGuardar  'comComprasPagadas', 'comComprasPagadas', 'DIOT', 'ComrpasReportes', 'TODO', 1, 1, 'inf_comComprasPagadas'
go

Execute genReportesGuardar  'venProdCotizados', 'venProdCotizados', 'Productos_Cotizados', 'VentasReportes', 'venProdCotizados', 1, 1, 'Inf_venProdCotizados'

Execute genReportesGuardar  'venHojaRuta', 'venHojaRuta', 'Hoja de Ruta', 'InventariosReportes', 'stkHojaDeRuta', 1, 1, 'Inf_stkHojaDeRuta'
Execute genReportesGuardar  'venHojaRutaDet', 'venHojaRutaDet', 'Hoja de Ruta Detallada', 'InventariosReportes', 'stkHojaDeRutaDeta', 1, 1, 'Inf_stkHojaDeRutaDeta'

Execute genReportesGuardar  'venLimiteCredito', 'venLimiteCredito', 'Limite de Credito', 'VentasReportes', 'venLimiteCredito', 1, 1, 'Inf_venLimiteCredito'
Execute genReportesGuardar  'venAnaMora', 'venAnaMora', 'Analisis de Mora', 'VentasReportes', 'venAnaMora', 1, 1, 'Inf_venAnaMora'
Execute genReportesGuardar  'comEmbarqueEdtoCta', 'comEmbarqueEdtoCta', 'Estado de cuenta Embarque', 'ComprasReportes', 'comEmbarqueEdtoCta', 1, 1, 'Inf_comEmbarqueEdtoCta'
Execute genReportesGuardar  'sueConcAcum', 'sueConcAcum', 'Acumulados Anuales', 'SueldosReportes', 'sueConcAcum', 1, 1, 'Inf_sueAcumAnual'

Execute genReportesGuardar  'stkEnsambles', 'stkEnsambles', 'Ensambles', 'InventariosReportes', 'stkEnsambles', 1, 1, 'Inf_stkEnsambles'
Execute genReportesGuardar  'stkExistLoteSerie', 'stkExistLoteSerie', 'Exitencia Lote Serie', 'InventariosReportes', 'stkExistLoteSerie', 1, 1, 'inf_stkExistLoteSerie'

Execute genReportesGuardar 'STKAFECHAFam', 'STKAFECHAFam', 'Stock a Fecha por Familia', 'InventariosReportes', 'stkAFechaFam', 1, 1, 'INF_stkAFecha'

Execute genReportesGuardar 'venComisVendedores', 'venComisVendedores', 'Comision de Vendedores', 'VentasReportes', 'venComisVendedores', 1, 1, 'INF_venComisVendedores'
Execute genReportesGuardar 'venComisCobradores', 'venComisCobradores', 'Comision de Cobradores', 'VentasReportes', 'venComisCobradores', 1, 1, 'INF_venComisCobradores'
Execute genReportesGuardar  'comOrdenCompRI','comOrdenCompRI','Relacion RI OC', 'ComprasReportes','comOrdenCompRI',1,1,'Inf_comOrdenCompRI'


Execute genReportesGuardar  'tesFlujoFondo','tesFlujoFondo','Flujo Diario', 'TesoreriaReportes','tesFlujoFondo',1,1,''
Execute genReportesSPGuardar 'tesFlujoFondo',1, '', 'Flujo'
Execute genReportesSPGuardar 'tesFlujoFondo',2, '', 'Titulos'

Execute genReportesGuardar 'COMPOSFINANCIERA', 'COMPOSFINANCIERA', 'Posicion_Financiera', 'ComprasReportes', 'ComPosfinanciera', 1, 1, 'INF_ComPosfinanciera'
Execute genReportesGuardar 'AfiBajas', 'AfiBajas', 'Bajas_de_Activo_Fijo', 'ActivoFijoReportes', 'AfiBajas', 1, 1, 'INF_AfiBajas'

Execute genReportesGuardar 'SueVacaciones', 'SueVacaciones', 'Vacaciones', 'SueldosReportes', 'sueVacaciones', 1, 1, 'Inf_sueVacaciones'



exec genReportesGuardar 'VENTRASLADOMX', 'VENTRASLADOMX','FacturacionMX','VentasReportes','TrasladoMX',1,1,'INF_venFactuCabe', 'FC'
exec genReportesSPGuardar 'VENTRASLADOMX',1,'INF_venFactuCuerpo','Cuerpo'
exec genReportesSPGuardar 'VENTRASLADOMX',2,'INF_venFactuImpuestos','Impuestos'
exec genReportesSPGuardar 'VENTRASLADOMX',3,'INF_venFactuComRel','ComRel'
exec genReportesSPGuardar 'VENTRASLADOMX',4,'INF_venFactuINE','Ine'
exec genReportesSPGuardar 'VENTRASLADOMX',5,'INF_venFactuExpedicion','Expedicion'

exec genReportesGuardar 'comCFDISat', 'comCFDISat','CFDIsSAT','ComprasReportes','comCFDISat',1,1,'INF_comCFDISat'


Execute genReportesGuardar 'impSubDiario', 'impSubDiario', 'SubDiario', 'ImpuestosReportes','impSubDiario', 1, 1, 'Inf_SubDiarioImp'
Execute genReportesGuardar 'impSubMayor', 'impSubMayor', 'SubMayor', 'ImpuestosReportes','impSubMayor', 1, 1, 'Inf_SubMayorImp'

Execute genReportesGuardar 'comOcRecepcion','comOcRecepcion','Recepcion No Codificado','ComprasReportes','comOcRecepcion',1,1,'inf_comOCRecepcionesCabe'
exec genReportesSPGuardar  'comOcRecepcion', 1, 'inf_comOCRecepcionesCuerpo', 'Cuerpo'

Execute genReportesGuardar 'sueNominaCfdi','sueNominaCfdi','Suedlos CFDIS','SueldosReportes','sueNominaCfdi',1,1,'inf_NominaCfdi'

Execute genReportesGuardar 'comEmbCierre','comEmbCierre','Cierres de Embarques','ComprasReportes','comEmbCierres',1,1,'inf_comEmbCierres'


Execute genReportesGuardar 'stkSolicitudCD','stkSolicitudCD','Solicitud Cambio Deposito','InventariosReportes','stkSolicitudCD',1,1,'inf_stkSolicitudCDPrincipal'
exec genReportesSPGuardar  'stkSolicitudCD', 1, 'inf_stkSolicitudCDCuerpo', 'Cuerpo'

exec genReportesGuardar 'tesRetenciones','tesRetenciones','Retenciones','TesoreriaReportes','tesRetenciones',1,1,'inf_tesRetenciones'

exec genReportesGuardar 'stkAnalisisInventarios','stkAnalisisInventarios','Analisis de Inventarios','InventariosReportes','stkAnalisisInventarios',1,1,'inf_stkAnaInventario'

exec genReportesGuardar 'comCierreDeta','comCierreDeta','Detalle Cierre Compras','ComprasReportes','comCierreDeta',1,1,'inf_comCierreDeta'



exec genReportesGuardar 'STKMOVICAUSACOSTO','STKMOVICAUSACOSTO','Movimientos_por_Causas_con_Costo','InventariosReportes','stkMoviCausaCosto',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKMOVICAUSACOSTO',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKMOVICAUSACOSTO',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKMOVICAUSACOSTO',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKMOVICAUSACOSTO',4,'inf_stkMoviCausa','stkMoviCausa'


exec genReportesGuardar  'STKMOVICABECDMX','STKMOVICABECDMX', 'Cambio_de_Almacen_Carta_Porte','InventariosReportes','stkMoviCabeCDMX',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKMOVICABECDMX',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKMOVICABECDMX',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKMOVICABECDMX',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKMOVICABECDMX',4,'inf_stkEnTransito','EnTransito'
exec genReportesSPGuardar 'STKMOVICABECDMX',5,'inf_stkCartaPorte','CartaPorte'
exec genReportesSPGuardar 'STKMOVICABECDMX',6,'inf_stkCartaPorteOrigenes','CPOrigen'
exec genReportesSPGuardar 'STKMOVICABECDMX',7,'inf_stkCartaPorteDestinos','Destinos'
exec genReportesSPGuardar 'STKMOVICABECDMX',8,'inf_stkCartaPorteCFDI','CFDI'
exec genReportesSPGuardar 'STKMOVICABECDMX',9,'inf_stkCartaPorteCFDIR','CFDIR'



																							      
exec genReportesGuardar 'VENTRANSMX', 'VENTRANSMX','Facturacion Carta Porte MX','VentasReportes','venFacturaTrasMX',1,1,'INF_venFactuCabe', 'FC'
exec genReportesSPGuardar 'VENTRANSMX',1,'INF_venFactuCuerpo','Cuerpo'
exec genReportesSPGuardar 'VENTRANSMX',2,'INF_venFactuImpuestos','Impuestos'
exec genReportesSPGuardar 'VENTRANSMX',3,'INF_venFactuComRel','ComRel'
exec genReportesSPGuardar 'VENTRANSMX',4,'INF_venFactuINE','Ine'
exec genReportesSPGuardar 'VENTRANSMX',5,'INF_venFactuExpedicion','Expedicion'
exec genReportesSPGuardar 'VENTRANSMX',6,'INF_venFactuCartaPorte','CartaPorte'
exec genReportesSPGuardar 'VENTRANSMX',7,'INF_venFactuOrigenes','Origenes'
exec genReportesSPGuardar 'VENTRANSMX',8,'INF_venFactuDestinos','Destinos'
exec genReportesSPGuardar 'VENTRANSMX',9,'INF_venFactuCPMercancias','Mercancias'

Exec genReportesGuardar 'impControlCfdiSat','impControlCfdiSat','Control de Cfdi Recibidos', 'ImpuestosReportes','impControlCfdiSat',1,1,''

Exec genReportesGuardar 'ConPolizaDescuadrada','ConPolizaDescuadrada','Polizas Descuadradas','ContabilidadReportes','ConPolizaDescuadrada',1,1,'inf_ConPolizaDescuadrada'
GO


exec genReportesGuardar 'STKREMICLIEMX','STKREMICLIEMX','Remisiones_Clientes','InventariosReportes','stkRemisionMX',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKREMICLIEMX',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKREMICLIEMX',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKREMICLIEMX',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKREMICLIEMX',4,'inf_stkRemiClie','Remitos'
exec genReportesSPGuardar 'STKREMICLIEMX',5,'inf_stkMoviCausa','Causa'
GO

exec genReportesGuardar 'STKMOVIEMPLE','STKMOVIEMPLE','Movimientos_Empleados','InventariosReportes','stkMoviEmple',1,1,'inf_stkMoviCabeH','STK'
exec genReportesSPGuardar 'STKMOVIEMPLE',1,'inf_stkMoviCuerpoH','Cuerpo'
exec genReportesSPGuardar 'STKMOVIEMPLE',2,'inf_stkMoviSerieH','MoviSerie'
exec genReportesSPGuardar 'STKMOVIEMPLE',3,'inf_stkMoviDespaH','MoviDespa'
exec genReportesSPGuardar 'STKMOVIEMPLE',4,'inf_stkMoviCausa','stkMoviCausa'
exec genReportesSPGuardar 'STKMOVIEMPLE',5,'inf_stkMoviEmple','Empleado'
GO

exec genReportesGuardar  'STKMATERIALENPERS','STKMATERIALENPERS','Materiales_En_Poder_de_Empleados','InventariosReportes','stkMaterialEnPers',1,1,'inf_stkMaterialEnPers'
GO

Execute genReportesGuardar 'proOrden', 'proOrden', 'Orden de Produccion', 'ProduccionReportes', 'proOrden', 1, 1, 'INF_proOrdencabe'
exec genReportesSPGuardar   'proOrden',1, 'INF_proOrdenCuerpo', 'Cuerpo'

Execute genReportesGuardar 'comAplicaciones', 'comAplicaciones', 'Aplicaciones Compras', 'ComprasReportes', 'comAplicaciones', 1, 1, 'INF_comAplicaciones'

Execute genReportesGuardar 'impProveListaNegra', 'impProveListaNegra', 'Proveedores Lista Negra', 'ComprasReportes', 'comProveListaNegra', 1, 1, 'inf_comProveListaNegra'

Execute genReportesGuardar 'STKAFECHAF', 'STKAFECHAF', 'Stock a Fecha Resumen Familia', 'InventariosReportes', 'stkAFechaF', 1, 1, 'INF_stkAFecha'
Execute genReportesGuardar 'STKAFECHAG', 'STKAFECHAG', 'Stock a Fecha Resumen Fam Grupo', 'InventariosReportes', 'stkAFechaG', 1, 1, 'INF_stkAFecha'
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_afiBajas.sql*/
DROP procedure Inf_afiBajas
GO
Create procedure Inf_afiBajas
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@RubroDesde VarChar(5),
	@RubroHasta VarChar(5),
	@Empresa_Id int
)
AS

SELECT AfiRubros.Rubro_Id, AfiRubros.Descripcion as DescripcionRubro,
conAsientos.Fecha, afiActivoFijo.ActivoFijo_Id, afiActivoFijo.Descripcion,
AfiBajas.Monto, AfiBajas.Cantidad, AfiBajas.Monto , AfiBajas.MontoDepreciacion
from AfiBajas 
	INNER JOIN conAsientos ON AfiBajas.conAsientos = conAsientos.conAsientos
	INNER JOIN (SELECT DISTINCT afiMovimientos.afiActivoFijo, 
			afiMovimientos.conAsientos
	FROM afiMovimientos) afiMovimientos 
	ON afiMovimientos.conAsientos = conAsientos.conAsientos 
	INNER JOIN afiActivoFijo ON afiActivoFijo.afiActivoFijo =afiMovimientos.afiActivoFijo
	INNER JOIN AfiRubros ON  AfiRubros.AfiRubros = afiActivoFijo.Rubro_Id
where
	conAsientos.Anulado = 0 and
	conAsientos.Posteado= 1 and
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	AfiRubros.Rubro_Id Between @RubroDesde and @RubroHasta and 
	conAsientos.Empresa_Id = @Empresa_Id
ORDER BY 1,3
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_AMORTIZACIONES.sql*/
-- INF_AMORTIZACIONES '20200101','20200131','CD',' ','ZZZZZ',' ','ZZZZZZZ', 0,1
-- INF_AMORTIZACIONES '20181101','20181130','BU',' ','ZZZZZ',' ','ZZZZZZZ', 1, 1
-- INF_AMORTIZACIONES '20181001','20181031','BU',' ','ZZZZZ',' ','ZZZZZZZ', 1, 1
DROP PROCEDURE INF_AMORTIZACIONES
GO

CREATE PROCEDURE INF_AMORTIZACIONES(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Tipo VarChar(2),
	@RubroDesde VarChar(5),
	@RubroHasta VarChar(5),
	@ActivoDesde VarChar(15),
	@ActivoHasta VarChar(15),
	@pDetallado Bit,
	@Empresa_Id Int
)

as

SELECT AfiRubros.Rubro_Id, AfiRubros.Descripcion as DescripcionRubro,
	afiActivoFijo.ActivoFijo_id,  afiActivoFijo.Descripcion, 
		afiActivoFijo.FechaAlta, 
			case When AfiActivoFijo.FechaAlta< @FechaDesde then  afiActivoFijo.ValorInicialSI else 0 end +
			ISNULL((SELECT SUM(conMovCont.importe*(-2*conMovCont.Tipomov+3))
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiMovimientos ON
					conMovCont.Clase = 'VO' AND 
					AfiMovimientos.conAsientos = conMovCont.conAsientos and 
					AfiMovimientos.Renglon = conMovCont.Renglon  and 
					AfiMovimientos.AfiActivoFijo = afiActivoFijo.AfiActivoFijo
					Where
						conAsientos.Anulado = 0 and
						conAsientos.Fecha <= @FechaDesde),0) +
				CASE WHEN afiActivoFijo.ValorInicialSI = 0 THEN
			ISNULL((SELECT SUM(conMovCont.importe*(-2*conMovCont.Tipomov+3))
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiConMovCont ON
					AfiConMovCont.conAsientos = conMovCont.conAsientos and 
					AfiConMovCont.Renglon = conMovCont.Renglon  and 
					AfiConMovCont.ActivoFijo_Id = afiActivoFijo.AfiActivoFijo
					Where
						conAsientos.Anulado = 0 and
						conAsientos.Fecha <= @FechaDesde),0) ELSE 0 END ValorInicial, 
	case When AfiActivoFijo.FechaAlta>= @FechaDesde then  afiActivoFijo.ValorInicialSI else 0 end +
			ISNULL((SELECT SUM(conMovCont.importe)
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiMovimientos ON
					conMovCont.Clase = 'VO' AND 
					AfiMovimientos.conAsientos = conMovCont.conAsientos and 
					AfiMovimientos.Renglon = conMovCont.Renglon  and 
					AfiMovimientos.AfiActivoFijo = afiActivoFijo.AfiActivoFijo
					Where
						conMovCont.TipoMov = 1 and 
						conAsientos.Anulado = 0 and
						conAsientos.Fecha between @FechaDesde And  @FechaHasta ),0) + 
						CASE WHEN afiActivoFijo.ValorInicialSI = 0 THEN 
						ISNULL((SELECT SUM(conMovCont.importe*(-2*conMovCont.Tipomov+3))
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiConMovCont ON
					AfiConMovCont.conAsientos = conMovCont.conAsientos and 
					AfiConMovCont.Renglon = conMovCont.Renglon  and 
					AfiConMovCont.ActivoFijo_Id = afiActivoFijo.AfiActivoFijo
					Where
						conAsientos.Anulado = 0 and
						conAsientos.Fecha between @FechaDesde And  @FechaHasta ),0) ELSE 0 END	as Altas, 
	ISNULL((SELECT SUM(conMovCont.importe)
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiMovimientos ON
					conMovCont.Clase = 'VO' AND 
					AfiMovimientos.conAsientos = conMovCont.conAsientos and 
					AfiMovimientos.Renglon = conMovCont.Renglon  and 
					AfiMovimientos.AfiActivoFijo = afiActivoFijo.AfiActivoFijo
					Where
						conMovCont.TipoMov = 2 and 
						conAsientos.Anulado = 0 and
						conAsientos.Fecha between @FechaDesde And  @FechaHasta ),0) as Bajas, 
			afiActivoFijo.AmortAcumSI -
			ISNULL((SELECT SUM(conMovCont.importe*(-2*conMovCont.Tipomov+3))
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiMovimientos ON
					conMovCont.Clase = 'AM' AND 
					AfiMovimientos.conAsientos = conMovCont.conAsientos and 
					AfiMovimientos.Renglon = conMovCont.Renglon  and 
					AfiMovimientos.AfiActivoFijo = afiActivoFijo.AfiActivoFijo
					Where
						conAsientos.Anulado = 0 and
						conAsientos.Fecha <= @FechaDesde),0) AmorAcum, 

			ISNULL((SELECT SUM(conMovCont.importe)
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiMovimientos ON
					conMovCont.Clase = 'AM' AND 
					AfiMovimientos.conAsientos = conMovCont.conAsientos and 
					AfiMovimientos.Renglon = conMovCont.Renglon  and 
					AfiMovimientos.AfiActivoFijo = afiActivoFijo.AfiActivoFijo
					Where
						conMovCont.TipoMov = 2 and 
						conAsientos.Anulado = 0 and
						conAsientos.Fecha between @FechaDesde and @FechaHasta),0)  as Aumentos,
						ISNULL((SELECT SUM(conMovCont.importe)
				from conAsientos INNER JOIN conMovCont ON
					conAsientos.conAsientos = conMovCont.conAsientos 
					INNER JOIN AfiMovimientos ON
					conMovCont.Clase = 'AM' AND 
					AfiMovimientos.conAsientos = conMovCont.conAsientos and 
					AfiMovimientos.Renglon = conMovCont.Renglon  and 
					AfiMovimientos.AfiActivoFijo = afiActivoFijo.AfiActivoFijo
					Where
						conMovCont.TipoMov = 1 and 
						conAsientos.Anulado = 0 and
						conAsientos.Fecha between @FechaDesde and @FechaHasta),0)  as Disminuciones
				INTO #AfiCalc
from  afiActivoFijo inner join AfiRubros on
	afiActivoFijo.Rubro_Id = AfiRubros.AfiRubros
	where
		AfiActivoFijo.Empresa_Id = @Empresa_Id and 
		AfiActivoFijo.FechaAlta <= @FechaHasta and 
		AfiActivoFijo.ActivoFijo_Id between @ActivoDesde And @ActivoHasta and 
		AfiRubros.Rubro_Id between @RubroDesde And  @RubroHasta and 
		AfiActivoFijo.Tipo = @Tipo and 
		(AfiActivoFijo.FechaBaja IS NULL OR AfiActivoFijo.FechaBaja >= @FechaDesde)

if (@pDetallado = 1)
	SELECT Rubro_Id, DescripcionRubro, ActivoFijo_Id, Descripcion, FechaAlta,
		ValorInicial, Altas, Bajas, ValorInicial + Altas - Bajas as TotalVI,
		AmorAcum, Aumentos, Disminuciones,  AmorAcum +  Aumentos - Disminuciones AS TotalAM, 
		(ValorInicial + Altas - Bajas) - (AmorAcum +  Aumentos - Disminuciones) AS Neto
	FROM #AfiCalc
	order by 1,3
else
	SELECT Rubro_Id, DescripcionRubro, 
		SUM(ValorInicial) AS ValorInicial, SUM(Altas) as Altas, SUM(Bajas) AS Bajas, 
		SUM(ValorInicial + Altas - Bajas) as TotalVI,
		SUM(AmorAcum) AS AmorAcum, SUM(Aumentos) AS Aumentos, SUM(Disminuciones) AS Disminuciones,  
		SUM(AmorAcum +  Aumentos - Disminuciones) AS TotalAM, 
		SUM((ValorInicial + Altas - Bajas) - (AmorAcum +  Aumentos - Disminuciones)) AS Neto
	FROM #AfiCalc
	GROUP BY Rubro_Id, DescripcionRubro
	order by 1



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_Balance.sql*/
--  EXEC Inf_Balance  '20201201','20201231',' ','ZZZ',0,1,1,' ', 'ZZZ', ' ', 'zzz', 1,1,'es',1
--EXEC Inf_Balance  '20200701','20200731','12-171-001-000','12-171-001-000',1,0,1,' ', 'ZZZ', ' ', 'zzz', 1,0,'es',0
--  EXEC Inf_Balance  '20190501','20190531',' ','ZZZZZ',1,1,1, '', 'ZZZ', '', 'zzz', 1,0,'en',1
--  EXEC Inf_Balance  '20190501','20190531',' ','ZZZZZ',1,0,1, '', 'ZZZ', '', 'zzz', 1,0,'es'
-- EXEC Inf_Balance  '20190501','20190531',' ','ZZZZZ',1,0,1, '', 'ZZZ', '', 'zzz', 1,0,'es'
-- EXEC Inf_Balance  '20190501','20190531',' ','ZZZZZ',1,0,1, '', 'ZZZ', '', 'zzz', 1,0,'es'

DROP Procedure Inf_Balance 
GO


CREATE Procedure [dbo].[Inf_Balance] 
 ( @FechaDesde DateTime, @FechaHasta DateTime, 
	@CuentaDesde VarChar(25),@CuentaHasta VarChar(25), 
	@ConAcumuladoras Bit, @ConSadoCero Bit, 
	@Empresa Int,
	@Centro1Desde varChar(8), @Centro1Hasta varChar(8), 
	@Centro2Desde varChar(8), @Centro2Hasta varChar(8),
	@ConSaldoInicial Sino, @ConCierre SiNo,
	@Cultura VarChar(5)=null, 
	@PorNaturaleza bit
)
as

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))
DECLARE @FechaDesdeE DateTime

/* FM 11/05/2020 Que vaya hasta el primer asiento de apertura cualquiera sea el ejercicio

SET @FechaDesdeE = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Empresa_Id = @Empresa AND 
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				conPeriodos1.Empresa_Id = @Empresa AND 
				@FechaHasta between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta))
*/

Set @FechaDesdeE = isNull((Select Max(Fecha) From conAsientos Where Fecha <= @FechaDesde And Especial = 'APE'), '20000101')

declare @Centro1Blanco VarChar(1)
declare @Centro2Blanco VarChar(1)

SET @Centro1Blanco = (select conCentro1 from conCentro1 where Centro1_Id = ' ')
SET @Centro2Blanco = (select conCentro2 from conCentro2 where Centro2_Id = ' ')

select * into #Tb1 from vconMovcontRes where Fecha between 
	case when @ConSaldoInicial = 1 then @FechaDesdeE else @FechaDesde end and @FechaHasta and 
	Empresa_id = @Empresa and 
		Centro1_Id between @Centro1Desde and @Centro1Hasta and 
		Centro2_Id between @Centro2Desde and @Centro2Hasta and 
		Cuenta_Id between @CuentaDesde and @CuentaHasta

if @ConAcumuladoras=1 
begin

SELECT conCuentas.Cuenta_Id, 
	CASE WHEN @EnOtro=1 then conCuentas.Description ELSE conCuentas.Descripcion END Descripcion, 
		conCuentas.TipoSAT_Id,
	conCuentas.Nivel , conCuentas.Imputable,
	isnull(SUM(case when (tb1.Fecha < @FechaDesde Or tb1.Especial = 'APE') And @ConSaldoInicial = 1 Then 
		tb1.Monto else 0 end),0) 
		/* * case when @PorNaturaleza=1 and conCuentas.Naturaleza ='A' THEN -1 ELSE 1 END */ as Saldoinicial,
	isnull(SUM(case when tb1.Especial <> 'APE' AND  tb1.Fecha >= @FechaDesde then  tb1.Debe else 0 end),0) as Debe,
	isnull(SUM(case when tb1.Especial <> 'APE' AND  tb1.Fecha >= @FechaDesde then  tb1.Haber else 0 end),0) as Haber,
	Case When @ConSaldoInicial = 1 Then ISNULL(SUM(tb1.Monto),0) 
		Else SUM(case when tb1.Especial <> 'APE' AND  tb1.Fecha >= @FechaDesde 
			then tb1.Monto else 0 end) End  as SaldoiFinal ,
		conCuentas.Naturaleza
	into #Temp1 
FROM conCuentas LEFT OUTER JOIN #Tb1 tb1 ON 
	tb1.conCuentas = conCuentas.conCuentas 
Where
	(@ConCierre=1 OR tb1.Especial not in ('CIR','CCP'))  and
	conCuentas.Imputable = 1 AND 
	ISNULL(conCuentas.Empresa_Id,@Empresa) = @Empresa AND 
	conCuentas.Cuenta_id Between @CuentaDesde and @CuentaHasta and 
	(@ConSadoCero= 1 or isnull(tb1.Debe,0) != 0 or isnull(tb1.Haber,0) != 0)
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, conCuentas.Nivel , conCuentas.Imputable, 
	concuentas.Description, conCuentas.TipoSAT_Id, conCuentas.Naturaleza
UNION ALL
SELECT conCuentas.Cuenta_Id, 
	CASE WHEN @EnOtro=1 then conCuentas.Description ELSE conCuentas.Descripcion END Descripcion, 
	conCuentas.TipoSAT_Id,
	conCuentas.Nivel , conCuentas.Imputable,
	0 as Saldoinicial,
	0 as Debe,
	0 as Haber,
	0 as SaldoiFinal,conCuentas.Naturaleza
from conCuentas where
	Imputable = 0 and 
	ISNULL(conCuentas.Empresa_Id, @Empresa ) = @Empresa and 
	conCuentas.Cuenta_id Between @CuentaDesde and @CuentaHasta 
ORDER BY 1
OPTION	(RECOMPILE)

-- select * from #Temp1
 

SELECT vcuentasRango.Cuenta_Id, 
	CASE WHEN @EnOtro=1 then conCuentas.Description ELSE vcuentasRango.Descripcion END Descripcion, 
	vcuentasRango.TipoSAT_Id,
	vcuentasRango.Nivel , vcuentasRango.Imputable,
	SUM(SaldoInicial)*case when @PorNaturaleza=1 and conCuentas.Naturaleza ='A' THEN -1 ELSE 1 END as Saldoinicial,
	SUM(Debe) as Debe,
	SUM(Haber) as Haber,
	sum(SaldoiFinal)*case when @PorNaturaleza=1 and conCuentas.Naturaleza ='A' THEN -1 ELSE 1 END as SaldoiFinal, 
	conCuentas.Naturaleza
FROM vcuentasRango 
INNER JOIN genEmpresas ON genEmpresas.genEmpresas = @Empresa 
Left JOIN #Temp1 as Movimientos on 
		Movimientos.Cuenta_id >= vcuentasRango.Cuenta_Id and
		Movimientos.Cuenta_id < vcuentasRango.CuentaHasta
Inner join concuentas ON concuentas.Cuenta_Id = vcuentasRango.cuenta_id
where
vcuentasRango.cuenta_id between @CuentaDesde and @CuentaHasta
GROUP BY vcuentasRango.Cuenta_Id, vcuentasRango.Descripcion, vcuentasRango.Nivel , vcuentasRango.Imputable, 
	concuentas.Description, vcuentasRango.TipoSAT_Id, conCuentas.Naturaleza
Having @ConSadoCero = 1 Or sum(SaldoiFinal) <> 0 Or SUM(Haber) <> 0 Or SUM(Debe) <> 0 Or SUM(SaldoInicial) <> 0 
ORDER BY 1
OPTION	(RECOMPILE)
end

ELSE


begin
	-- Sin Acumuladoras
SELECT conCuentas.Cuenta_Id, 
	CASE WHEN @EnOtro=1 then conCuentas.Description ELSE conCuentas.Descripcion END Descripcion, 
	conCuentas.TipoSAT_Id,
	 conCuentas.Nivel , conCuentas.Imputable,
	SUM(case when (tb1.Fecha < @FechaDesde Or tb1.Especial = 'APE') And @ConSaldoInicial = 1 Then 
		tb1.Monto else 0 end) *
		case when @PorNaturaleza=1 and conCuentas.Naturaleza ='A' THEN -1 ELSE 1 END as Saldoinicial,
	SUM(case when tb1.Especial <> 'APE' AND  tb1.Fecha >= @FechaDesde then TB1.Debe else 0 end) as Debe,
	SUM(case when tb1.Especial <> 'APE' AND  tb1.Fecha >= @FechaDesde then tb1.Haber else 0 end) as Haber,
	Case When @ConSaldoInicial = 1 Then ISNULL(SUM(tb1.Monto ),0) 
		Else SUM(case when tb1.Especial <> 'APE' AND  tb1.Fecha >= @FechaDesde then tb1.Monto else 0 end) End *
		case when @PorNaturaleza=1 and conCuentas.Naturaleza ='A' THEN -1 ELSE 1 END as SaldoiFinal, 
		conCuentas.Naturaleza
FROM conCuentas 
Left join #Tb1 tb1 ON tb1.conCuentas = conCuentas.conCuentas And (@ConCierre=1 OR tb1.Especial not in ('CIR','CCP'))
Where
	(@ConCierre=1 OR tb1.Especial not in ('CIR','CCP')) and 
	conCuentas.Imputable = 1 AND ISNULL(conCuentas.Empresa_Id,@Empresa) = @Empresa AND 
	conCuentas.Cuenta_id Between @CuentaDesde and @CuentaHasta 
	AND (@ConSadoCero = 1 Or isnull(tb1.Debe,0) != 0 Or isnull(tb1.Haber,0) != 0)
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, conCuentas.Nivel, conCuentas.Imputable, 
	concuentas.Description, conCuentas.TipoSAT_Id, conCuentas.Naturaleza
ORDER BY 1
OPTION	(RECOMPILE)
end

drop table #Tb1

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_CatalgoCuentas.sql*/
-- Inf_CatalgoCuentas ' ', 'ZZZ',1
DROP PROCEDURE Inf_CatalgoCuentas
GO
CREATE PROCEDURE Inf_CatalgoCuentas(
	 @CuentaDesde VarChar(25), 
	 @CuentaHasta VarChar(25), 
	 @Empresa_Id int
	)
AS

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, conCuentas.Nivel, 
	conCuentas.Imputable, conCuentas.Inactivo, conTiposContables.Tipo_Id, 
	conTiposContables.Descripcion as  DescripcionTipo, 
	conTiposSAT.TipoSAT_Id, conTiposSAT.Descripcion AS DescripcionTipoSat, 
	conBaseDistri.Base_Id,  conBaseDistri.Descripcion AS DescripcionBase, 
	conCuentas.Ajustable, conCuentas.Metodo, conCuadro1Filas.Cuadro1Fila_Id, conCuadro1Filas.Descripcion as DescripcionCuadro1,
	conCuentas.EliminaConsolida, isnull(CONVERT(char(10), conCuentas.Fecha_Reserva, 103), ' ') as  Fecha_Reserva, 
	conGruposCont.Grupo_Id, conGruposCont.Descripcion as DescripcionGrupo,
	conCuentas.NoSeReserva, conCuentas.Notas, conCuentas.Posteado, 
	conCuentas.Naturaleza, conCuentas.ReservadaPor, conCuentas.Rubro_Id , 
	conRubros.Descripcion as DescrpcionRubro, conIndicesAjustes.Indice_Id, 
	conIndicesAjustes.Descripcion as DescripcionIndice, 
	genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as NombreUsuario
	
from conCuentas left join conTiposContables ON
conCuentas.Tipo_Id = conTiposContables.Tipo_Id
left join conTiposSAT ON
conTiposSAT.TipoSAT_Id = conCuentas.TipoSAT_Id
LEFT join conBaseDistri ON
conBaseDistri.conBaseDistri = conCuentas.Base_Id
LEFT JOIN conCuadro1Filas on
conCuadro1Filas.conCuadro1Filas = conCuentas.Cuadro1Fila_Id
LEFT JOIN conGruposCont ON
conGruposCont.conGruposCont = conCuentas.Grupo_Id
inner join conRubros ON
conRubros.Rubro_Id = conCuentas.Rubro_Id
LEFT JOIN conIndicesAjustes ON
conIndicesAjustes.conIndicesAjuste = conCuentas.Indice_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = conCuentas.Usuario_Id
Where
	conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
	@Empresa_Id = ISNULL(conCuentas.Empresa_Id , @Empresa_Id)
ORDER BY 1
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_CatProv.sql*/
drop procedure INF_CatProv
GO
CREATE PROCEDURE INF_CatProv
(
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Empresa Int
)
AS
SELECT comProveedores.genEntidades, comProveedores.Proveed_Id, 
	comProveedores.RazonSocial, comProveedores.NombreLegal, comProveedores.Direccion1, 
	comProveedores.Direccion2, comProveedores.Localidad, 
	comProveedores.CodigoPostal, genProvincias.Provincia_Id, genProvincias.Descripcion as DescripcionPcia,
	genPaises.Pais_id Pais, genPaises.Descripcion as DescripcionPais,
	comProveedores.Telefono, comRegiones.Region_Id, comConPago.CondPago_Id, 
	comForEntre.FormaEnt_Id, comProveedores.Origen_Id, comProveedores.Contacto, 
	comProveedores.EMail, comProveedores.Fax, comProveedores.Fecha_Alta, comProveedores.FechaUltActiv, 
	comProveedores.Letra_Fact, comProveedores.Observaciones, 
	comCondFiscal.CondFiscal_Id, comProveedores.Ganancias, comProveedores.IBrutos, 
	comProveedores.EsAduana,  comProveedores.TipoCuenta, 
	comProveedores.NroCuenta, comProveedores.CBU, --comProveedores.Interbanking, 
	ISNULL(tesBancos.Banco_Id, ' ') as Banco_Id, comProveedores.Inactivo, 
	genUsuarios.Usuario_Id, comProveedores.Posteado, comProvTipos.ProvTipo_Id, 
	comProvTipos.Descripcion DescripcionTipo
FROM comProveedores inner join genProvincias ON
genProvincias.genProvincias = comProveedores.Provincia_Id
inner join genPaises ON 
genPaises.genPaises = comProveedores.Pais
INNER JOIN comRegiones ON
comRegiones.comRegiones = comProveedores.Region_Id
inner join comConPago ON
comConPago.comConPago = comProveedores.CondPago_Id
inner join comForEntre ON
comForEntre.comForEntre = comProveedores.FormaEnt_Id
inner join comCondFiscal ON
comCondFiscal.comCondFiscal =comProveedores.CondFiscal_Id
LEFT OUTER JOIN tesBancos ON
tesBancos.tesBancos = comProveedores.Banco_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = comProveedores.Usuario_Id
left join comProvTipos ON comProvTipos.comProvTipos = comProveedores.ProvTipo_Id
Where
comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta  
order by 2

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_CfdiCobranzaCabe.sql*/
-- Inf_CfdiCobranzaCabe 1, 'CPAG',2,0,0,0,'0001',' ',' ',' '
-- Inf_CfdiCobranzaEmisor 1, 'CPAG',2,0,0,0,'0001',' ',' ',' '
-- Inf_CfdiCobranzaReceptor 1, 'CPAG',2,0,0,0,'0001',' ',' ',' '
-- Inf_CfdiCobranzaConcepto 1, 'CPAG',2,0,0,0,'0001',' ',' ',' '
-- Inf_CfdiCobranzaComplemento 5, 'CPAG',648,0,0,0,'LCC',' ',' ',' '
-- Inf_CfdiCobranzaComplementoPago 5, 'CPAG',646,0,0,0,'LCC',' ',' ',' '
-- Inf_CfdiCobranzaRel 1, 'CPAG',2,0,0,0,'0001',' ',' ',' '
-- Inf_CfdiCobranzaRelCuerpo , 'CPAG',2,0,0,0,'0001',' ',' ',' '

DROP PROCEDURE Inf_CfdiCobranzaCabe
GO
CREATE PROCEDURE Inf_CfdiCobranzaCabe
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS

SELECT '3.3' as Version, 
	TesCFDICobranzaSegmentos.Segmento1C as Serie, 
	 TesCFDICobranzaSegmentos.Segmento1N as Folio, TesCFDICobranza.Fecha as Fecha,
	 TesCFDICobranzaSegmentos.TesCFDICobranza,
		'pago' as MetodoPago, 
		CASE WHEN ISNULL(TesCFDICobranza.NoCertificado,' ')=' ' THEN
		(SELECT cValor FROM genGlobales WHERE NOMBRE_VAR = 'VENNOCERTIFICADO' and Empresa_Id =@pEmpresa_Id) ELSE
		TesCFDICobranza.NoCertificado END AS NoCertificado, 
		(SELECT mValor FROM genGlobales where Nombre_var = 'GENWSAAPUBLICKEY' and Empresa_Id =@pEmpresa_Id ) AS Certificado,
		' ' as CondicionesDePago, 
		Convert(Numeric(18,2) , 0) as SubTotal,
		Convert(Numeric(18,2) , 0) as Descuento, 		
		genMonedas.CodigoFiscal as Moneda,
		Convert(Numeric(18,2) , 0) as Total,
		Convert(Numeric(18,2) , 0) as TipoCambio,
		'P' as TipoDeComprobante, 
		'NA' as  FormaPago, 
		genSucursalesEmpr.CodigoPostal as LugarExpedicion, ' ' Confirmacion
from TesCFDICobranza INNER JOIN genMonedas ON 
TesCFDICobranza.Moneda_Id = genMonedas.genMonedas
INNER JOIN genSucursalesEmpr ON
genSucursalesEmpr.genSucursalesEmpr = TesCFDICobranza.Sucursal
INNER JOIN TesCFDICobranzaSegmentos ON 
TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranza.TesCFDICobranza
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
Where
	genSegmentos.Segmento_Id = @pSegmento_Id and
	TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N 

GO

DROP PROCEDURE Inf_CfdiCobranzaEmisor
GO
CREATE PROCEDURE Inf_CfdiCobranzaEmisor
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS

SELECT 
genEmpresas.Cuit AS Rfc,
genEmpresas.RazonSocial AS Nombre,
genEmpresas.Regimen AS RegimenFiscal,
(select mValor from genglobales where Nombre_var = 'EMPPRIVATEKEY' and Empresa_Id=@pEmpresa_Id) AS EmpPrivateKey,
genEmpresas.Calle AS Calle,
genEmpresas.NoExterior AS NroExterior,
genEmpresas.NoInterior as NroInterior,
genEmpresas.Localidad,
genEmpresas.Colonia,
genEmpresas.Municipio,
genProvincias.CodFiscal AS Provincia,
'MEX' AS Pais,
genEmpresas.CodigoPostal
FROM genEmpresas INNER JOIN genProvincias ON
genProvincias.genProvincias = genEmpresas.Provincia_Id
WHERE genEmpresas.genEmpresas = @pEmpresa_Id
GO



DROP PROCEDURE Inf_CfdiCobranzaReceptor
GO

CREATE PROCEDURE Inf_CfdiCobranzaReceptor
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS


SELECT isnull((select MAX(tesDeposito.RfcEmisorCtaOrd)
	from tesDeposito, tesCFDICobranzaCuerpo, tesBancos 
	WHERE	
	tesDeposito.tesMovimientos = tesCFDICobranzaCuerpo.tesMovimientos and 
	tesDeposito.FormaDePagoP = '17' and 
	tesBancos.RFC = tesDeposito.RfcEmisorCtaOrd and 
	tesCFDICobranzaCuerpo.tesCFDICobranza = tesCFDICobranza.tesCFDICobranza),genEntidades.Cuit) AS Rfc, 
	isnull((select MAX(tesBancos.Descripcion)
	from tesDeposito, tesCFDICobranzaCuerpo, tesBancos 
	WHERE	
	tesDeposito.tesMovimientos = tesCFDICobranzaCuerpo.tesMovimientos and 
	tesDeposito.FormaDePagoP = '17' and 
	tesBancos.RFC = tesDeposito.RfcEmisorCtaOrd and 
	tesCFDICobranzaCuerpo.tesCFDICobranza = tesCFDICobranza.tesCFDICobranza),
	 venClientes.RazonSocial) as Nombre, 
	genPaises.CodFiscal AS ResidenciaFiscal,
	' '  AS NumRegIdTrib,
	'P01' as UsoCfdi, 
	venClieHabitual.Direccion1_Fact Calle , venClieHabitual.NroExterior_Fact NroExterior, 
	venClieHabitual.NroInterior_Fact NroInterior, venClieHabitual.Direccion2_Fact Colonia,
	venClieHabitual.Localidad_Fact AS Localidad,
	genProvincias.CodFiscal as Provincia, 
	genPaises.CodFiscal as Pais, 
	venClieHabitual.CodPostal_Fact as CodigoPostal
from venClientes INNER JOIN TesCFDICobranza ON	
venClientes.genEntidades = TesCFDICobranza.Cliente_id
INNER JOIN genEntidades ON
genEntidades.genEntidades = venClientes.genEntidades
INNER JOIN  venClieHabitual ON 
venClieHabitual.genEntidades = venClientes.genEntidades and
venClieHabitual.Sucursal = venClientes.SucursalPredeter
inner join genPaises ON
venClieHabitual.Pais_id_Fact = genPaises.genPaises
INNER JOIN genProvincias ON
venClieHabitual.Provincia_id_Fact = genProvincias.genProvincias
INNER JOIN TesCFDICobranzaSegmentos ON 
TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranza.TesCFDICobranza
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
Where
	genSegmentos.Segmento_Id = @pSegmento_Id and
	TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N 

GO

DROP PROCEDURE Inf_CfdiCobranzaConcepto
GO

CREATE PROCEDURE Inf_CfdiCobranzaConcepto
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS

SELECT Convert(smallint,1) as Renglon, 
	'84111506' as ClaveProdServ,
	' ' as NoIdentificacion, 
	1.00 AS Cantidad,
	'ACT' AS ClaveUnidad,
	' ' as Unidad,
	'Pago' Descripcion, 			
	Convert(Numeric(18,2) , 0) as ValorUnitario,
	Convert(Numeric(18,2) , 0) as Importe, 
	Convert(Numeric(18,2) , 0) as Descuento	
GO



DROP PROCEDURE Inf_CfdiCobranzaComplemento
GO

CREATE PROCEDURE Inf_CfdiCobranzaComplemento
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS

SELECT '1.1' as Version,  TesCFDICobranza.UUID, 
	TesCFDICobranza.FechaTimbrado, 
	isnull(TesCFDICobranza.RfcProvCertif,' ') as RfcProvCertif,
	isnull(TesCFDICobranza.Leyenda,' ') as Leyenda,
	Convert(VarChar(8000),TesCFDICobranza.SelloDigital) as SelloCFD,
	TesCFDICobranza.NoCertificadoSAT,
	Convert(VarChar(8000),TesCFDICobranza.SelloSAT) as SelloSAT
FROM TesCFDICobranza INNER JOIN TesCFDICobranzaSegmentos ON 
TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranza.TesCFDICobranza
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
WHERE
genSegmentos.Segmento_Id = @pSegmento_Id and
	TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N 

GO

DROP PROCEDURE Inf_CfdiCobranzaComplementoPago
GO

CREATE PROCEDURE Inf_CfdiCobranzaComplementoPago
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS


SELECT  TesCFDICobranzaCuerpo.tesMovimientos,
	dbo.Segmento(genAsiSegmentosCOB.Segmento_Id, genAsiSegmentosCOB.Segmento1C,
	genAsiSegmentosCOB.Segmento2C,genAsiSegmentosCOB.Segmento3C,genAsiSegmentosCOB.Segmento4C,
	genAsiSegmentosCOB.Segmento1N,genAsiSegmentosCOB.Segmento2N,genAsiSegmentosCOB.Segmento3N,
	genAsiSegmentosCOB.Segmento4N) as Comprobante,
	tesMovimientos.Fecha_Real as FechaPago, 
	ISNULL(TesDeposito.FormaDePagoP, tesIdentifica.FormaDePagoP) AS FormaDePagoP,
	MID.CodigoFiscal as MonedaP, case when MID.CodigoFiscal='MXN' OR
		MID.genMonedas = tesIdentifica.Moneda_Id THEN 1 ELSE conAsientos.cambio end as TipoCambioP, 
	ROUND(conMovCont.ImporteMonedaOriginal / Case when genEmpresas.genEmpresas = MID.genMonedas or 
		conAsientos.Moneda_Id = tesIdentifica.Moneda_Id THEN 1 else conAsientos.cambio end,2 ) as Monto, 
	conMovCont.Importe as MontoMxp,
	ISNull(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE TesDeposito.NumOperacion END, ' ') AS NumOperacion, 
	ISNull(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE TesDeposito.RfcEmisorCtaOrd END, ' ') AS RfcEmisorCtaOrd , 
	ISNull(TesDeposito.NomBancoOrdExt, ' ') NomBancoOrdExt  ,
	ISNull(TesDeposito.CtaOrdenante,' ' ) CtaOrdenante,
	ISNULL(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE ISNULL(tesBancosP.RFC,'') END, ' ') AS RfcEmisorCtaBen , 
	ISNULL(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE tesIdBancoPropio.numCuenta END,  ' ') AS CtaBeneficiario, 
	ISNULL(TesDeposito.TipoCadPago, ' ') as TipoCadPago, 
	ISNULL(TesDeposito.CertPago, ' ') as CertPago, ISNULL(TesDeposito.CadPago, ' ') CadPago, 
	ISNULL(TesDeposito.SelloPago, ' ') SelloPago, 
	isnull((select sum(conMovCont1.Importe) 
		From conMovCont as conMovCont1
		WHERE
		conMovCont1.conasientos = conMovCont.conasientos and 
		conMovCont1.tipoMov = 2),0) as TotalPago , 
        ISNULL(venMovimientosFiscal.ClaveFiscal, ' ') AS idDocumento, 
		ISNULL(genAsiSegmentos.Segmento2C+genAsiSegmentos.Segmento3C, ' ') as Serie, 
		ISNULL(genAsiSegmentos.Segmento1N, 0) as Folio, 
		ISNULL(genMonedas.CodigoFiscal, ' ') MonedaDR, 
		ISNULL(conAsientos.Cambio, 0) as TipoCambioDR, 
		ISNULL(venMovimientosMetodoPago.NMetodoPago, '  ') as MetodoPago , 
		ISNULL((SELECT COUNT(1) FROM genCancMov genCancMov1, conAsientos where 
		conAsientos.conAsientos = genCancMov1.Asiento_Id_Ap and 
			conAsientos.Anulado= 0 and 
			conAsientos.Posteado = 1 AND 
		genCancMov.Asiento_Id = genCancMov1.Asiento_Id and 
		((genCancMov1.FechaAplicacion < genCancMov.FechaAplicacion) or
		(genCancMov.FechaAplicacion = genCancMov1.FechaAplicacion and 
		genCancMov1.Asiento_Id_Ap < genCancMov.Asiento_Id_Ap))),0)+1  as NumParcialidad , 
		ISNULL(Factura.Importe - 
		ISNULL((SELECT SUM(genCancMov1.Importe) 
			FROM genCancMov genCancMov1, conAsientos where 
			conAsientos.conAsientos = genCancMov1.Asiento_Id_Ap and 
			conAsientos.Anulado= 0 and 
			conAsientos.Posteado = 1 AND 
			genCancMov.Asiento_Id = genCancMov1.Asiento_Id and 
		((genCancMov1.FechaAplicacion < genCancMov.FechaAplicacion) or
		(genCancMov.FechaAplicacion = genCancMov1.FechaAplicacion and 
		genCancMov1.Asiento_Id_Ap < genCancMov.Asiento_Id_Ap))),0),0)  as ImpSaldoAnt, 
		Convert(Numeric(18,2) , ISNULL(genCancMov.Importe,0) * 
		conMovCont.Importe 
		/ isnull((select sum(conMovCont1.Importe) 
		From conMovCont as conMovCont1
		WHERE
		conMovCont1.conasientos = conMovCont.conasientos and 
		conMovCont1.tipoMov = 2),0)) as ImpPagado, 
		ISNULL(venMovimientosMetodoPago.NMetodoPago, ' ') TipoPago, 
		ISNULL(genEntidadesBasicasValor.Descripcion,'') AS DescripcionFPago

From 
TesCFDICobranzaCuerpo INNER JOIN tesMovimientos ON
TesCFDICobranzaCuerpo.tesMovimientos = tesMovimientos.tesMovimientos
INNER JOIN venMovimientos ON 
venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
INNER JOIN tesRengMovi ON
tesRengMovi.tesMovimientos = tesMovimientos.tesMovimientos
INNER JOIN tesIdentifica ON
tesRengMovi.Cartera_id = tesIdentifica.tesIdentifica
inner join tesTiposId ON
tesTiposId.tesTiposId = tesIdentifica.TipoCartera
LEFT OUTER JOIN TesDeposito ON
tesRengMovi.tesMovimientos = TesDeposito.tesMovimientos and 
tesRengMovi.conRenglon = TesDeposito.Renglon
INNER JOIN conAsientos ON 
conAsientos.conAsientos = tesMovimientos.tesMovimientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = tesRengMovi.tesMovimientos AND 
conMovCont.Renglon = tesRengMovi.conRenglon
INNER JOIN genMonedas ON
genMonedas.genMonedas = conAsientos.Moneda_id
INNER JOIN genMonedas MID on 
MID.genMonedas = tesIdentifica.Moneda_id
LEFT OUTER JOIN tesIdBancoPropio ON
tesIdBancoPropio.Cartera_id = tesIdentifica.tesIdentifica
left outer join tesBancos tesBancosP on
tesBancosP.tesBancos = tesIdBancoPropio.Banco_Id
INNER JOIN TesCFDICobranzaSegmentos ON 
TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranzaCuerpo.tesCFDICobranza
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
INNER JOIN genAsiSegmentos  as genAsiSegmentosCOB ON
genAsiSegmentosCOB.Asiento_id = tesMovimientos.tesMovimientos
INNER JOIN genEmpresas ON genEmpresas.genEmpresas = conAsientos.Empresa_Id
LEFT JOIN (genCancMov INNER JOIN venMovimientos  as Factura ON
	genCancMov.Asiento_Id = Factura.venMovimientos
	INNER JOIN venMovimientosFiscal ON
	venMovimientosFiscal.venMovimientos = Factura.venMovimientos
	INNER JOIN venMovimientosMetodoPago ON
	venMovimientosMetodoPago.venMovimientos =  Factura.venMovimientos
	INNER JOIN conAsientos as asieFact ON
	asieFact.conAsientos = Factura.venMovimientos
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = asieFact.conAsientos
	INNER JOIN genMonedas as genMonedasFact ON
	genMonedasFact.genMonedas = asieFact.Moneda_Id
	inner join venCondPago ON
	venCondPago.venCondPago = Factura.CondPagoCli_id) ON
	TesCFDICobranzaCuerpo.tesMovimientos = genCancMov.Asiento_Id_Ap

	left join genEntidadesBasicasValor on 
		genEntidadesBasicasValor.entidad_id = 6 and 
		genEntidadesBasicasValor.Clave = TesDeposito.FormaDePagoP and
		genEntidadesBasicasValor.Dominio_Id = 'MX'
WHERE 
	not exists(select 1 from tesDepoPorIdent WHERE
		tesDepoPorIdent.venMovimientos = tesMovimientos.tesMovimientos) and
	conMovCont.TipoMov = 1 and
	genSegmentos.Segmento_Id = @pSegmento_Id and
	TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N and 
	Convert(Numeric(18,2) , ISNULL(genCancMov.Importe,0) * 
		conMovCont.Importe 
		/ isnull((select sum(conMovCont1.Importe) 
		From conMovCont as conMovCont1
		WHERE
		conMovCont1.conasientos = conMovCont.conasientos and 
		conMovCont1.tipoMov = 2),0))  > 0
UNION ALL
--- DNI

SELECT  TesCFDICobranzaCuerpo.tesMovimientos,
	dbo.Segmento(genAsiSegmentosCOB.Segmento_Id, genAsiSegmentosCOB.Segmento1C,
	genAsiSegmentosCOB.Segmento2C,genAsiSegmentosCOB.Segmento3C,genAsiSegmentosCOB.Segmento4C,
	genAsiSegmentosCOB.Segmento1N,genAsiSegmentosCOB.Segmento2N,genAsiSegmentosCOB.Segmento3N,
	genAsiSegmentosCOB.Segmento4N) as Comprobante,
	tesMovimientos.Fecha_Real as FechaPago, 
	ISNULL(TesDeposito.FormaDePagoP, tesIdentifica.FormaDePagoP) AS FormaDePagoP,
	MID.CodigoFiscal as MonedaP, case when MID.CodigoFiscal='MXN' OR
		MID.genMonedas = tesIdentifica.Moneda_Id THEN 1 ELSE conAsientos.cambio end as TipoCambioP, 
	ROUND(conMovCont.ImporteMonedaOriginal / Case when genEmpresas.genEmpresas = MID.genMonedas or 
		conAsientos.Moneda_Id = tesIdentifica.Moneda_Id THEN 1 else conAsientos.cambio end,2 ) as Monto, 
	conMovCont.Importe as MontoMxp,
	ISNull(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE TesDeposito.NumOperacion END, ' ') AS NumOperacion, 
	ISNull(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE TesDeposito.RfcEmisorCtaOrd END, ' ') AS RfcEmisorCtaOrd , 
	ISNull(TesDeposito.NomBancoOrdExt, ' ') NomBancoOrdExt  ,
	ISNull(TesDeposito.CtaOrdenante,' ' ) CtaOrdenante,
	ISNULL(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE ISNULL(tesBancosP.RFC,'') END, ' ') AS RfcEmisorCtaBen , 
	ISNULL(case when ISNULL(TesDeposito.FormaDePagoP,' ')='01' THEN ' ' ELSE tesIdBancoPropio.numCuenta END,  ' ') AS CtaBeneficiario, 
	ISNULL(TesDeposito.TipoCadPago, ' ') as TipoCadPago, 
	ISNULL(TesDeposito.CertPago, ' ') as CertPago, ISNULL(TesDeposito.CadPago, ' ') CadPago, 
	ISNULL(TesDeposito.SelloPago, ' ') SelloPago, 
	isnull((select sum(conMovCont1.Importe) 
		From conMovCont as conMovCont1
		WHERE
		conMovCont1.conasientos = conMovCont.conasientos and 
		conMovCont1.tipoMov = 2),0) as TotalPago , 
        ISNULL(venMovimientosFiscal.ClaveFiscal, ' ') AS idDocumento, 
		ISNULL(genAsiSegmentos.Segmento2C+genAsiSegmentos.Segmento3C, ' ') as Serie, 
		ISNULL(genAsiSegmentos.Segmento1N, 0) as Folio, 
		ISNULL(genMonedas.CodigoFiscal, ' ') MonedaDR, 
		ISNULL(conAsientos.Cambio, 0) as TipoCambioDR, 
		ISNULL(venMovimientosMetodoPago.NMetodoPago, '  ') as MetodoPago , 
		ISNULL((SELECT COUNT(1) FROM genCancMov genCancMov1, conAsientos where 
		conAsientos.conAsientos = genCancMov1.Asiento_Id_Ap and 
			conAsientos.Anulado= 0 and 
			conAsientos.Posteado = 1 AND 
		genCancMov.Asiento_Id = genCancMov1.Asiento_Id and 
		((genCancMov1.FechaAplicacion < genCancMov.FechaAplicacion) or
		(genCancMov.FechaAplicacion = genCancMov1.FechaAplicacion and 
		genCancMov1.Asiento_Id_Ap < genCancMov.Asiento_Id_Ap))),0)+1  as NumParcialidad , 
		ISNULL(Factura.Importe - 
		ISNULL((SELECT SUM(genCancMov1.Importe) 
			FROM genCancMov genCancMov1, conAsientos where 
			conAsientos.conAsientos = genCancMov1.Asiento_Id_Ap and 
			conAsientos.Anulado= 0 and 
			conAsientos.Posteado = 1 AND 
			genCancMov.Asiento_Id = genCancMov1.Asiento_Id and 
		((genCancMov1.FechaAplicacion < genCancMov.FechaAplicacion) or
		(genCancMov.FechaAplicacion = genCancMov1.FechaAplicacion and 
		genCancMov1.Asiento_Id_Ap < genCancMov.Asiento_Id_Ap))),0),0)  as ImpSaldoAnt, 
		Convert(Numeric(18,2) , ISNULL(genCancMov.Importe,0) * 
		conMovCont.Importe 
		/ isnull((select sum(conMovCont1.Importe) 
		From conMovCont as conMovCont1
		WHERE
		conMovCont1.conasientos = conMovCont.conasientos and 
		conMovCont1.tipoMov = 2),0)) as ImpPagado, 
		ISNULL(venMovimientosMetodoPago.NMetodoPago, ' ') TipoPago, 
		ISNULL(genEntidadesBasicasValor.Descripcion,'') AS DescripcionFPago

From 
tesDepoPorIdent inner join tesMovimientos ON
tesMovimientos.tesMovimientos = tesDepoPorIdent.venMovimientos
INNER JOIN TesCFDICobranzaCuerpo ON
TesCFDICobranzaCuerpo.tesMovimientos = tesMovimientos.tesMovimientos
INNER JOIN venMovimientos ON 
venMovimientos.venMovimientos = tesDepoPorIdent.venMovimientos
INNER JOIN tesRengMovi ON
tesRengMovi.tesMovimientos = tesDepoPorIdent.tesMovimientos
INNER JOIN tesIdentifica ON
tesRengMovi.Cartera_id = tesIdentifica.tesIdentifica
inner join tesTiposId ON
tesTiposId.tesTiposId = tesIdentifica.TipoCartera
LEFT OUTER JOIN TesDeposito ON
tesRengMovi.tesMovimientos = TesDeposito.tesMovimientos and 
tesRengMovi.conRenglon = TesDeposito.Renglon
INNER JOIN conAsientos ON 
conAsientos.conAsientos = tesMovimientos.tesMovimientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = tesRengMovi.tesMovimientos AND 
conMovCont.Renglon = tesRengMovi.conRenglon
INNER JOIN genMonedas ON
genMonedas.genMonedas = conAsientos.Moneda_id
INNER JOIN genMonedas MID on 
MID.genMonedas = tesIdentifica.Moneda_id
LEFT OUTER JOIN tesIdBancoPropio ON
tesIdBancoPropio.Cartera_id = tesIdentifica.tesIdentifica
left outer join tesBancos tesBancosP on
tesBancosP.tesBancos = tesIdBancoPropio.Banco_Id
INNER JOIN TesCFDICobranzaSegmentos ON 
TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranzaCuerpo.tesCFDICobranza
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
INNER JOIN genAsiSegmentos  as genAsiSegmentosCOB ON
genAsiSegmentosCOB.Asiento_id = tesMovimientos.tesMovimientos
INNER JOIN genEmpresas ON genEmpresas.genEmpresas = conAsientos.Empresa_Id
LEFT JOIN (genCancMov INNER JOIN venMovimientos  as Factura ON
	genCancMov.Asiento_Id = Factura.venMovimientos
	INNER JOIN venMovimientosFiscal ON
	venMovimientosFiscal.venMovimientos = Factura.venMovimientos
	INNER JOIN venMovimientosMetodoPago ON
	venMovimientosMetodoPago.venMovimientos =  Factura.venMovimientos
	INNER JOIN conAsientos as asieFact ON
	asieFact.conAsientos = Factura.venMovimientos
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = asieFact.conAsientos
	INNER JOIN genMonedas as genMonedasFact ON
	genMonedasFact.genMonedas = asieFact.Moneda_Id
	inner join venCondPago ON
	venCondPago.venCondPago = Factura.CondPagoCli_id) ON
	TesCFDICobranzaCuerpo.tesMovimientos = genCancMov.Asiento_Id_Ap
	left join genEntidadesBasicasValor on 
		genEntidadesBasicasValor.entidad_id = 6 and 
		genEntidadesBasicasValor.Clave = TesDeposito.FormaDePagoP and
		genEntidadesBasicasValor.Dominio_Id = 'MX'
WHERE 
	conMovCont.TipoMov = 1 and
	genSegmentos.Segmento_Id = @pSegmento_Id and
	TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N and 
	Convert(Numeric(18,2) , ISNULL(genCancMov.Importe,0) * 
		conMovCont.Importe 
		/ isnull((select sum(conMovCont1.Importe) 
		From conMovCont as conMovCont1
		WHERE
		conMovCont1.conasientos = conMovCont.conasientos and 
		conMovCont1.tipoMov = 2),0))  > 0


ORDER BY 1,2,3

GO
drop PROCEDURE [dbo].[Inf_CfdiCobranzaRel]
go

CREATE PROCEDURE [dbo].[Inf_CfdiCobranzaRel]
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS

SELECT '04' as TipoRelacion 
FROM tesCFDICobranzaRel inner join TesCFDICobranza ON 
TesCFDICobranzaRel.tesCFDICobranzaR = TesCFDICobranza.tesCFDICobranza
INNER JOIN TesCFDICobranzaSegmentos ON 
	TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranzaRel.TesCFDICobranza
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
WHERE
TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N 


GO

DROP PROCEDURE [dbo].[Inf_CfdiCobranzaRelCuerpo]
GO
CREATE PROCEDURE [dbo].[Inf_CfdiCobranzaRelCuerpo]
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)
AS

SELECT TesCFDICobranzaRel.tesCFDICobranza, tesCFDICobranza.UUID 
FROM TesCFDICobranzaRel inner join TesCFDICobranza ON 
TesCFDICobranzaRel.tesCFDICobranzaR = TesCFDICobranza.tesCFDICobranza
INNER JOIN TesCFDICobranzaSegmentos ON 
	TesCFDICobranzaSegmentos.TesCFDICobranza =  TesCFDICobranzaRel.TesCFDICobranza
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = TesCFDICobranzaSegmentos.Segmento_Id
where
	TesCFDICobranzaSegmentos.Segmento1C = @pSegmento1C and 
	TesCFDICobranzaSegmentos.Segmento2C = @pSegmento2C and 
	TesCFDICobranzaSegmentos.Segmento3C = @pSegmento3C and 
	TesCFDICobranzaSegmentos.Segmento4C = @pSegmento4C and 
	TesCFDICobranzaSegmentos.Segmento1N = @pSegmento1N and 
	TesCFDICobranzaSegmentos.Segmento2N = @pSegmento2N and 
	TesCFDICobranzaSegmentos.Segmento3N = @pSegmento3N and 
	TesCFDICobranzaSegmentos.Segmento4N = @pSegmento4N 


GO








Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_comAplicaciones.sql*/

-- INF_comAplicaciones  '20211001','20211031',' ','ZZZ',1
DROP Procedure INF_comAplicaciones 
GO
CREATE Procedure INF_comAplicaciones 
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Empresa_Id INT
)
AS

SELECT  comProveedores.Proveed_Id, comProveedores.RazonSocial,
	genAsiSegmentos.Asiento_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,	genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N) as ComprobantePag, 
	genCancMov.FechaAplicacion,
	genAsiSegmentosf.Asiento_Id as Asiento_idf, 
	dbo.Segmento(genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C,
	genAsiSegmentosF.Segmento2C,genAsiSegmentosF.Segmento3C,genAsiSegmentosF.Segmento4C,
	genAsiSegmentosF.Segmento1N,	genAsiSegmentosF.Segmento2N,genAsiSegmentosF.Segmento3N,
	genAsiSegmentosF.Segmento4N) as ComprobanteFact, 
	genCancMov.Importe, genCancMov.CuotaNro, genMonedas.Moneda_Id, 
	genCancMov.Importe* conAsientos.Cambio as ImporteBase
	
from genAsiSegmentos INNER JOIN conAsientos ON
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genCancMov ON
genCancMov.Asiento_Id = conAsientos.conAsientos
inner join genAsiSegmentos as genAsiSegmentosF on
genAsiSegmentosF.Asiento_Id = genCancMov.Asiento_Id_Ap
INNER JOIN conAsientos as conAsientosF ON 
conAsientosF.conAsientos = genAsiSegmentosF.Asiento_Id
INNER JOIN comMovProv ON
comMovProv.comMovProv = conAsientosF.conAsientos
INNER JOIN comProveedores ON
comProveedores.genEntidades = commovprov.Proveed_Id
inner join genMonedas on  genMonedas.genMonedas =conAsientos.Moneda_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientosF.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
	genCancMov.FechaAplicacion between @FechaDesde and @FechaHasta
ORDER BY 1, 3, 5
	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comCFDISat.sql*/
drop procedure inf_comCFDISat
go
create procedure inf_comCFDISat
(
    @FechaDesde datetime,
    @FechaHasta datetime,
    @Subidos SiNo,
    @Empresa_Id int
)
as
select UUID, RFCEmisor, Fecha, Monto, Folio, Serie, isnull(FechaCarga,' ') FechaCarga ,
case when TipoDeComprobante='E' then 'Egreso' when TipoDeComprobante='I' then 'Ingreso' when TipoDeComprobante='P' then 'Pago' else TipoDeComprobante end as TipoDeComprobante 
, vcomProveedores.Proveed_Id, vcomProveedores.RazonSocial
from comCFDISat
left join vComproveedores on comCFDISat.RFCEmisor = vComproveedores.CUIT
where 
Fecha between @FechaDesde and @FechaHasta and 
	@Subidos=Subido and 
	isnull(comCFDISat.Empresa_Id, @Empresa_Id)=@Empresa_Id
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comCierreDeta.sql*/
-- exec inf_comCierreDeta '20210401','20210430',1
drop PROCEDURE inf_comCierreDeta
go

CREATE PROCEDURE inf_comCierreDeta(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_id int
)

as
SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, genMonedas.Moneda_Id, 
	conAsientos.Cambio,
	 ISNULL((SELECT SUM(comMovProv.importe*comMovTipos.Signo) 
	from comMovProv 
		INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comMovProv.comMovProv 
		INNER JOIN comMovTipos ON  comMovTipos.TipoMov = comMovProv.TipoMov
		where
			conAsientosP.Anulado = 0 and
			conAsientosP.Posteado = 1 and 
			conAsientosP.Empresa_id = @Empresa_id and 
			conAsientosP.Empresa_Id = @Empresa_id and 
			conAsientosP.Fecha <= @FechaHasta and
			commovprov.Proveed_Id = comProveedores.genEntidades and 
			conAsientosP.Moneda_Id = genMonedas.genMonedas),0) SaldoMonExtran,
			-- saldo pro
			ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
			FROM comMovProv 
				INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comMovProv.comMovProv
				INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND conMovCont.Clase IN ('PRO')
				INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id  
				WHERE 
				genMonedas.genMonedas = conCuentas.Moneda_id AND 
				comMovProv.Proveed_Id= comProveedores.genEntidades and 
				conAsientosP.Anulado = 0 and 
				conAsientosP.Empresa_Id = @Empresa_Id and 
				conAsientosP.Fecha <= @FechaHasta ),0) + 
		--APLICACIONES
		isnull((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
			FROM commovprov 
			INNER JOIN genCancMov ON genCancMov.Asiento_Id = comMovProv.comMovProv 
			INNER JOIN conAsientos  conAsientosP ON conAsientosP.conAsientos = genCancMov.AsientoApli_Id
			INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientosP.conAsientos AND conMovCont.Clase IN ('PRO')
			INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
			WHERE 
			genMonedas.genMonedas = conCuentas.Moneda_id AND 
			comMovProv.Proveed_Id= comProveedores.genEntidades and 
			genCancMov.Importacion = 0 and 
			conAsientosP.Anulado = 0 and 
			conAsientosP.Empresa_Id = @Empresa_Id and 
			conAsientosP.Fecha <= @FechaHasta ),0) +
-- DIFERENCIA EN CAMBIOS
	ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM commovprov 
		INNER JOIN genCancMov ON  genCancMov.Asiento_Id = comMovProv.comMovProv 
		INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsieDifCambio_Id
		INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND conMovCont.Clase IN ('PRO')
		INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovProv.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 0 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta),0) +
	-- CIERRE DE MES
	ISNULL((SELECT 	SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM comAsiCierreCr 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comAsiCierreCr.Asiento_id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovcont.Renglon = comAsiCierreCr.conRenglon and conMovCont.Clase IN ('PRO')
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comAsiCierreCr.Proveed_Id= comProveedores.genEntidades and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaDesde),0) +
	isnull((SELECT SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) as ImporteonedaOriginal 
		FROM commovprov 
			INNER JOIN genCancMov ON genCancMov.Asiento_Id = comMovProv.comMovProv 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsientoApli_Id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('PRO')
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
			INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
						genCancMovApliImpor.Renglon = conMovCont.Renglon and 
						genCancMovApliImpor.EsDelAp = 0
		WHERE 
		genMonedas.genMonedas = conCuentas.Moneda_id AND 
		comMovprov.Proveed_Id= comProveedores.genEntidades and 
		genCancMov.Importacion = 1 and 
		conAsientosP.Anulado = 0 and 
		conAsientosP.Empresa_Id = @Empresa_Id and 
		conAsientosP.Fecha <= @FechaHasta),0) +
	-- IMPORTACIONES AP
	ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
	
	FROM commovprov 
	INNER JOIN genCancMov ON  genCancMov.Asiento_Id_Ap = comMovProv.comMovProv 
	INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsientoApli_Id
	INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('PRO')
	INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
	INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
					genCancMovApliImpor.Renglon = conMovCont.Renglon and 
					genCancMovApliImpor.EsDelAp = 1
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovprov.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 1 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta),0) +
ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
FROM commovprov 
INNER JOIN genCancMov ON  genCancMov.Asiento_Id = comMovProv.comMovProv 
INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsieDifCambio_Id
INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('PRO')
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
				genCancMovApliImpor.Renglon = conMovCont.Renglon and 
				genCancMovApliImpor.EsDelAp = 0
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovprov.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 1 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta ),0) +
-- IMPROTACIONES DC AP
ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
	FROM commovprov 
	INNER JOIN genCancMov ON genCancMov.Asiento_Id_Ap = comMovProv.comMovProv 
	INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsieDifCambio_Id
	INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('PRO')
	INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
	INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
				genCancMovApliImpor.Renglon = conMovCont.Renglon and 
				genCancMovApliImpor.EsDelAp = 1
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovprov.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 1 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta ),0) AS SaldoProvedores, 

			ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
			FROM comMovProv 
				INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comMovProv.comMovProv
				INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND conMovCont.Clase IN ('ANTPR')
				INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id  
				WHERE 
				genMonedas.genMonedas = conCuentas.Moneda_id AND 
				comMovProv.Proveed_Id= comProveedores.genEntidades and 
				conAsientosP.Anulado = 0 and 
				conAsientosP.Empresa_Id = @Empresa_Id and 
				conAsientosP.Fecha <= @FechaHasta ),0) + 
		--APLICACIONES
		isnull((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
			FROM commovprov 
			INNER JOIN genCancMov ON genCancMov.Asiento_Id = comMovProv.comMovProv 
			INNER JOIN conAsientos  conAsientosP ON conAsientosP.conAsientos = genCancMov.AsientoApli_Id
			INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientosP.conAsientos AND conMovCont.Clase IN ( 'ANTPR')
			INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
			WHERE 
			genMonedas.genMonedas = conCuentas.Moneda_id AND 
			comMovProv.Proveed_Id= comProveedores.genEntidades and 
			genCancMov.Importacion = 0 and 
			conAsientosP.Anulado = 0 and 
			conAsientosP.Empresa_Id = @Empresa_Id and 
			conAsientosP.Fecha <= @FechaHasta ),0) +
-- DIFERENCIA EN CAMBIOS
	ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM commovprov 
		INNER JOIN genCancMov ON  genCancMov.Asiento_Id = comMovProv.comMovProv 
		INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsieDifCambio_Id
		INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND conMovCont.Clase IN ('ANTPR')
		INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovProv.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 0 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta),0) +
	-- CIERRE DE MES
	ISNULL((SELECT 	SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM comAsiCierreCr 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comAsiCierreCr.Asiento_id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovcont.Renglon = comAsiCierreCr.conRenglon and 
				conMovCont.Clase IN ('ANTPR')
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comAsiCierreCr.Proveed_Id= comProveedores.genEntidades and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaDesde),0) +
	isnull((SELECT SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) as ImporteonedaOriginal 
		FROM commovprov 
			INNER JOIN genCancMov ON genCancMov.Asiento_Id = comMovProv.comMovProv 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsientoApli_Id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('ANTPR')
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
			INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
						genCancMovApliImpor.Renglon = conMovCont.Renglon and 
						genCancMovApliImpor.EsDelAp = 0
		WHERE 
		genMonedas.genMonedas = conCuentas.Moneda_id AND 
		comMovprov.Proveed_Id= comProveedores.genEntidades and 
		genCancMov.Importacion = 1 and 
		conAsientosP.Anulado = 0 and 
		conAsientosP.Empresa_Id = @Empresa_Id and 
		conAsientosP.Fecha <= @FechaHasta),0) +
	-- IMPORTACIONES AP
	ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
	
	FROM commovprov 
	INNER JOIN genCancMov ON  genCancMov.Asiento_Id_Ap = comMovProv.comMovProv 
	INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsientoApli_Id
	INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('ANTPR')
	INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
	INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
					genCancMovApliImpor.Renglon = conMovCont.Renglon and 
					genCancMovApliImpor.EsDelAp = 1
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovprov.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 1 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta),0) +
ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
FROM commovprov 
INNER JOIN genCancMov ON  genCancMov.Asiento_Id = comMovProv.comMovProv 
INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsieDifCambio_Id
INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ( 'ANTPR')
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
				genCancMovApliImpor.Renglon = conMovCont.Renglon and 
				genCancMovApliImpor.EsDelAp = 0
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovprov.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 1 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta ),0) +
-- IMPROTACIONES DC AP
ISNULL((SELECT  SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
	FROM commovprov 
	INNER JOIN genCancMov ON genCancMov.Asiento_Id_Ap = comMovProv.comMovProv 
	INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = genCancMov.AsieDifCambio_Id
	INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovCont.Clase IN ('ANTPR')
	INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id 
	INNER JOIN genCancMovApliImpor ON genCancMovApliImpor.conAsientos = conMovCont.conAsientos and 
				genCancMovApliImpor.Renglon = conMovCont.Renglon and 
				genCancMovApliImpor.EsDelAp = 1
	WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comMovprov.Proveed_Id= comProveedores.genEntidades and 
	genCancMov.Importacion = 1 and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha <= @FechaHasta ),0) AS SaldoAnticipos, 
	ISNULL((SELECT 	SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM comAsiCierreCr 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comAsiCierreCr.Asiento_id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovcont.Renglon = comAsiCierreCr.conRenglon and 
				conMovCont.Clase IN ('PRO', 'ANTPR')
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comAsiCierreCr.Proveed_Id= comProveedores.genEntidades and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha between @FechaDesde and @FechaHasta),0) Cierre, 

	ISNULL((SELECT 	SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM comAsiCierreCr 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comAsiCierreCr.Asiento_id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovcont.Renglon = comAsiCierreCr.conRenglon and 
				conMovCont.Clase IN ('PRO', 'ANTPR') and conmovcont.TipoMov = 2
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comAsiCierreCr.Proveed_Id= comProveedores.genEntidades and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha between @FechaDesde and @FechaHasta),0) Perdida,
		ISNULL((SELECT 	SUM(conMovCont.Importe * (-2*conMovCont.TipoMov+3)) 
		FROM comAsiCierreCr 
			INNER JOIN conAsientos conAsientosP ON conAsientosP.conAsientos = comAsiCierreCr.Asiento_id
			INNER JOIN conMovCont ON conMovCont.conAsientos =conAsientosP.conAsientos AND  conMovcont.Renglon = comAsiCierreCr.conRenglon and 
				conMovCont.Clase  IN ('PRO', 'ANTPR') and conmovcont.TipoMov = 1
			INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_id 
WHERE 
	genMonedas.genMonedas = conCuentas.Moneda_id AND 
	comAsiCierreCr.Proveed_Id= comProveedores.genEntidades and 
	conAsientosP.Anulado = 0 and 
	conAsientosP.Empresa_Id = @Empresa_Id and 
	conAsientosP.Fecha between @FechaDesde and @FechaHasta),0) Ganancia

from comAsiCierre
INNER JOIN conAsientos ON  conAsientos.conAsientos = comAsiCierre.Asiento_Id
inner join genMonedas ON  genMonedas.genMonedas = comAsiCierre.Moneda_Id
iNNER JOIN comAsiCierreCr ON  comAsiCierreCr.Asiento_Id = comAsiCierre.Asiento_Id
INNER JOIN comProveedores ON  comProveedores.genEntidades =  comAsiCierreCr.Proveed_id
INNER JOIN genAsiSegmentos ON  genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
where
	conAsientos.Anulado = 0 and
	conAsientos.Posteado = 1 and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	conAsientos.Empresa_Id = @Empresa_id
GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial, genMonedas.Moneda_Id, 
genMonedas.genMonedas, comProveedores.genEntidades, conAsientos.Cambio
ORDER BY 3,1
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comComprasPagadas.sql*/


--select * from vcomImpPagados where commovprov = 10543
-- comCompras_Pagadas '20191001','20191130', 1
--	
DROP PROCEDURE inf_comComprasPagadas
GO
CREATE PROCEDURE inf_comComprasPagadas( 
	@FechaDesde DATETIME, 
	@FechaHasta DATETIME, 
	@Empresa_id int)
AS
select XXX.Pais, XXX.Origen AS Origen_id, XXX.RFC, XXX.RazonSocial, XXX.idFiscal,
	XXX.NACIONALIDAD, SUM(BASE16) AS BASE16, 
	SUM(IVA16) AS IVA16, SUM(BASE0) AS BASE0, 
	SUM(BaseExe) AS BaseExe, 
	SUM(RISR) AS RISR, SUM(RIVA) AS RIVA, 
	SUM(IVAIM) AS IVAIM, SUM(OTROS) AS OTROS, 
	SUM(BASEFront) BASEFront , SUM(IVAFront) IVAFront
from (

SELECT genPaises.Dominio_Id AS Pais, 
	CASE WHEN genPaises.Dominio_Id<>'MX' THEN genEntidades.IDFISCAL ELSE '' END  idFiscal,
	comOrigenesFiscales.Origen_id as Origen,
	isnull(genEntidades.Cuit, 'XAXX010101000') RFC,  
	ISNULL(COMPROVEEDORES.NOMBRELEGAL, 'PROVEEDOR GLOBAL') AS RazonSocial ,
	genPaises.DESCRIPCION Nacionalidad,
	vComImpPagados.Fecha, commovprov.comMovProv, 
	
ISNULL((SELECT SUM(BaseImponible) from comMovImpAcredita, comImpuestos, impTipoImpuesto  Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'I7' ),0) as Base16, 
ISNULL((SELECT SUM(Monto) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'I7'),0) as IVA16, 
ISNULL((SELECT SUM(BaseImponible) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'T0'),0) as Base0, 	
ISNULL((SELECT SUM(BaseImponible) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'EX'),0) as BaseExe, 
-(ISNULL((SELECT SUM(Monto) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'RS'),0) +

ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = vcomImpPagados.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	comImpuestos.PorAcreditacion = 0 and
	impTipoImpuesto.CodigoFiscal = 'RS'),0)) as RISR, 
	
-(ISNULL((SELECT SUM(Monto) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'R1'),0) + 
	ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = vcomImpPagados.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	comImpuestos.PorAcreditacion = 0 and
	impTipoImpuesto.CodigoFiscal = 'R1'),0))  as RIVA, 

ISNULL((SELECT SUM(Monto) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'I5'),0) +
	ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = vcomImpPagados.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	comImpuestos.PorAcreditacion = 0 and
	impTipoImpuesto.CodigoFiscal = 'I5'),0) as IVAIM,	
abs(ISNULL((SELECT SUM(Monto) from comMovImpAcredita, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo  NOT IN ('IF','I7','I5','R1','RS','T0','EX')),0) +
	ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = vcomImpPagados.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	comImpuestos.PorAcreditacion = 0 and
	impTipoImpuesto.CodigoFiscal NOT IN ('IF','I7','I5','R1','RS','T0','EX')),0)) as Otros, 
	ISNULL((SELECT SUM(BaseImponible) from comMovImpAcredita, comImpuestos, impTipoImpuesto  Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'IF' ),0)  as BASEFront,
		ISNULL((SELECT SUM(comMovImpAcredita.Monto) from comMovImpAcredita, comImpuestos, impTipoImpuesto  Where
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_id and
	comMovImpAcredita.tesMovimientos = vcomImpPagados.tesMovimientos and
	comMovImpAcredita.comMovprov = vcomImpPagados.comMovprov and 
	comMovImpAcredita.Asiento_Id =vcomImpPagados.Asiento_id and
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto AND 
	impTipoImpuesto.CodigoFiscal = vcomImpPagados.Tipo AND 
	vcomImpPagados.Tipo = 'IF' ),0)  as IVAFront,
	@FechaDesde FechaDesde, @FechaHasta FechaHasta
 from  vcomImpPagados 
	inner JOIN comProveedores ON
	comProveedores.Proveed_id = vcomImpPagados.Proveed_id 
	INNER JOIN genEntidades ON
	genEntidades.genEntidades = comProveedores.genEntidades
	INNER JOIN comMovprov ON 
	comMovprov.comMovprov = vcomImpPagados.comMovprov 
	INNER JOIN conAsientos ON
    conAsientos.conAsientos  = comMovprov.comMovProv
	INNER JOIN conAsientos conAsientosT ON
    conAsientosT.conAsientos  = vcomImpPagados.tesMovimientos
	INNER JOIN genPaises ON 
		genPaises.genPaises = comProveedores.Pais
		inner join comOrigenesFiscales on comOrigenesFiscales.comOrigenesFiscales=commovprov.Origen_Id
WHERE
		vcomImpPagados.Empresa_id = @Empresa_id and 
		vcomImpPagados.Fecha Between @FechaDesde And @FechaHasta
UNION ALL -- PROVEEDORES MENORES

SELECT DISTINCT  genPaises.Dominio_Id AS Pais, 
	CASE WHEN genPaises.Dominio_Id<>'MX' THEN genEntidades.IDFISCAL ELSE '' END  idFiscal,
	comOrigenesFiscales.Origen_id as Origen,
	isnull(genEntidades.Cuit, 'XAXX010101000') RFC,  
	ISNULL(COMPROVEEDORES.NOMBRELEGAL, 'PROVEEDOR GLOBAL') AS RazonSocial ,
	genPaises.DESCRIPCION NACIONALIDAD,
	conAsientos.Fecha, commovprov.commovprov, 
	
ISNULL((SELECT SUM(comMovImpuestos.Base_Imponible) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'I7' ),0) as Base16, 
	ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'I7' ),0) as IVA16, 
ISNULL((SELECT SUM(comMovImpuestos.Base_Imponible) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'T0' ),0) as Base0, 	
ISNULL((SELECT SUM(comMovImpuestos.Base_Imponible) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'EX' ),0) as BaseExe, 
-ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'RS' ),0) as  RISR, 
	
-ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'R1' ),0) as RIVA, 

ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'I5' ),0)  as IVAIM,	

abs(ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal NOT IN ('IF','I7','I5','R1','RS','T0','EX') ),0)) as Otros, 
ISNULL((SELECT SUM(comMovImpuestos.Base_Imponible) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'IF' ),0) as BaseFont, 
	ISNULL((SELECT SUM(comMovImpuestos.Importe_Impuesto) from comMovImpuestos, comImpuestos, impTipoImpuesto Where
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_id and
	comMovImpuestos.comMovprov = comMovprov.comMovprov and 
	impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto and 
	impTipoImpuesto.CodigoFiscal = 'IF' ),0) as IVAFront, 
	
	@FechaDesde FechaDesde, @FechaHasta FechaHasta
 from comMovImpuestos
	INNER JOIN comMovprov ON 
	comMovprov.comMovprov = comMovImpuestos.comMovprov 
	inner JOIN comProveedores ON
	comProveedores.genEntidades = comMovProv.Proveed_id 
	INNER JOIN genEntidades ON
	genEntidades.genEntidades = comProveedores.genEntidades
	LEFT JOIN genPaises ON 
			(comProveedores.Pais IS NULL and genPaises.Dominio_id = 'MX') or
			genPaises.genPaises = comProveedores.Pais 
	inner join comOrigenesFiscales on comOrigenesFiscales.comOrigenesFiscales=commovprov.Origen_Id
	INNER JOIN conAsientos ON 
	conAsientos.conAsientos = commovprov.comMovProv
	inner join tesRengMovicomMovProv on
	tesRengMovicomMovProv.comMovProv = comMovProv.comMovProv
WHERE
		conAsientos.Empresa_id = @Empresa_id and 
		conAsientos.Fecha Between @FechaDesde And @FechaHasta and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 

		 ) as XXX
GROUP BY XXX.Pais, XXX.Origen, XXX.RFC, XXX.RazonSocial, 
	XXX.NACIONALIDAD, XXX.idFiscal 

GO
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comCompRegistrados.sql*/
-- Inf_comCompRegistrados '20180101','20201231',' ','ZZZ',1
DROP PROCEDURE Inf_comCompRegistrados
GO
CREATE PROCEDURE Inf_comCompRegistrados 
(
	
	@FechaDesde DateTime,
	@FechaHasta DateTime, 
	@UsuarioDesde VarChar(25),
	@UsuarioHasta VarChar(25),
	@Empresa int
)
AS

DECLARE @FechaHastaDT DateTime
SET @FechaHastaDT = DATEADD(ms,1,DATEADD(dd,1,@FechaHasta))

SELECT conAsientos.FechaRegistro, 
	commovprov.comMovProv,  dbo.Segmento(genAsiSegmentos.Segmento_id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N) as Segmento, 
	comProveedores.Proveed_Id, comProveedores.RazonSocial,
		conAsientos.Fecha, 
		disFormularios.Formulario_Id, disFormularios.Descripcion, 
		comMovprov.Importe, genMonedas.Simbolo, genMonedas.Moneda_Id , 
		genUsuarios.Usuario_Id, 
			CASE WHEN conAsientos.Anulado=1 then 'Anulado' else ' ' end as Estado
FROM comMovprov INNER JOIn conAsientos ON
	comMovprov.comMovProv = conAsientos.conAsientos 
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	inner join comProveedores on
	comProveedores.genEntidades = comMovprov.Proveed_Id
	inner join disFormularios ON
	disFormularios.disFormularios = conAsientos.Formulario_Id
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genUsuarios ON
	genUsuarios.genUsuarios = conAsientos.Usuario_Id
Where
	conAsientos.FechaRegistro between @FechaDesde and @FechaHastaDT and
	genAsiSegmentos.Empresa_Id = @Empresa and
	genUsuarios.Usuario_Id Between @UsuarioDesde and @UsuarioHasta
ORDER BY 1
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comCompSaldo.sql*/

-- Inf_comCompSaldo  '20191231','0011','0011',1
DROP PROCEDURE Inf_comCompSaldo 
GO
CREATE PROCEDURE Inf_comCompSaldo
(
	@FechaHasta DateTime, 
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Empresa_Id INT

)
AS

SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,@FechaHasta), @Empresa_Id) as Cambio
INTO #CAMBIO
FROM genMonedas


SELECT comProveedores.Proveed_Id , comProveedores.RazonSocial,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
		genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
		genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Comprobante, 
		conAsientos.Fecha, (commovprov.Saldo +
		ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id = commovprov.commovprov AND 
			genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			(genCancMov.FechaAplicacion > @FechaHasta or 
			conAsientos.Fecha >@FechaHasta ) 	and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)+
	ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id_ap = commovprov.commovprov AND 
			genCancMov.Asiento_Id = conAsientos.conAsientos and 
			(genCancMov.FechaAplicacion > @FechaHasta or 
			conAsientos.Fecha >@FechaHasta ) 	and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0))* comMovTipos.Signo * Cambio.Cambio as Saldo, 
			(commovprov.Saldo +
		ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id = commovprov.commovprov AND 
			genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			(genCancMov.FechaAplicacion > @FechaHasta or 
			conAsientos.Fecha >@FechaHasta ) 	and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)+
	ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id_ap = commovprov.commovprov AND 
			genCancMov.Asiento_Id = conAsientos.conAsientos and 
			(genCancMov.FechaAplicacion > @FechaHasta or 
			conAsientos.Fecha >@FechaHasta ) and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0))* comMovTipos.Signo as SaldoOri , Cambio.Cambio 

from comMovProv INNER JOIN conAsientos ON
	comMovProv.comMovProv = conAsientos.conAsientos
	inner join comProveedores ON 
	comProveedores.genEntidades = comMovProv.Proveed_Id 
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id =conAsientos.conAsientos
	inner join comMovTipos ON
	comMovTipos.TipoMov = comMovProv.TipoMov
	INNER JOIN #CAMBIO Cambio ON 
	Cambio.genMonedas = conAsientos.Moneda_Id
	WHERE
		comMovProv.FacturaTesoreria = 0 and 
		conAsientos.Anulado = 0 AND 
		conAsientos.Posteado = 1 AND 
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and
		conAsientos.Fecha <= @FechaHasta and 
		conAsientos.Empresa_Id = @Empresa_Id and 
		(commovprov.Saldo +
		ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id = commovprov.commovprov AND 
			genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			(genCancMov.FechaAplicacion > @FechaHasta or 
			conAsientos.Fecha >@FechaHasta ) and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)+
	ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id_ap = commovprov.commovprov AND 
			genCancMov.Asiento_Id = conAsientos.conAsientos and 
			(genCancMov.FechaAplicacion > @FechaHasta or 
			conAsientos.Fecha >@FechaHasta ) and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)) <> 0
order by 1, 4,3
	
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comCostosImprtacion.sql*/
--Inf_comCostosImprtacion 'EMB',1,0,0,0,'0001',' ',' ',' ',1,1

DROP PROCEDURE Inf_comCostosImprtacion
GO
CREATE PROCEDURE Inf_comCostosImprtacion
(
	@Segmento_Id VarChar(10),
	@Segmento1N INT, 
	@Segmento2N INT, 
	@Segmento3N INT, 
	@Segmento4N INT, 
	@Segmento1C VarChar(25), 
	@Segmento2C VarChar(25), 
	@Segmento3C VarChar(25), 
	@Segmento4C VarChar(25), 
	@Segmento1NHasta INT, 
	@Empresa_Id Int
)
as



			

	
select xxx.comEmbarques, Renglon, Embarque, Producto_Id, Descripcion, CantidadOriginal as Cantidad, 
	PrecioOriginal as Precio,  PrecioCalculadoOriginal as PrecioEstimado, 
	Detalle DetalleGasto, ImporteOriginal * case when CantidadImporte ='I' THEN PrecioOriginal*CantidadOriginal / Total ELSE
		CantidadOriginal / CantidadTotal END / case when xxx.Moneda_id = xxx.MonedaGasto THEN 1 ELSE 
			Cambio.Cambio end  AS GastoEstimado,
		GastosReales * case when CantidadImporte ='I' THEN PrecioOriginal*CantidadOriginal / Total ELSE
		CantidadOriginal / CantidadTotal END / Cambio.Cambio GastoReal
from 
(
SELECT comEmbarques.comEmbarques , comEmbCuerpo.comOrdenComp*1000+comEmbCuerpo.Renglon_OC AS Renglon,
	conAsientos.Moneda_Id,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
		genAsiSegmentos.Segmento4N) AS Embarque,
		stkProductos.Producto_Id, stkProductos.Descripcion, comEmbCuerpo.CantidadOriginal, 
		comOCArticulo.PrecioOriginal,  	comEmbCuerpo.PrecioCalculadoOriginal, 
		comEmbGastos.Detalle, comEmbGastos.ImporteOriginal  ,comEmbGastos.CantidadImporte, 
			comEmbGastos.Moneda_Id AS MonedaGasto,
		ISNULL((SELECT SUM(comMovDetalle.Importe*conAsientos.Cambio)  
			from comEmbGastoMovProv inner join comMovDetalle ON
			comEmbGastoMovProv.comMovProv = comMovDetalle.comMovProv and 
			comEmbGastoMovProv.comRenglon = comMovDetalle.Renglon
			inner join conAsientos ON conAsientos.conAsientos = comMovDetalle.comMovProv 
			Where
				conAsientos.Posteado= 1 and 
				conAsientos.Anulado = 0 and 
				comEmbGastoMovProv.comEmbarques = comEmbGastos.comEmbarques and 
				comEmbGastoMovProv.Renglon = comEmbGastos.Renglon),0) as GastosReales, 
		ISNULL((SELECT SUM(comEmbCuerpo.CantidadOriginal * comOCArticulo.PrecioOriginal)  
			from comEmbCuerpo inner join comOCArticulo ON 
			comEmbCuerpo.comOrdenComp = comOCArticulo.comOrdenComp AND 
			comEmbCuerpo.Renglon_OC = comOCArticulo.Renglon_OC
			Where
				comEmbCuerpo.comEmbarques = comEmbarques.comEmbarques ),0) AS Total, 
		ISNULL((SELECT SUM(comEmbCuerpo.CantidadOriginal)  
			from comEmbCuerpo inner join comOCArticulo ON 
			comEmbCuerpo.comOrdenComp = comOCArticulo.comOrdenComp AND 
			comEmbCuerpo.Renglon_OC = comOCArticulo.Renglon_OC
			Where
				comEmbCuerpo.comEmbarques = comEmbarques.comEmbarques ),0) AS CantidadTotal
FROM comEmbarques 
	inner join genAsiSegmentos ON comEmbarques.comEmbarques = genAsiSegmentos.Asiento_Id
	inner join conAsientos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	inner join comEmbCuerpo ON	comEmbCuerpo.comEmbarques = comEmbarques.comEmbarques
	inner join comOCArticulo ON comOCArticulo.comOrdenComp = comEmbCuerpo.comOrdenComp and 
				comOCArticulo.Renglon_OC = 	comEmbCuerpo.Renglon_OC
	INNER JOIN stkProductos ON  stkProductos.stkProductos = comOCArticulo.Producto_Id
	INNER JOIN comEmbGastos ON comEmbGastos.comEmbarques = comEmbarques.comEmbarques
	INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	Where
		conAsientos.Posteado = 1 and 
		conAsientos.Anulado = 0 and 
		genAsiSegmentos.Empresa_Id = @Empresa_Id AND
		genSegmentos.Segmento_Id = @Segmento_Id AND 
		genAsiSegmentos.Segmento1C = @Segmento1C AND
		genAsiSegmentos.Segmento2C = @Segmento2C AND
		genAsiSegmentos.Segmento3C = @Segmento3C AND
		genAsiSegmentos.Segmento4C = @Segmento4C AND
		genAsiSegmentos.Segmento1N between @Segmento1N AND @Segmento1NHasta and 
		genAsiSegmentos.Segmento2N = @Segmento2N AND
		genAsiSegmentos.Segmento3N = @Segmento3N AND
		genAsiSegmentos.Segmento4N = @Segmento4N 

) as xxx  INNER JOIN 
(select stkMoviEmbarque.comEmbarques, comDespachos.cambio 
		from comDespachos inner join stkMoviEmbarque ON 
				stkMoviEmbarque.Despacho_Id = comDespachos.comDespachos  
			inner join conAsientos ON 
				conAsientos.conAsientos = stkMoviEmbarque.stkMoviCabe
			where
				conAsientos.Anulado= 0 and 
				conAsientos.Posteado = 1 ) as Cambio  on 
				Cambio.comEmbarques = xxx.comEmbarques
ORDER BY 1,2

GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_COMEDOCTA.sql*/
--INF_COMEDOCTA 'CSS160330CP7','CSS160330CP7', 0, '20190501','20190531', 1

DROP PROCEDURE INF_COMEDOCTA
GO
CREATE PROCEDURE INF_COMEDOCTA(
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Pendiente bit, 
	@FechaDesde DateTime, 
	@FechaHasta DateTime,
	@Empresa Int
)

AS
--declare @ProveedDesde VarChar(15)='',@ProveedHasta VarChar(15)='ZZZZZ',@Pendiente bit=1, @FechaDesde DateTime='20200101', @FechaHasta DateTime='20201231',@Empresa Int=1
SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	conAsientos.Fecha Fecha, 
	comProveedores.RazonSocial,
		dbo.Segmento(genAsiSegmentos.Segmento_id, 
			genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
			genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
			genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
			genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento, 
			genAsiSegmentos.Segmento4C as Comprobante, 
			genSucursalesEmpr.Sucursal as Sucursal_Id, 
	CASE WHEN comMovTipos.Signo = 1 then genMovCuotas.Importe else 0 end as Debe,
	CASE WHEN comMovTipos.Signo != 1 then genMovCuotas.Importe else 0 end as Haber,
	genMovCuotas.Saldo  * comMovTipos.Signo as Saldo, 
	genMovCuotas.FechaVencimiento, conAsientos.Cambio,
	CASE WHEN comMovTipos.Signo = 1 then conAsientos.Cambio *genMovCuotas.Importe else 0 end as DebeBase,
	CASE WHEN comMovTipos.Signo != 1 then conAsientos.Cambio *genMovCuotas.Importe else 0 end as HaberBae,
	conAsientos.Cambio * genMovCuotas.Saldo  * comMovTipos.Signo as SaldoBase,
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion Provincia_id, genPaises.Descripcion Pais_Id, 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail, comMovProv.comMovprov , 
	genUsuarios.Usuario_Id

FROM comMovProv inner join comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genAsiSegmentos on 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN comMovTipos ON
	comMovTipos.TipoMov = comMovprov.TipoMov
	INNER JOIN genMovCuotas ON
	genMovCuotas.Asiento_Id = comMovprov.comMovprov
	inner join genSucursalesEmpr on 
	conAsientos.Sucursal=genSucursalesEmpr.genSucursalesEmpr
	INNER JOIN genUsuarios ON genUsuarios.genUsuarios = conAsientos.Usuario_Id
	WHERE
		comMovProv.FacturaTesoreria = 0 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		((@Pendiente = 1 AND genMovCuotas.Saldo <> 0) OR 
		(@Pendiente = 0 AND conAsientos.Fecha Between @FechaDesde and @FechaHasta)) and 
		conAsientos.Empresa_Id = @Empresa

UNION ALL
-- IMPORTACIONES 
SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	genCancMov.FechaAplicacion Fecha, 
	comProveedores.RazonSocial, 
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
			genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
			genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
			genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
			genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N)	 AS Segmento, 
			genAsiSegmentos.Segmento4C as Comprobante, genSucursalesEmpr.Sucursal as Sucursal_Id, 
	0 as Debe,
	(genCancMov.Importe)  as Haber,
	0 as Saldo,
	genCancMov.FechaAplicacion ,  
	 1 as Cambio,
	 0 as DebeBase,
	 genCancMov.Importe_ap  as HaberBase,
	0  as SaldoBase , 
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion Provincia_id, genPaises.Descripcion Pais_Id, 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail, genAsiSegmentos.Asiento_Id comMovprov ,
	genUsuarios.Usuario_Id
FROM genCancMov INNER JOIN comMovProv ON
	genCancMov.Asiento_Id = comMovprov.comMovProv 
	INNER JOIN genAsiSegmentos ON 
	genAsiSegmentos.Asiento_Id = genCancMov.Asiento_Id_Ap
	INNER JOIN comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genSucursalesEmpr on conAsientos.Sucursal=genSucursalesEmpr.genSucursalesEmpr
	INNER JOIN genUsuarios ON genUsuarios.genUsuarios = genCancMov.Usuario_Id
	WHERE
		comMovProv.FacturaTesoreria = 0 and 
		genCancMov.Importacion = 1 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		@Pendiente = 0 and genCancMov.FechaAplicacion between @FechaDesde and @FechaHasta and 
		conAsientos.Empresa_Id = @Empresa
	
UNION ALL
--- importaciones

SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	genCancMov.FechaAplicacion Fecha, 
	comProveedores.RazonSocial, 
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
			genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
			genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
			genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
			genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N)	 AS Segmento, 
			genAsiSegmentos.Segmento4C as Comprobante, genSucursalesEmpr.Sucursal as Sucursal_Id, 
	(genCancMov.Importe_ap) as Debe,
	0  as Haber,
	0 as Saldo, 
	@FechaDesde,  
	1 as Cambio,
	genCancMov.Importe  as DebeBase,
	 0 as HaberBase,
	0 as SaldoBase , 
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion Provincia_id, genPaises.Descripcion Pais_Id, 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail, genAsiSegmentos.Asiento_Id comMovprov ,
	genUsuarios.Usuario_Id
FROM genCancMov INNER JOIN comMovProv ON
	genCancMov.Asiento_Id_Ap = comMovprov.comMovProv 
	INNER JOIN genAsiSegmentos ON 
	genAsiSegmentos.Asiento_Id = genCancMov.Asiento_Id
	INNER JOIN comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genSucursalesEmpr on conAsientos.Sucursal=genSucursalesEmpr.genSucursalesEmpr
	INNER JOIN genUsuarios ON genUsuarios.genUsuarios = genCancMov.Usuario_Id
	WHERE
		comMovProv.FacturaTesoreria = 0 and 
		genCancMov.Importacion = 1 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		@Pendiente = 0 and genCancMov.FechaAplicacion between @FechaDesde and @FechaHasta and 
		conAsientos.Empresa_Id = @Empresa


union all

SELECT Proveed_id, Moneda_id, Fecha, RazonSocial, Segmento, Comprobante, Sucursal_Id, 
	case when Sum(Saldo) >0 then Sum(Saldo) else 0 end as Debe, 
	case when Sum(Saldo) <0 then -Sum(Saldo) else 0 end as Haber, 
	Sum(Saldo) as Saldo,
	FechaVencimiento, avg(Cambio) as Cambio,
	case when SUM(SaldoBase) >0 then SUM(SaldoBase) else 0 end as DebeBase, 
	case when SUM(SaldoBase) <0 then -SUM(SaldoBase) else 0 end  as HaberBase, 
	SUM(SaldoBase) as SaldoBase, 
	Direccion1, Direccion2, Localidad, CodigoPostal, 
	Provincia_Id, Pais_Id, Telefono, Contacto, 
	Email, comMovprov, ''
FROM
(
-- SI PIDIO HISTORICO TRAGO EL SALDO INICIAL
SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	Dateadd(dd,-1,@FechaDesde) Fecha, 
	comProveedores.RazonSocial, 
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion Provincia_id, genPaises.Descripcion Pais_Id, 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail, 0 comMovprov , 
		'SI' AS Segmento, ' ' as Comprobante, ' ' as Sucursal_Id, 
	CASE WHEN sum(genMovCuotas.Importe*comMovTipos.Signo)>0 then 
		sum(genMovCuotas.Importe*comMovTipos.Signo)  else 0 end as Debe,
	CASE WHEN sum(genMovCuotas.Importe*comMovTipos.Signo)<0  then -sum(genMovCuotas.Importe*comMovTipos.Signo)  else 0 end as Haber,
	SUM(genMovCuotas.Saldo  * comMovTipos.Signo) as Saldo, 
	@FechaDesde as FechaVencimiento,  SUM(genMovCuotas.Saldo  * comMovTipos.Signo*conAsientos.Cambio) /SUM(genMovCuotas.Saldo  * comMovTipos.Signo) as Cambio,
	CASE WHEN sum(genMovCuotas.Importe*comMovTipos.Signo*conAsientos.Cambio)>0 then 
		sum(genMovCuotas.Importe*comMovTipos.Signo*conAsientos.Cambio)  else 0 end as DebeBase,
	CASE WHEN sum(genMovCuotas.Importe*comMovTipos.Signo*conAsientos.Cambio)<0  then -sum(genMovCuotas.Importe*comMovTipos.Signo*conAsientos.Cambio)  else 0 end as HaberBase,
	SUM(genMovCuotas.Saldo  * comMovTipos.Signo*conAsientos.Cambio) as SaldoBase 
FROM comMovProv inner join comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genAsiSegmentos on 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN comMovTipos ON
	comMovTipos.TipoMov = comMovprov.TipoMov
	INNER JOIN genMovCuotas ON
	genMovCuotas.Asiento_Id = comMovprov.comMovprov
	inner join genSucursalesEmpr on conAsientos.Sucursal=genSucursalesEmpr.genSucursalesEmpr
	WHERE
		comMovProv.FacturaTesoreria = 0 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		@Pendiente = 0 and conAsientos.Fecha < @FechaDesde and 
		conAsientos.Empresa_Id = @Empresa
	GROUP BY comProveedores.Proveed_id, genMonedas.Moneda_Id,	
	comProveedores.RazonSocial, 
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion , genPaises.Descripcion , 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail /*,genSucursalesEmpr.Sucursal*/
	having SUM(genMovCuotas.Saldo  * comMovTipos.Signo) <> 0
union all
--- importaciones
SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	Dateadd(dd,-1,@FechaDesde) Fecha, 
	comProveedores.RazonSocial, 
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion Provincia_id, genPaises.Descripcion Pais_Id, 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail, 0 comMovprov , 
		'SI' AS Segmento, ' '  as Comprobante, ' ' as Sucursal_Id, 
	0 as Debe,
	(genCancMov.Importe_ap)  as Haber,
	(-genCancMov.Importe_ap) as Saldo,
	@FechaDesde,  
	 1 as Cambio,
	 0 as DebeBase,
	 genCancMov.Importe  as HaberBase,
	-genCancMov.Importe  as SaldoBase 
FROM genCancMov INNER JOIN comMovProv ON
	genCancMov.Asiento_Id = comMovprov.comMovProv 
	INNER JOIN comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genSucursalesEmpr on conAsientos.Sucursal=genSucursalesEmpr.genSucursalesEmpr
	WHERE
		comMovProv.FacturaTesoreria = 0 and 
		genCancMov.Importacion = 1 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		@Pendiente = 0 and conAsientos.Fecha < @FechaDesde and 
		conAsientos.Empresa_Id = @Empresa
	
UNION ALL
--- importaciones

SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	Dateadd(dd,-1,@FechaDesde) Fecha, 
	comProveedores.RazonSocial, 
	comProveedores.Direccion1,comProveedores.Direccion2,
	comProveedores.Localidad, comProveedores.CodigoPostal,
	genProvincias.Descripcion Provincia_id, genPaises.Descripcion Pais_Id, 
	comProveedores.Telefono, comProveedores.Contacto, 
	comProveedores.EMail, 0 comMovprov , 
		'SI' AS Segmento, ' ' as Comprobante, ' ' as Sucursal_Id, 
	(genCancMov.Importe) as Debe,
	0  as Haber,
	(genCancMov.Importe) as Saldo, 
	@FechaDesde,  
	1 as Cambio,
	genCancMov.Importe  as DebeBase,
	 0 as HaberBase,
	genCancMov.Importe  as SaldoBase 
FROM genCancMov INNER JOIN comMovProv ON
	genCancMov.Asiento_Id_Ap = comMovprov.comMovProv 
	INNER JOIN comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genSucursalesEmpr on conAsientos.Sucursal=genSucursalesEmpr.genSucursalesEmpr
	WHERE
		genCancMov.Importacion = 1 and 
		comMovProv.FacturaTesoreria = 0 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		@Pendiente = 0 and conAsientos.Fecha < @FechaDesde and 
		conAsientos.Empresa_Id = @Empresa
	
	) AS XXX
GROUP BY Proveed_id, Moneda_id, Fecha, RazonSocial, 
	Direccion1, Direccion2, Localidad, CodigoPostal, 
	Provincia_Id, Pais_Id, Telefono, Contacto, 
	Email, comMovprov, Segmento, Comprobante, Sucursal_Id, 
	FechaVencimiento
having SUM(Saldo) <> 0
ORDER BY 1,2,3, 5
GO


	

	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comEmbarqueEdtoCta.sql*/
-- Inf_comEmbarqueEdtoCta 'EMB',1,0,0,0,'0001',' ',' ',' ',1
DROP PROCEDURE Inf_comEmbarqueEdtoCta
GO

CREATE PROCEDURE Inf_comEmbarqueEdtoCta
(
	@Segmento_Id VarChar(10), 
	@Segmento1N int,
	@Segmento2N int,
	@Segmento3N int,
	@Segmento4N int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20),
	@Empresa_Id int 
)
AS

SELECT comMovProv.comMovProv, 
	dbo.Segmento(	
	genAsiSegmentos.Segmento_Id,
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, 
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoStr,
	comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	comMovProv.Fecha_CCP, genMonedas.Moneda_Id, conAsientos.Cambio,
	CASE WHEN commovtipos.Signo = 1 THEN 	genMovCuotas.Importe ELSE 0 END AS Debe,
	CASE WHEN commovtipos.Signo = -1 THEN 	genMovCuotas.Importe ELSE 0 END AS Haber,
	genMovCuotas.Saldo*commovtipos.Signo as Saldo, 
	genMovCuotas.Saldo*conAsientos.Cambio as SaldoBase, 
	genMovCuotas.CuotaNro, genMovCuotas.FechaVencimiento
from comMovProv inner join genAsiSegmentos ON
	comMovProv.comMovProv = genAsiSegmentos.Asiento_Id
	INNER JOIN genMovCuotas ON
	genMovCuotas.Asiento_Id = comMovProv.comMovProv
	INNER JOIN comProveedores ON
	comProveedores.genEntidades = comMovProv.Proveed_Id
	INNER JOIN conAsientos ON 
	conAsientos.conAsientos = comMovProv.comMovProv
	INNER JOIN genMonedas ON 
	genMonedas.genMonedas  =  conAsientos.Moneda_Id
	INNER JOIN comMovProvEmb ON
	comMovProvEmb.comMovProv = comMovProv.comMovProv
	INNER JOIN commovtipos ON
	commovtipos.TipoMov = comMovprov.Tipomov
	INNER JOIN genAsiSegmentos Embarque ON Embarque.Asiento_Id = comMovProvEmb.comEmbarques
	INNER JOIN genSegmentos ON  genSegmentos.genSegmentos = Embarque.Segmento_Id
	Where
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	genSegmentos.Segmento_Id = @Segmento_Id and 
	Embarque.Segmento1N= @Segmento1N and 
	Embarque.Segmento2N= @Segmento2N and 
	Embarque.Segmento3N= @Segmento3N and 
	Embarque.Segmento4N= @Segmento4N and 
	Embarque.Segmento1C= @Segmento1C and 
	Embarque.Segmento2C= @Segmento2C and 
	Embarque.Segmento3C= @Segmento3C and 
	Embarque.Segmento4C= @Segmento4C and 
	Embarque.Empresa_Id = @Empresa_Id
ORDER BY 5,1,2
go


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ComEmbarques.sql*/
--EXEC Inf_comEmbarques 1, 'EMB', 1, 0, 0, 0, '0004', '', '', ''
--EXEC Inf_comEmbarquesCuerpo 1, 'EMB', 1, 0, 0, 0, '0004', '', '', ''
--EXEC Inf_comEmbarquesGastos 1, 'EMB', 1, 0, 0, 0, '0004', '', '', ''  
--EXEC Inf_comEmbarquesSegmento 1, 'EMB', 1, 0, 0, 0, '0004', '', '', ''  

DROP PROCEDURE Inf_comEmbarques
GO
CREATE PROCEDURE Inf_comEmbarques
(
@Empresa_Id int,
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20))
AS
SET NOCOUNT ON 

DECLARE @lIdentity int = (select Asiento_Id From genAsiSegmentos
	Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C)

EXEC comEmbarquesDatosIdentity @lIdentity 

RETURN @@Error
GO


DROP PROCEDURE Inf_comEmbarquesCuerpo
GO
CREATE PROCEDURE Inf_comEmbarquesCuerpo
(
@Empresa_Id int,
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20))
AS
SET NOCOUNT ON 

DECLARE @lIdentity int = (select Asiento_Id From genAsiSegmentos
	Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C)

EXEC comEmbCuerpoDatos @lIdentity 

RETURN @@Error
GO

DROP PROCEDURE Inf_comEmbarquesGastos
GO
CREATE PROCEDURE Inf_comEmbarquesGastos
(
@Empresa_Id int,
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20))
AS
SET NOCOUNT ON 

DECLARE @lIdentity int = (select Asiento_Id From genAsiSegmentos
	Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C)

EXEC comEmbGastosDatos @lIdentity 

RETURN @@Error
GO


DROP PROCEDURE Inf_comEmbarquesSegmento
GO
CREATE PROCEDURE Inf_comEmbarquesSegmento
(  
@Empresa_Id int,
@Segmento_Id VarChar(10),   
@Segmento1N int,  
@Segmento2N int,  
@Segmento3N int,  
@Segmento4N int,  
@Segmento1C VarChar(20),  
@Segmento2C VarChar(20),  
@Segmento3C VarChar(20),  
@Segmento4C VarChar(20))  
AS  
SET NOCOUNT ON   
  
SELECT dbo.Segmento(dbo.FuncFKgenSegmentos(@Segmento_id), @Segmento1C,@Segmento2C,@Segmento3C,@Segmento4C,
	@Segmento1N,@Segmento2N, @Segmento3N, @Segmento4N) AS SegmentoStrEmb 
 
RETURN @@Error




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comEmbCierres.sql*/
-- Inf_comEmbCierres '20210401','20210430',1
-- Inf_comEmbCierres '20210512','20210512',1
DROP PROCEDURE Inf_comEmbCierres
GO

CREATE PROCEDURE Inf_comEmbCierres(
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@Empresa_Id Int
)

AS

SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N) AS Embarque, 
	genAsiSegmentosR.Asiento_id,
	dbo.Segmento(genAsiSegmentosR.Segmento_Id, genAsiSegmentosR.Segmento1C,
	genAsiSegmentosR.Segmento2C, genAsiSegmentosR.Segmento3C, genAsiSegmentosR.Segmento4C,
	genAsiSegmentosR.Segmento1N, genAsiSegmentosR.Segmento2N, genAsiSegmentosR.Segmento3N,
	genAsiSegmentosR.Segmento4N) AS Revaluo, 
	conAsientos.Fecha, genMonedas.Moneda_Id,comEmbAsiCierre.Cambio,
	ISNULL((select SUM(Importe*(-2*Tipomov+3))  from conMovCont where
		conMovCont.conAsientos =conAsientos.conAsientos and 
		conMovCont.TipoMov = 1 AND
		conMovCont.Clase IN( 'RVCNT','RVOTR')),0) as PerdidaCamb,
	ISNULL((select SUM(Importe*(-2*Tipomov+3))  from conMovCont where
		conMovCont.conAsientos =conAsientos.conAsientos and 
		conMovCont.TipoMov = 2 AND
		conMovCont.Clase IN( 'RVCNT','RVOTR')),0) as UtilidadCamb,
		ISNULL((select SUM(Importe*(-2*Tipomov+3))  from conMovCont, conCuentas 
		where
		conMovCont.conAsientos =conAsientos.conAsientos and 
		conCuentas.conCuentas = conMovCont.Cuenta_Id and 
		conCuentas.Cuenta_Id NOT LIKE '1%' AND 
		conMovCont.Clase ='RV'),0) as COSTO,
		ISNULL((select SUM(Importe*(-2*Tipomov+3))  from conMovCont, conCuentas 
		where
		conMovCont.conAsientos =conAsientos.conAsientos and 
		conCuentas.conCuentas = conMovCont.Cuenta_Id and 
		conCuentas.Cuenta_Id LIKE '1%' AND 
		conMovCont.Clase ='RV'),0) as INVENTARIO

from comEmbAsiCierre 
INNER JOIN genAsiSegmentos ON  genAsiSegmentos.Asiento_Id = comEmbAsiCierre.comEmbarques
INNER JOIN genAsiSegmentos genAsiSegmentosR ON  genAsiSegmentosR.Asiento_Id = comEmbAsiCierre.stkMoviCabe
INNER JOIN conAsientos ON conAsientos.conAsientos = genAsiSegmentosR.Asiento_Id
INNER JOIN conAsientos  conAsientosE on  conAsientosE.conAsientos = comEmbAsiCierre.comEmbarques
inner join genMonedas ON  genMonedas.genMonedas = conAsientosE.Moneda_Id

WHERE
	conAsientos.Empresa_Id = @Empresa_Id AND 
	conAsientos.Fecha Between @FechaDesde and @FechaHasta
	ORDER BY 1,2
GO


	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ComFactARecibirImp.sql*/
DROP PROCEDURE Inf_ComFactARecibirImp
GO
CREATE PROCEDURE Inf_ComFactARecibirImp @FechaHasta DateTime, @Empresa int
AS

SELECT EmbarqueSeg, comEmbarques, Fecha, FechaEmbarque, FechaArribo,
	Embarque, Recepcion, FacturasMerc , 
	FacturasGastos, Cierres, 
	Embarque + Recepcion + FacturasMerc +FacturasGastos + Cierres as Saldo
from (
SELECT  dbo.Segmento(genAsiSegmentos.Segmento_id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N) as EmbarqueSeg,
	comEmbarques.comEmbarques , 
	conAsientos.Fecha, comEmbarques.FechaEmbarque, comEmbarques.FechaArribo,
	sum(case when conAsientos.Fecha <= @FechaHasta then
	conMovCont.importe*(-2*conMovCont.Tipomov+3) else 0 end ) Embarque, 
	isnull((select sum(conMovCont.importe*(-2*conMovCont.Tipomov+3)) from
		conMovCont INNER JOIN conAsientos ON 
		 conMovCont.conAsientos = conAsientos.conAsientos
		 INNER JOIN stkMoviEmbarque on 
		 stkMoviEmbarque.stkMoviCabe = conAsientos.conAsientos and 
		 stkMoviEmbarque.comEmbarques = comEmbarques.comEmbarques
		 Where
		 		clase = 'OEFAR' and 
				conAsientos.Empresa_Id = @Empresa and 
				conAsientos.Fecha <= @FechaHasta and
				conAsientos.Anulado = 0),0) as Recepcion,

	isnull((select sum(conMovCont.importe*(-2*conMovCont.Tipomov+3)) from
		conMovCont INNER JOIN conAsientos ON 
		 conMovCont.conAsientos = conAsientos.conAsientos
		 INNER JOIN comMovProvEmb on 
		 comMovProvEmb.comMovProv = conAsientos.conAsientos and 
		 comMovProvEmb.comEmbarques = comEmbarques.comEmbarques 
		 Where
			not exists(select 1 from  comEmbGastoMovProv Where
			 comEmbGastoMovProv.comMovProv = conMovCont.conAsientos and 
			 comEmbGastoMovProv.comRenglon = conMovCont.Renglon) and
		 		clase = 'OEFAR' and 
				conAsientos.Empresa_Id = @Empresa and 
				conAsientos.Fecha <= @FechaHasta and
				conAsientos.Anulado = 0),0) as FacturasMerc,

	isnull((select sum(conMovCont.importe*(-2*conMovCont.Tipomov+3)) from
		conMovCont INNER JOIN conAsientos ON 
		 conMovCont.conAsientos = conAsientos.conAsientos
		 INNER JOIN comEmbGastoMovProv on 
		 comEmbGastoMovProv.comMovProv = conAsientos.conAsientos and 
		 comEmbGastoMovProv.comEmbarques = comEmbarques.comEmbarques and 
		 comEmbGastoMovProv.comRenglon = conMovCont.Renglon
			Where
		 		--clase IN('FACAR','OEFAR') and 
				conAsientos.Empresa_Id = @Empresa and 
				conAsientos.Fecha <= @FechaHasta and
				conAsientos.Anulado = 0),0) as FacturasGastos, 
	isnull((select sum(conMovCont.importe*(-2*conMovCont.Tipomov+3)) from
		conMovCont INNER JOIN conAsientos ON 
		 conMovCont.conAsientos = conAsientos.conAsientos
		 INNER JOIN comEmbAsiCierre on 
		 comEmbAsiCierre.stkMoviCabe = conAsientos.conAsientos and 
		 comEmbAsiCierre.comEmbarques = comEmbarques.comEmbarques
		 Where
		 		clase = 'OEFAR' and 
				conAsientos.Empresa_Id = @Empresa and 
				conAsientos.Fecha <= @FechaHasta and
				conAsientos.Anulado = 0),0) as Cierres
	from conMovCont inner join comEmbarques ON
		conMovCont.conAsientos = comEmbarques.comEmbarques
		INNER JOIN conAsientos ON
		conAsientos.conAsientos = comEmbarques.comEmbarques
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos  
	Where
		comEmbarques.Estado_Id != 'Q' AND 
		clase = 'OEFAR' and 
		conAsientos.Empresa_Id = @Empresa and 
		conAsientos.Anulado = 0
group by comEmbarques.comEmbarques, genAsiSegmentos.Empresa_Id, 
	conAsientos.Fecha, genAsiSegmentos.Segmento_id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N, comEmbarques.FechaEmbarque, comEmbarques.FechaArribo ) as XXX
Where
Embarque + Recepcion + FacturasMerc +FacturasGastos + Cierres <> 0

ORDER BY 1
GO











Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ComFactARecibirNac.sql*/
-- exec Inf_ComFactARecibirNac '20200630',1

DROP PROCEDURE Inf_ComFactARecibirNac
GO
CREATE PROCEDURE Inf_ComFactARecibirNac @FechaHasta DateTime, @Empresa int
AS

SELECT 	dbo.Segmento(comOCSegmentos.Segmento_Id, comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C
	, comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C, comOCSegmentos.Segmento1N
	, comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) AS Segmento,
	comOrdenComp.comOrdenComp, comOCCuerpo.Renglon_OC,  comTipoPermi.TipoPermi_Id,
	comOrdenComp.Fecha, comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(stkProductos.Producto_Id,' ') as Producto_Id, 
	ISNULL(stkProductos.Descripcion, comOCMemo.Detalle) as Descripcion, 
	comOCCuerpo.Cantidad as CantidadOriginal, 
	ISNULL((SELECT sum(stkMoviCuerpo.Cantidad*stkMoviCabe.Signo) 
				from  stkMoviOC INNER JOIN stkMoviCuerpo ON
				stkMoviOC.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND 
				stkMoviOC.Renglon = stkMoviCuerpo.Renglon and
				stkMoviOC.comOrdenComp = comOcCuerpo.comOrdenComp and
				stkMoviOC.Renglon_OC = comOcCuerpo.Renglon_OC
				INNER JOIN stkMoviCabe ON 
				stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
				INNER JOIN conMovcont ON
				conMovcont.conAsientos = stkMoviCuerpo.stkMoviCabe and
				conMovcont.Renglon = CASE WHEN stkMoviCabe.Signo=1 
								THEN stkMoviCuerpo.conRenglonDebe ELSE stkMoviCuerpo.conRenglonHaber END					
				INNER JOIN conAsientos ON
				conAsientos.conAsientos = conMovcont.conAsientos

				WHERE
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado  = 1 and 
					conAsientos.Fecha <= @FechaHasta and 
					conAsientos.Empresa_Id = @Empresa
						),0) +
	ISNULL((SELECT SUM(comOcReceCuerpo.Cantidad) 
		from comOcReceCuerpo INNER JOIN conAsientos ON 
			conAsientos.conAsientos = comOcReceCuerpo.comOcRecepcion 
			WHERE
				conAsientos.Anulado = 0 and 
				conAsientos.Fecha <= @FechaHasta and 
				comOcReceCuerpo.comOrdenComp = comOCCuerpo.comOrdenComp and 
				comOcReceCuerpo.Renglon_OC = comOCCuerpo.Renglon_OC),0) as CantRecibido,
	ISNULL((SELECT sum(conMovcont.Importe*stkMoviCabe.Signo) 
				from  stkMoviOC INNER JOIN stkMoviCuerpo ON
				stkMoviOC.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND 
				stkMoviOC.Renglon = stkMoviCuerpo.Renglon and
				stkMoviOC.comOrdenComp = comOcCuerpo.comOrdenComp and
				stkMoviOC.Renglon_OC = comOcCuerpo.Renglon_OC
				INNER JOIN stkMoviCabe ON 
				stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
				INNER JOIN conMovcont ON
				conMovcont.conAsientos = stkMoviCuerpo.stkMoviCabe and
				conMovcont.Renglon = CASE WHEN stkMoviCabe.Signo=1 
						THEN stkMoviCuerpo.conRenglonDebe ELSE stkMoviCuerpo.conRenglonHaber END
				INNER JOIN conAsientos ON
				conAsientos.conAsientos = conMovcont.conAsientos
				WHERE
					conAsientos.Anulado = 0 and 
					conAsientos.Fecha <= @FechaHasta and 
					conAsientos.Empresa_Id = @Empresa),0) +
		ISNULL((SELECT SUM(conMovCont.Importe *(-2*conMovcont.Tipomov+3)) 
			from comOcReceCuerpo INNER JOIN conAsientos ON 
			conAsientos.conAsientos = comOcReceCuerpo.comOcRecepcion 
			INNER JOIN conMovCont ON
			conMovCont.conAsientos =comOcReceCuerpo.comOcRecepcion  AND 
			conMovCont.Renglon =comOcReceCuerpo.conRenglon
			WHERE
				conAsientos.Anulado = 0 and 
				conAsientos.Fecha <= @FechaHasta and 
				comOcReceCuerpo.comOrdenComp = comOCCuerpo.comOrdenComp and 
				comOcReceCuerpo.Renglon_OC = comOCCuerpo.Renglon_OC),0) as ValRecibido, 
					
			ISNULL((SELECT sum(commovpoc.Cantidad*-comMovTipos.Signo) 
				from  commovpoc INNER JOIN commovprov ON
					commovpoc.comMovProv = commovprov.commovprov and 
					commovpoc.comOrdenComp = comOCCuerpo.comOrdenComp and 
					commovpoc.Renglon_OC = comOCCuerpo.Renglon_OC
					INNER JOIN conAsientos ON
					conAsientos.conAsientos = comMovprov.comMovprov
					INNER JOIN comMovTipos ON  comMovTipos.TipoMov = commovprov.TipoMov
				WHERE
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado =1 and 
					conAsientos.Fecha <= @FechaHasta and 
					conAsientos.Empresa_Id = @Empresa),0) 	as CantidadFacturada, 
					
				ROUND(ISNULL((SELECT sum(commovpoc.Cantidad*-comMovTipos.Signo* commovpoc.Cambio ) 
				from  commovpoc INNER JOIN commovprov ON
					commovpoc.comMovProv = commovprov.commovprov and 
					commovpoc.comOrdenComp = comOCCuerpo.comOrdenComp  AND
					commovpoc.Renglon_OC = comOCCuerpo.Renglon_OC
					INNER JOIN conAsientos ON
					conAsientos.conAsientos = comMovprov.comMovprov
					INNER JOIN comMovTipos ON  comMovTipos.TipoMov = commovprov.TipoMov
						
				WHERE
					conAsientos.Anulado = 0 and 
					conAsientos.Fecha <= @FechaHasta and 
					conAsientos.Empresa_Id = @Empresa),0)* comOCCuerpo.Precio,2)   AS MontoFacturado
FROM comOrdenComp INNER JOIN comOcSegmentos ON
comOcSegmentos.comOrdenComp = comOrdenComp.comOrdenComp
INNER JOIN comProveedores ON
comProveedores.genEntidades = comOrdenComp.Proveed_id 
INNER JOIN comOCCuerpo ON
comOrdenComp.comOrdenComp = comOCCuerpo.comOrdenComp
LEFT OUTER JOIN (comOcArticulo INNER JOIN stkProductos ON
comOcArticulo.Producto_Id = stkProductos.stkProductos) ON
comOcArticulo.comOrdenComp = comOCCuerpo.comOrdenComp and
comOcArticulo.Renglon_OC = comOCCuerpo.Renglon_OC
LEFT OUTER JOIN comOCMemo ON
comOCMemo.comOrdenComp = comOCCuerpo.comOrdenComp and
comOCMemo.Renglon_OC = comOCCuerpo.Renglon_OC
INNER JOIN comTipoPermi ON comTipoPermi.comTipoPermi = comOrdenComp.TipoPermi_Id
Where
	comOrdenComp.Estado_Id != 'R' AND 
	comOCSegmentos.Empresa_Id = @Empresa and 
	not exists(select 1 from comEmbCuerpo inner join  conAsientos as Embarque on 
	comEmbCuerpo.comEmbarques = Embarque.conAsientos and 
	comEmbCuerpo.comOrdenComp =  comOrdenComp.comOrdenComp and 
	Embarque.Anulado = 0 and Embarque.Posteado = 1)  
	
	AND	ISNULL((SELECT sum(stkMoviCuerpo.Cantidad*stkMoviCabe.Signo) 
				from  stkMoviOC INNER JOIN stkMoviCuerpo ON
				stkMoviOC.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND 
				stkMoviOC.Renglon = stkMoviCuerpo.Renglon and
				stkMoviOC.comOrdenComp = comOcCuerpo.comOrdenComp and
				stkMoviOC.Renglon_OC = comOcCuerpo.Renglon_OC
				INNER JOIN stkMoviCabe ON 
				stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
				INNER JOIN conMovcont ON
				conMovcont.conAsientos = stkMoviCuerpo.stkMoviCabe and
				conMovcont.Renglon = CASE WHEN stkMoviCabe.Signo=1 
								THEN stkMoviCuerpo.conRenglonDebe ELSE stkMoviCuerpo.conRenglonHaber END					
				INNER JOIN conAsientos ON
				conAsientos.conAsientos = conMovcont.conAsientos

				WHERE
					conAsientos.Anulado = 0 and 
					conAsientos.Fecha <= @FechaHasta and 
					conAsientos.Empresa_Id = @Empresa
						),0) +
	ISNULL((SELECT SUM(comOcReceCuerpo.Cantidad) 
		from comOcReceCuerpo INNER JOIN conAsientos ON 
			conAsientos.conAsientos = comOcReceCuerpo.comOcRecepcion 
			WHERE
				conAsientos.Anulado = 0 and 
				conAsientos.Fecha <= @FechaHasta and 
				comOcReceCuerpo.comOrdenComp = comOCCuerpo.comOrdenComp and 
				comOcReceCuerpo.Renglon_OC = comOCCuerpo.Renglon_OC),0) <> 
				 	ISNULL((SELECT sum(commovpoc.Cantidad*-comMovTipos.Signo) 
				from  commovpoc INNER JOIN commovprov ON
					commovpoc.comMovProv = commovprov.commovprov and 
					commovpoc.comOrdenComp = comOCCuerpo.comOrdenComp and 
					commovpoc.Renglon_OC = comOCCuerpo.Renglon_OC
					INNER JOIN conAsientos ON
					conAsientos.conAsientos = comMovprov.comMovprov
					INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovprov.Tipomov
				WHERE
					conAsientos.Anulado = 0 and 
					conAsientos.Fecha <= @FechaHasta and 
					conAsientos.Empresa_Id = @Empresa),0)  
						
UNION ALL -- REMISIONES

SELECT 	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	conAsientos.conAsientos, stkMoviCuerpo.Renglon, 'REM' AS TipoPermi_Id,
	conAsientos.Fecha, comProveedores.Proveed_id, comProveedores.RazonSocial, 
	stkProductos.Producto_Id as Producto_Id, stkProductos.Descripcion ,
	stkMoviCuerpo.CantidadForm as CantidadOriginal, 
	stkRemiPendFactPro.CantidadPendiente + 
		ISNULL((Select SUM(comRemiPendFact.CantidadFacturado)
					From comRemiPendFact , conAsientos AS Fact
					WHERE
						comRemiPendFact.stkMoviCabe = stkRemiPendFactPro.stkMoviCabe AND 
						comRemiPendFact.Renglon = stkRemiPendFactPro.Renglon and 
						Fact.conAsientos = comRemiPendFact.comMovProv and 
						Fact.Anulado = 0 and
						Fact.Posteado = 1 and 
						Fact.Fecha > @FechaHasta),0) as CantRecibido, 
						(stkRemiPendFactPro.CantidadPendiente+
				ISNULL((Select SUM(comRemiPendFact.CantidadFacturado )
					From comRemiPendFact , conAsientos AS Fact
					WHERE
						comRemiPendFact.stkMoviCabe = stkRemiPendFactPro.stkMoviCabe AND 
						comRemiPendFact.Renglon = stkRemiPendFactPro.Renglon and 
						Fact.conAsientos = comRemiPendFact.comMovProv and 
						Fact.Anulado = 0 and
						Fact.Posteado = 1 and 
						Fact.Fecha > @FechaHasta),0)) * stkMoviCuerpo.CostoUnitario  as ValRecibido, 
			ISNULL((SELECT sum(comRemiPendFact.CantidadFacturado) 
				from  comRemiPendFact INNER JOIN  conAsientos FACT ON
					FACT.conAsientos = comRemiPendFact.comMovprov and 
					comRemiPendFact.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
					comRemiPendFact.Renglon =stkMoviCuerpo.Renglon
				WHERE
					FACT.Anulado = 0 and 
					FACT.Fecha <= @FechaHasta and 
					FACT.Empresa_Id = @Empresa),0)  as CantidadFacturada, 
				ROUND(ISNULL((SELECT sum(comRemiPendFact.CantidadFacturado) 
				from  comRemiPendFact INNER JOIN  conAsientos FACT ON
					FACT.conAsientos = comRemiPendFact.comMovprov and 
					comRemiPendFact.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
					comRemiPendFact.Renglon =stkMoviCuerpo.Renglon
				WHERE
					FACT.Anulado = 0 and 
					FACT.Fecha <= @FechaHasta and 
					FACT.Empresa_Id = @Empresa),0)* stkMoviCuerpo.CostoUnitario,2)   AS MontoFacturado
From stkRemiPendFactPro INNER JOIN conAsientos ON
		stkRemiPendFactPro.stkMoviCabe = conAsientos.conAsientos
		INNER JOIN stkMoviProv ON 
		stkMoviProv.stkMoviCabe = stkRemiPendFactPro.stkMoviCabe
		inner join stkMoviCuerpo ON 
		stkMoviCuerpo.stkMoviCabe = stkRemiPendFactPro.stkMoviCabe AND 
		stkMoviCuerpo.Renglon  =stkRemiPendFactPro.Renglon
		INNER JOIN stkProductos ON  stkProductos.stkProductos = stkMoviCuerpo.Producto_Id 
		INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos 
		inner join comProveedores ON  comProveedores.genEntidades = stkMoviProv.Proveed_Id
WHERE
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	conAsientos.Fecha <= @FechaHasta and 
	conAsientos.Empresa_Id = @Empresa and 
		stkRemiPendFactPro.CantidadPendiente + 
		ISNULL((Select sum(comRemiPendFact.CantidadFacturado) 
					From comRemiPendFact , conAsientos AS Fact
					WHERE
						comRemiPendFact.stkMoviCabe = stkRemiPendFactPro.stkMoviCabe AND 
						comRemiPendFact.Renglon = stkRemiPendFactPro.Renglon and 
						Fact.conAsientos = comRemiPendFact.comMovProv and 
						Fact.Anulado = 0 and
						Fact.Posteado = 1 and 
						Fact.Fecha > @FechaHasta),0) <> 0

ORDER BY 2,3
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comFactProvMenores.sql*/
DROP PROCEDURE inf_comFactProvMenores
GO

CREATE PROCEDURE inf_comFactProvMenores 
(
@Empresa int,
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@ProveedDesde VarChar(15),
@ProveedHasta VarChar(15))
AS
SELECT conAsientos.Fecha, comProveedores.Proveed_Id, 
comProveedores.RazonSocial,
dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,
genAsiSegmentos.Segmento4C,genAsiSegmentos.Segmento1N,
genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
genAsiSegmentos.Segmento3N) Comp, comMovProv.Importe,
dbo.Segmento(genAsiSeg.Segmento_Id,genAsiSeg.Segmento1C,
genAsiSeg.Segmento2C,genAsiSeg.Segmento3C,
genAsiSeg.Segmento4C,genAsiSeg.Segmento1N,
genAsiSeg.Segmento2N,genAsiSeg.Segmento3N,
genAsiSeg.Segmento3N) OP
FROM comMovProv 
INNER JOIN comProveedores ON comMovProv.Proveed_Id = comProveedores.genEntidades
INNER JOIN tesRengMoviComMovProv ON comMovProv.comMovProv = tesRengMoviComMovProv.comMovProv
INNER JOIN conAsientos ON comMovProv.comMovProv = conAsientos.conAsientos
INNER JOIN genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id AND conAsientos.Empresa_Id = genAsiSegmentos.Empresa_Id
INNER JOIN tesMovimientos ON tesRengMoviComMovProv.tesMovimientos = tesMovimientos.tesMovimientos
INNER JOIN conAsientos conAsi ON tesMovimientos.tesMovimientos = conAsi.conAsientos
INNER JOIN genAsiSegmentos genAsiSeg ON conAsi.conAsientos = genAsiSeg.Asiento_Id AND conAsi.Empresa_Id = genAsiSeg.Empresa_Id
WHERE 
conAsientos.Anulado = 0 AND 
conAsientos.Empresa_Id = @Empresa AND
conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta  AND
comProveedores.Proveed_Id BETWEEN @ProveedDesde AND @ProveedHasta
Order by conAsientos.Fecha, comProveedores.Proveed_Id
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comImpPagados.sql*/
-- Inf_comImpPagados 1, '20200101','20200630', ' ','zzzz',' ','ZZZZ'

DROP PROCEDURE Inf_comImpPagados
GO
CREATE PROCEDURE Inf_comImpPagados
(
	@Empresa_id int, 
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ImpuestoDesde VarChar(5),
	@ImpuestoHasta VarChar(5), 
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15)
)
AS

SELECT comImpuestos.Impuesto_Id, comImpuestos.Descripcion AS DescripcionImpuesto,
	comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	genEntidades.Cuit AS Rfc, 
	conAsientos.Fecha, asiPago.Fecha as FechaCobra,
	dbo.Segmento(genAsiSegmentosC.Segmento_Id, genAsiSegmentosC.Segmento1C, 
	genAsiSegmentosC.Segmento2C, genAsiSegmentosC.Segmento3C, genAsiSegmentosC.Segmento4C, 
	genAsiSegmentosC.Segmento1N, genAsiSegmentosC.Segmento2N, genAsiSegmentosC.Segmento3N, 
	genAsiSegmentosC.Segmento4N) as Pago,
	asiFactura.Fecha AS FechaFactura,
	dbo.Segmento(genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C, 
	genAsiSegmentosF.Segmento2C, genAsiSegmentosF.Segmento3C, genAsiSegmentosF.Segmento4C, 
	genAsiSegmentosF.Segmento1N, genAsiSegmentosF.Segmento2N, genAsiSegmentosF.Segmento3N, 
	genAsiSegmentosF.Segmento4N) as Factura, 
	tesIdentifica.Cartera_Id, 
	SUM(comMovImpAcredita.BaseImponible) AS BaseImponible , 
	SUM(comMovImpAcredita.Monto) AS Monto , 
	SUM(comMovImpAcredita.DifCambio) AS DifCambio, 
	SUM(comMovImpAcredita.TotalPago) AS TotalPago, 
		comMovProv.ClaveFiscal
	
FROM 
	comMovImpAcredita inner join comMovprov ON 
	comMovImpAcredita.comMovProv = comMovprov.comMovprov
	INNER JOIN comProveedores ON
	comProveedores.genEntidades = comMovProv.Proveed_Id
	INNER JOIN conAsientos asiFactura ON
	asiFactura.conAsientos = comMovProv.comMovProv
	inner join conAsientos ON
	conAsientos.conAsientos = comMovImpAcredita.Asiento_Id
	inner join tesMovimientos ON
	tesMovimientos.tesMovimientos = comMovImpAcredita.tesMovimientos
	inner join conAsientos AS asiPago ON
	asiPago.conAsientos = tesMovimientos.tesMovimientos
	inner join genAsiSegmentos AS genAsiSegmentosf ON
	genAsiSegmentosf.Asiento_Id = comMovProv.comMovProv
	INNER JOIN genAsiSegmentos as genAsiSegmentosC ON
	genAsiSegmentosC.Asiento_Id = tesMovimientos.tesMovimientos
	INNER JOIN comImpuestos ON
	comImpuestos.comImpuestos = comMovImpAcredita.Impuesto_Id
	INNER JOIN tesIdentifica ON
	tesIdentifica.tesIdentifica = comMovImpAcredita.Cartera_Id
	INNER JOIN genEntidades ON
	genEntidades.genEntidades = comProveedores.genEntidades 

WHERE
	conAsientos.Anulado = 0 and 
	asiFactura.Anulado = 0 and 
	asiPago.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa_id And 
	comProveedores.Proveed_Id between @ProveedDesde And @ProveedHasta and 
	comImpuestos.Impuesto_Id between @ImpuestoDesde And @ImpuestoHasta AND 
	conAsientos.Fecha between @FechaDesde And @FechaHasta
group by comImpuestos.Impuesto_Id, comImpuestos.Descripcion ,
	comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	genEntidades.Cuit , 
	conAsientos.Fecha, asiPago.Fecha ,
	genAsiSegmentosC.Segmento_Id, genAsiSegmentosC.Segmento1C, 
	genAsiSegmentosC.Segmento2C, genAsiSegmentosC.Segmento3C, genAsiSegmentosC.Segmento4C, 
	genAsiSegmentosC.Segmento1N, genAsiSegmentosC.Segmento2N, genAsiSegmentosC.Segmento3N, 
	genAsiSegmentosC.Segmento4N,
	asiFactura.Fecha ,
	genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C, 
	genAsiSegmentosF.Segmento2C, genAsiSegmentosF.Segmento3C, genAsiSegmentosF.Segmento4C, 
	genAsiSegmentosF.Segmento1N, genAsiSegmentosF.Segmento2N, genAsiSegmentosF.Segmento3N, 
	genAsiSegmentosF.Segmento4N, 
	tesIdentifica.Cartera_Id, comMovProv.ClaveFiscal
UNION ALL
SELECT comImpuestos.Impuesto_Id, comImpuestos.Descripcion AS DescripcionImpuesto,
	comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	genEntidades.Cuit AS Rfc, 
	conAsientos.Fecha, asiPago.Fecha as FechaCobra,
	dbo.Segmento(genAsiSegmentosC.Segmento_Id, genAsiSegmentosC.Segmento1C, 
	genAsiSegmentosC.Segmento2C, genAsiSegmentosC.Segmento3C, genAsiSegmentosC.Segmento4C, 
	genAsiSegmentosC.Segmento1N, genAsiSegmentosC.Segmento2N, genAsiSegmentosC.Segmento3N, 
	genAsiSegmentosC.Segmento4N) as Pago,
	asiFactura.Fecha AS FechaFactura,
	dbo.Segmento(genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C, 
	genAsiSegmentosF.Segmento2C, genAsiSegmentosF.Segmento3C, genAsiSegmentosF.Segmento4C, 
	genAsiSegmentosF.Segmento1N, genAsiSegmentosF.Segmento2N, genAsiSegmentosF.Segmento3N, 
	genAsiSegmentosF.Segmento4N) as Factura, 
	' 'Cartera_Id, 
	SUM(comMovImpuestos.Base_Imponible) Base_Imponible, 
	SUM(comMovImpuestos.Importe_Impuesto), 0, SUM(comMovprov.Importe),
	comMovProv.ClaveFiscal
	
FROM 
	comMovprov 	
	INNER JOIN comProveedores ON
	comProveedores.genEntidades = comMovProv.Proveed_Id
	INNER JOIN conAsientos asiFactura ON
	asiFactura.conAsientos = comMovProv.comMovProv
	INNER JOIN tesRengMovicomMovProv ON
	tesRengMovicomMovProv.comMovProv = comMovProv.comMovProv
	inner join conAsientos ON
	conAsientos.conAsientos = tesRengMovicomMovProv.tesMovimientos
	inner join tesMovimientos ON
	tesMovimientos.tesMovimientos = tesRengMovicomMovProv.tesMovimientos
	inner join conAsientos AS asiPago ON
	asiPago.conAsientos = tesMovimientos.tesMovimientos
	inner join genAsiSegmentos AS genAsiSegmentosf ON
	genAsiSegmentosf.Asiento_Id = comMovProv.comMovProv
	INNER JOIN genAsiSegmentos as genAsiSegmentosC ON
	genAsiSegmentosC.Asiento_Id = tesMovimientos.tesMovimientos
	INNER JOIN comMovImpuestos ON 
	comMovImpuestos.comMovProv =  comMovProv.comMovProv
	INNER JOIN comImpuestos ON
	comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
	INNER JOIN genEntidades ON
	genEntidades.genEntidades = comProveedores.genEntidades 
WHERE
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	asiFactura.Anulado = 0 and 
	asiFactura.Posteado = 1 and 
	asiPago.Anulado = 0 and 
	asiPago.Posteado = 1 and 
	comImpuestos.PorAcreditacion = 1 and 
	conAsientos.Empresa_Id = @Empresa_id And 
	comProveedores.Proveed_Id between @ProveedDesde And @ProveedHasta and 
	comImpuestos.Impuesto_Id between @ImpuestoDesde And @ImpuestoHasta AND 
	conAsientos.Fecha between @FechaDesde And @FechaHasta
group by comImpuestos.Impuesto_Id, comImpuestos.Descripcion ,
	comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	genEntidades.Cuit , 
	conAsientos.Fecha, asiPago.Fecha ,
	genAsiSegmentosC.Segmento_Id, genAsiSegmentosC.Segmento1C, 
	genAsiSegmentosC.Segmento2C, genAsiSegmentosC.Segmento3C, genAsiSegmentosC.Segmento4C, 
	genAsiSegmentosC.Segmento1N, genAsiSegmentosC.Segmento2N, genAsiSegmentosC.Segmento3N, 
	genAsiSegmentosC.Segmento4N,
	asiFactura.Fecha ,
	genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C, 
	genAsiSegmentosF.Segmento2C, genAsiSegmentosF.Segmento3C, genAsiSegmentosF.Segmento4C, 
	genAsiSegmentosF.Segmento1N, genAsiSegmentosF.Segmento2N, genAsiSegmentosF.Segmento3N, 
	genAsiSegmentosF.Segmento4N, 
	comMovProv.ClaveFiscal
order by 1,3,5 
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comLibros.sql*/
/* AJ NOV 18 AGREGUE SOLO COMPRAS */

-- Inf_comLibros '1', '20190701','20190731', 1, 1,0
drop PROCEDURE Inf_comLibros
go
CREATE PROCEDURE Inf_comLibros (
@Libro_Id VarChar(5), 
@FechaDesde DateTime, 
@FechaHasta DateTime,
@Empresa_Id Int, 
@SoloCompras bit, 
@SoloPendientes bit
)
as

if @SoloPendientes = 0
Begin

SELECT XXX.Fecha, xxx.FechaContable, XXX.SegmentoStr, XXX.TipoMov, XXX.ClaveFiscal, XXX.Cuit, xxx.comMovProv, xxx.Origen_Id, xxx.Descripcion,
XXX.RazonSocial, -SUM(XXX.Columna01*xxx.Cambio*xxx.Signo) as Columna01,
	-SUM(XXX.Columna02*xxx.Cambio*xxx.Signo) as Columna02, -SUM(XXX.Columna03*xxx.Cambio*xxx.Signo) as Columna03,
		-SUM(XXX.Columna04*xxx.Cambio*xxx.Signo) as Columna04, -SUM(XXX.Columna05*xxx.Cambio*xxx.Signo) as Columna05, 
		-SUM(XXX.Columna06*xxx.Cambio*xxx.Signo) as Columna06, -SUM(XXX.Columna07*xxx.Cambio*xxx.Signo) as Columna07, 
		-SUM(XXX.Columna08*xxx.Cambio*xxx.Signo) as Columna08, -SUM(XXX.Columna09*xxx.Cambio*xxx.Signo) as Columna09, 
		-SUM(XXX.Columna10*xxx.Cambio*xxx.Signo) as Columna10, -SUM(XXX.Columna11*xxx.Cambio*xxx.Signo) as Columna11, 
		-SUM(XXX.Columna12*xxx.Cambio*xxx.Signo) as Columna12

FROM (

SELECT comMovProv.comMovProv, comMovProv.Fecha_ccp Fecha, conAsientos.Fecha AS FechaContable, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as SegmentoStr,
	comMovTipos.TipoMov, conAsientos.Cambio, comMovTipos.Signo, comOrigenesFiscales.Origen_Id, comOrigenesFiscales.Descripcion,
	ISNULL(comMovprov.ClaveFiscal, ' ') as ClaveFiscal, 
	genEntidades.Cuit, comProveedores.RazonSocial , 
	Case when comLibrosImpuestos.Columna = 1 then
	case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end AS Columna01 ,
		Case when comLibrosImpuestos.Columna = 2 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end AS Columna02,
		
		Case when comLibrosImpuestos.Columna = 3 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end AS Columna03,
		
		Case when comLibrosImpuestos.Columna = 4 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end AS Columna04,
		
		Case when comLibrosImpuestos.Columna = 5 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		else 0 END else 0 end AS Columna05 , 

			Case when comLibrosImpuestos.Columna = 6 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end AS Columna06 ,

			Case when comLibrosImpuestos.Columna = 7 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end AS Columna07, 

			Case when comLibrosImpuestos.Columna = 8 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end AS Columna08,

			Case when comLibrosImpuestos.Columna = 9 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end AS Columna09, 

			Case when comLibrosImpuestos.Columna = 10 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end AS Columna10, 

			Case when comLibrosImpuestos.Columna = 11 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		else 0 END else 0 end AS Columna11,

			Case when comLibrosImpuestos.Columna = 12 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		else 0 END else 0 end AS Columna12 

FROM comMovProv 
	INNER JOIN conAsientos ON comMovProv.comMovProv = conAsientos.conAsientos
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
	INNER JOIN genEntidades ON genEntidades.genEntidades = comMovProv.Proveed_Id
	INNER JOIN comProveedores ON comProveedores.genEntidades = genEntidades.genEntidades
	INNER JOIN comMovTipos ON comMovTipos.TipoMov = comMovProv.TipoMov
	Left Join comOrigenesFiscales On comOrigenesFiscales.comOrigenesFiscales = comMovProv.Origen_Id
	CROSS JOIN (comLibrosImpuestos Inner Join comLibros on comLibros.comLibros = comLibrosImpuestos.comLibros)
WHERE 

(@SoloCompras = 0 or 
	Exists(select 1 from conMovCont INNER JOIN conCuentas ON 	
		conMovCont.conAsientos = conAsientos.conAsientos and 
		conMovCont.Cuenta_Id = conCuentas.conCuentas 
		INNER JOIN conTipoEspecialesCuerpo on 
		conTipoEspecialesCuerpo.Tipo_id =  conCuentas.Tipo_id 
		Where
			conTipoEspecialesCuerpo.TipoEspe_Id = 'INVEN') OR
	Exists(select 1 from comMovPOC INNER JOIN comOCArticulo ON 
		comMovPOC.comMovprov = conasientos.conAsientos and 
		comMovPOC.comOrdenComp = comOCArticulo.comOrdenComp and 
		comMovPOC.Renglon_OC = comOCArticulo.Renglon_OC
		INNER JOIN stkProductos ON 
		stkProductos.Clase IN ('E', '-')) OR 
	Exists(select 1 from comMovPOC INNER JOIN comOCMemo ON 
		comMovPOC.comMovprov = conasientos.conAsientos and 
		comMovPOC.comOrdenComp = comOCMemo.comOrdenComp and 
		comMovPOC.Renglon_OC = comOCMemo.Renglon_OC 
		inner join conCuentas ON 
		conCuentas.conCuentas = comOCMemo.Cuenta_Id 
		INNER JOIN conTipoEspecialesCuerpo on 
		conTipoEspecialesCuerpo.Tipo_id =  conCuentas.Tipo_id ) )
		 and 
conAsientos.Anulado = 0 and 
conAsientos.Posteado = 1 and 
isnull(comLibros.Empresa_Id,@Empresa_Id) = @Empresa_Id And comLibros.Libro_Id = @Libro_Id And
conAsientos.Empresa_Id = @Empresa_Id and
conAsientos.Fecha between @FechaDesde and @FechaHasta and  
comMovTipos.TipoMov in ('F','R','D', 'I', 'B', 'E')) AS XXX
group by XXX.Fecha, XXX.SegmentoStr, XXX.ClaveFiscal, XXX.Cuit, 
XXX.RazonSocial, xxx.comMovProv, XXX.TipoMov, xxx.comMovProv, xxx.Origen_Id, xxx.Descripcion, 
XXX.FechaContable
ORDER BY 1,2
end

else
begin

SELECT XXX.Fecha, XXX.FechaContable, XXX.SegmentoStr, XXX.TipoMov, XXX.ClaveFiscal, XXX.Cuit, xxx.comMovProv, xxx.Origen_Id, xxx.Descripcion,
XXX.RazonSocial, -SUM(XXX.Columna01*xxx.Cambio*xxx.Signo) as Columna01,
	-SUM(XXX.Columna02*xxx.Cambio*xxx.Signo) as Columna02, -SUM(XXX.Columna03*xxx.Cambio*xxx.Signo) as Columna03,
		-SUM(XXX.Columna04*xxx.Cambio*xxx.Signo) as Columna04, -SUM(XXX.Columna05*xxx.Cambio*xxx.Signo) as Columna05, 
		-SUM(XXX.Columna06*xxx.Cambio*xxx.Signo) as Columna06, -SUM(XXX.Columna07*xxx.Cambio*xxx.Signo) as Columna07, 
		-SUM(XXX.Columna08*xxx.Cambio*xxx.Signo) as Columna08, -SUM(XXX.Columna09*xxx.Cambio*xxx.Signo) as Columna09, 
		-SUM(XXX.Columna10*xxx.Cambio*xxx.Signo) as Columna10, -SUM(XXX.Columna11*xxx.Cambio*xxx.Signo) as Columna11, 
		-SUM(XXX.Columna12*xxx.Cambio*xxx.Signo) as Columna12

FROM (

SELECT comMovProv.comMovProv, comMovProv.Fecha_ccp Fecha, conAsientos.Fecha AS FechaContable, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as SegmentoStr,
	comMovTipos.TipoMov, conAsientos.Cambio, comMovTipos.Signo, comOrigenesFiscales.Origen_Id, comOrigenesFiscales.Descripcion,
	ISNULL(comMovprov.ClaveFiscal, ' ') as ClaveFiscal, 
	genEntidades.Cuit, comProveedores.RazonSocial , 

	Convert(Numeric(18,2),
	Case when comLibrosImpuestos.Columna = 1 then
	case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna01 ,
		Convert(Numeric(18,2),
		Case when comLibrosImpuestos.Columna = 2 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna02,
		Convert(Numeric(18,2),
		Case when comLibrosImpuestos.Columna = 3 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna03,
		Convert(Numeric(18,2),
		Case when comLibrosImpuestos.Columna = 4 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna04,
		Convert(Numeric(18,2),
		Case when comLibrosImpuestos.Columna = 5 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna05 , 
		Convert(Numeric(18,2),
			Case when comLibrosImpuestos.Columna = 6 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna06 ,
	Convert(Numeric(18,2),
			Case when comLibrosImpuestos.Columna = 7 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna07, 
		Convert(Numeric(18,2),
			Case when comLibrosImpuestos.Columna = 8 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna08,
	Convert(Numeric(18,2),	
			Case when comLibrosImpuestos.Columna = 9 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna09, 
	Convert(Numeric(18,2),
			Case when comLibrosImpuestos.Columna = 10 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
				else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna10, 
	Convert(Numeric(18,2),
			Case when comLibrosImpuestos.Columna = 11 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna11,
		Convert(Numeric(18,2),
			Case when comLibrosImpuestos.Columna = 12 then
		case  comLibrosImpuestos.TipoRenglon when 'TO' THEN 	
		comMovProv.Importe 
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv and 
				comMovimpuestos.Impuesto_Id = comLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			comMovProv.Importe -
			ISNULL((SELECT SUM(Base_Imponible) FROM comMovimpuestos
				Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia01 = 'IVA' And
				comMovimpuestos.comMovProv = comMovProv.comMovProv),0) -
			ISNULL((SELECT SUM(comMovimpuestos.Importe_Impuesto) FROM comMovimpuestos where
				comMovimpuestos.comMovProv = comMovProv.comMovProv ),0) 
		else 0 END else 0 end * comMovprov.Saldo / commovprov.Saldo) AS Columna12 

FROM (SELECT comMovProv, comMovProv.Proveed_Id , comMovProv.TipoMov, comMovProv.Origen_Id, 
   	  comMovProv.ClaveFiscal, comMovprov.Fecha_CCP,  comMovProv.Importe, comMovProv.Saldo +
		isnull((Select sum(genCancMov.Importe) from genCancMov, conAsientos 
			Where		
				conAsientos.conAsientos = genCancMov.Asiento_Id_Ap and 
				genCancMov.Asiento_Id = comMovprov.comMovprov and 
				conAsientos.Anulado = 0 and 
				genCancMov.FechaAplicacion > @FechaHasta ),0)+
				isnull((Select sum(genCancMov.Importe) from genCancMov, conAsientos 
			Where		
				conAsientos.conAsientos = genCancMov.Asiento_Id and 
				genCancMov.Asiento_Id_Ap = comMovprov.comMovprov and 
				conAsientos.Anulado = 0 and 
				genCancMov.FechaAplicacion > @FechaHasta ),0) as Saldo
	FROM comMovProv where comMovProv.FacturaTesoreria=0) AS comMovProv 
	INNER JOIN conAsientos ON comMovProv.comMovProv = conAsientos.conAsientos
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
	INNER JOIN genEntidades ON genEntidades.genEntidades = comMovProv.Proveed_Id
	INNER JOIN comProveedores ON comProveedores.genEntidades = genEntidades.genEntidades
	INNER JOIN comMovTipos ON comMovTipos.TipoMov = comMovProv.TipoMov
	Left Join comOrigenesFiscales On comOrigenesFiscales.comOrigenesFiscales = comMovProv.Origen_Id
	CROSS JOIN (comLibrosImpuestos Inner Join comLibros on comLibros.comLibros = comLibrosImpuestos.comLibros)
WHERE 

comMovprov.Saldo > 0 and 
conAsientos.Fecha <= @FechaHasta and 
conAsientos.Anulado = 0 and 
conAsientos.Posteado = 1 and 
isnull(comLibros.Empresa_Id,@Empresa_Id) = @Empresa_Id And comLibros.Libro_Id = @Libro_Id And
conAsientos.Empresa_Id = @Empresa_Id and
comMovTipos.TipoMov in ('F','R','D', 'I', 'B', 'E')) AS XXX
group by XXX.Fecha, XXX.SegmentoStr, XXX.ClaveFiscal, XXX.Cuit, 
XXX.RazonSocial, xxx.comMovProv, XXX.TipoMov, xxx.comMovProv, xxx.Origen_Id, xxx.Descripcion, 
XXX.FechaContable
ORDER BY 1,2

end

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comLibrosCabecera.sql*/
drop PROCEDURE Inf_comLibrosCabecera
go
CREATE PROCEDURE Inf_comLibrosCabecera (
@Libro_Id VarChar(5), 
@FechaDesde DateTime, 
@FechaHasta DateTime,
@Empresa_Id Int,
@SoloCompras bit, 
@SoloPendientes bit
)
as

SELECT ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 1 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna01, 
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 2 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna02, 
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 3 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna03, 
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 4 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna04, 
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 5 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna05,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 6 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna06,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 7 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna07,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 8 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna08,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 9 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna09,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 10 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna10,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 11 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna11,
			ISNULL((SELECT Titulo from comLibrosColumnas where Columna = 12 and 
			comLibros = dbo.FuncFKcomLIbros(@Libro_id)), ' ') as Columna12,
			(select COUNT(1) from comLibrosColumnas where comLibros = dbo.FuncFKcomLIbros(@Libro_id)) as NumeroColumnas

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_comMovprov.sql*/
-- inf_comMovProvPrincipal 1, 'FPRO', 4773,0,0,0,'','F','P027',' '
drop procedure inf_comMovProvPrincipal
go
create procedure inf_comMovProvPrincipal
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
-- Cabecera

select commovprov.comMovProv, 
	dbo.Segmento( genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento_str, 
	comProveedores.Proveed_Id, comProveedores.RazonSocial, genEntidades.Cuit, 
	conAsientos.Fecha, conAsientos.FechaRegistro, 
		disFormularios.Descripcion as DescripcionForm, 
		ISNULL(commovprov.ClaveFiscal,' ') AS ClaveFiscal, 
		genUsuarios.Usuario_Id, 
			commovprov.Importe, genMonedas.Simbolo, genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, 
			comConPago.CondPago_Id, comConPago.Descripcion as DescripcionCondPago , 
				genMovCuotas.FechaVencimiento, 
			comOrigenesFiscales.Origen_Id, comOrigenesFiscales.Descripcion as DescripcionOrigen
	from commovprov inner join conAsientos ON
		commovprov.comMovProv = conAsientos.conAsientos
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		inner join comProveedores ON
		comProveedores.genEntidades = commovprov.Proveed_Id 
		inner join genEntidades ON
		genEntidades.genEntidades = comProveedores.genEntidades
		inner join disFormularios ON
		disFormularios.disFormularios = conAsientos.Formulario_Id
		inner join genUsuarios ON
		genUsuarios.genUsuarios = conAsientos.Usuario_Id
		INNER JOIN genMonedas ON
		genMonedas.genMonedas = conAsientos.Moneda_Id
		INNER JOIN comConPago ON
		comConPago.comConPago = comMovprov.ComCondPago_Id
		INNER JOIN comOrigenesFiscales ON
		comOrigenesFiscales.comOrigenesFiscales = comMovprov.Origen_Id
		LEFT JOIN (SELECT  genMovCuotas.Asiento_Id, MIN(FechaVencimiento) as FechaVencimiento
		from genMovCuotas group by genMovCuotas.Asiento_Id) genMovCuotas  ON
		genMovCuotas.Asiento_Id = comMovprov.comMovProv 
		Where
			genSegmentos.Segmento_Id = 'FPRO' AND 
			genAsiSegmentos.Segmento1N = @Segmento1N and 
			genAsiSegmentos.Segmento2N = @Segmento2N and 
			genAsiSegmentos.Segmento3N = @Segmento3N and 
			genAsiSegmentos.Segmento4N = @Segmento4N and 
			genAsiSegmentos.Segmento1C = @Segmento1C and 
			genAsiSegmentos.Segmento2C = @Segmento2C and 
			genAsiSegmentos.Segmento3C = @Segmento3C and 
			genAsiSegmentos.Segmento4C = @Segmento4C
go

-- Asiento
drop procedure inf_comMovProvAsiento
go
create Procedure inf_comMovProvAsiento
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
select commovprov.comMovProv, 
		comMovDetalle.Renglon , comMovDetalle.Detalle,
		conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta, 
		ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_id, 
		ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_id, 
		case when Signo=-1 then comMovDetalle.Importe else 0 end as Debe,
		case when Signo=1 then comMovDetalle.Importe else 0 end as Haber,
		conBaseDistri.Base_Id
	from commovprov inner join conAsientos ON
		commovprov.comMovProv = conAsientos.conAsientos
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		inner join comMovDetalle ON
		comMovDetalle.comMovProv = COMMOVPROV.comMovProv
		inner join conCuentas ON
		comMovDetalle.Cuenta_Id = conCuentas.conCuentas
		left join conCentro1 on 
		 conCentro1.conCentro1 = comMovDetalle.Centro1_Id
		 left join conCentro2 on 
		 conCentro2.conCentro2 = comMovDetalle.Centro2_Id
		 left join conBaseDistri ON
		 conBaseDistri.conBaseDistri = comMovDetalle.Base_Id
		 inner join comMovTipos on comMovTipos.TipoMov=comMovProv.TipoMov
Where
			genSegmentos.Segmento_Id = 'FPRO' AND 
			genAsiSegmentos.Segmento1N = @Segmento1N and 
			genAsiSegmentos.Segmento2N = @Segmento2N and 
			genAsiSegmentos.Segmento3N = @Segmento3N and 
			genAsiSegmentos.Segmento4N = @Segmento4N and 
			genAsiSegmentos.Segmento1C = @Segmento1C and 
			genAsiSegmentos.Segmento2C = @Segmento2C and 
			genAsiSegmentos.Segmento3C = @Segmento3C and 
			genAsiSegmentos.Segmento4C = @Segmento4C
union all
select commovprov.comMovProv, 
		conMovCont.Renglon , ' ' as Detalle,
		conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta, 
		ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_id, 
		ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_id, 
		case when Signo=-1 then comMovImpuestos.Importe_Impuesto else 0 end as Debe,
		case when Signo=1 then comMovImpuestos.Importe_Impuesto else 0 end as Haber,
		'' as Base_Id
	from commovprov inner join conAsientos ON
		commovprov.comMovProv = conAsientos.conAsientos
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		inner join comMovImpuestos ON
		comMovImpuestos.comMovProv = COMMOVPROV.comMovProv
		inner join conMovCont on 
		comMovImpuestos.comMovProv=conMovCont.conAsientos and comMovImpuestos.conRenglon=conMovCont.Renglon
		inner join conCuentas ON
		conMovCont.Cuenta_Id = conCuentas.conCuentas
		left join conCentro1 on 
		 conCentro1.conCentro1 = conMovCont.Centro1_Id
		 left join conCentro2 on 
		 conCentro2.conCentro2 = conMovCont.Centro2_Id
		
		 inner join comMovTipos on comMovTipos.TipoMov=comMovProv.TipoMov
Where
			genSegmentos.Segmento_Id = 'FPRO' AND 
			genAsiSegmentos.Segmento1N = @Segmento1N and 
			genAsiSegmentos.Segmento2N = @Segmento2N and 
			genAsiSegmentos.Segmento3N = @Segmento3N and 
			genAsiSegmentos.Segmento4N = @Segmento4N and 
			genAsiSegmentos.Segmento1C = @Segmento1C and 
			genAsiSegmentos.Segmento2C = @Segmento2C and 
			genAsiSegmentos.Segmento3C = @Segmento3C and 
			genAsiSegmentos.Segmento4C = @Segmento4C
UNION ALL
select commovprov.comMovProv, 
		9999 , ' ' Detalle,
		conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta, 
		ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_id, 
		ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_id, 
		case when Signo=1 then comMovProv.Importe else 0 end as Debe,
		case when Signo=-1 then comMovProv.Importe else 0 end as Haber,
		  ' ' as Base_Id
	from commovprov inner join conAsientos ON
		commovprov.comMovProv = conAsientos.conAsientos
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		inner join conMovCont ON
		conMovCont.conAsientos = COMMOVPROV.comMovProv and 
		conMovCont.Clase = 'PRO' 
		inner join conCuentas ON
		conMovCont.Cuenta_Id = conCuentas.conCuentas
		left join conCentro1 on 
		 conCentro1.conCentro1 = conMovCont.Centro1_Id
		 left join conCentro2 on 
		 conCentro2.conCentro2 = conMovCont.Centro2_Id
		  inner join comMovTipos on comMovTipos.TipoMov=comMovProv.TipoMov
Where
			genSegmentos.Segmento_Id = 'FPRO' AND 
			genAsiSegmentos.Segmento1N = @Segmento1N and 
			genAsiSegmentos.Segmento2N = @Segmento2N and 
			genAsiSegmentos.Segmento3N = @Segmento3N and 
			genAsiSegmentos.Segmento4N = @Segmento4N and 
			genAsiSegmentos.Segmento1C = @Segmento1C and 
			genAsiSegmentos.Segmento2C = @Segmento2C and 
			genAsiSegmentos.Segmento3C = @Segmento3C and 
			genAsiSegmentos.Segmento4C = @Segmento4C
ORDER BY 2
go
-- impuestos
drop procedure inf_comMovProvImpuestos
go
create Procedure inf_comMovProvImpuestos
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
select comImpuestos.Impuesto_Id, comImpuestos.Descripcion, 
		comMovImpuestos.Base_Imponible, comMovImpuestos.Porcentaje, 
		comMovImpuestos.Importe_Impuesto
	from comMovImpuestos inner join conAsientos ON
		comMovImpuestos.comMovProv = conAsientos.conAsientos
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		Inner join comImpuestos ON
		comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id

Where
			genSegmentos.Segmento_Id = 'FPRO' AND 
			genAsiSegmentos.Segmento1N = @Segmento1N and 
			genAsiSegmentos.Segmento2N = @Segmento2N and 
			genAsiSegmentos.Segmento3N = @Segmento3N and 
			genAsiSegmentos.Segmento4N = @Segmento4N and 
			genAsiSegmentos.Segmento1C = @Segmento1C and 
			genAsiSegmentos.Segmento2C = @Segmento2C and 
			genAsiSegmentos.Segmento3C = @Segmento3C and 
			genAsiSegmentos.Segmento4C = @Segmento4C
ORDER BY 1
go
-- STOCK
drop Procedure inf_comMovProvStock
go
create procedure inf_comMovProvStock
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
SELECT stkMoviCuerpo.Renglon, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkMoviCuerpo.CantidadForm, 
		stkMoviCuerpo.PrecioOriginal, stkMoviCuerpo.Descuento, 
		stkMoviCuerpo.CostoUnitario, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta
	from commovprov inner join conAsientos ON
		commovprov.comMovProv = conAsientos.conAsientos
		inner join genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		inner join stkMoviCuerpo ON
		stkMoviCuerpo.stkMoviCabe = comMovprov.comMovProv
		INNER JOIN stkMoviCabe ON
		stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
		inner join stkProductos ON
		stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
		inner join stkUniMed ON
		stkUniMed.stkUniMed = stkMoviCuerpo.Medida_Id
		inner join stkSubTipoMov ON
		stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id
		INNER JOIN stkTiposMov ON
		stkTiposMov.TipoMov = stkSubTipoMov.TipoMov
		inner join conMovCont ON 
		conMovCont.conAsientos = conasientos.conAsientos and 
		conMovCont.Renglon = case when stkTiposMov.Signo = 1 THEN 
				stkMoviCuerpo.conRenglonDebe  ELSE
				stkMoviCuerpo.conRenglonHaber END
		INNER JOIN conCuentas ON
			conCuentas.conCuentas = conMovCont.Cuenta_Id
Where
			genSegmentos.Segmento_Id = @Segmento_Id AND 
			genAsiSegmentos.Segmento1N = @Segmento1N and 
			genAsiSegmentos.Segmento2N = @Segmento2N and 
			genAsiSegmentos.Segmento3N = @Segmento3N and 
			genAsiSegmentos.Segmento4N = @Segmento4N and 
			genAsiSegmentos.Segmento1C = @Segmento1C and 
			genAsiSegmentos.Segmento2C = @Segmento2C and 
			genAsiSegmentos.Segmento3C = @Segmento3C and 
			genAsiSegmentos.Segmento4C = @Segmento4C
ORDER BY 1

go
drop procedure inf_comMovProvOc
go
create procedure inf_comMovProvOC
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )

SELECT comMovPOC.comMovProv, comMovPOC.Renglon_OC as Renglon, 0 RenglonReferencia, 	
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProductos,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, 
	comOCArticulo.Factor, comMovPOC.Cantidad as Cantidad,
	comMovPOC.CantidadOriginal as CantidadForm, comOcCuerpo.Precio as CostoUnitario, 
	comOCArticulo.PrecioOriginal, 0 as conRenglonDebe, 
	 comOcCuerpo.Cantidad as CantidadOC, comOcCuerpo.Cantidad_Recibida - comOCCuerpo.Cantidad_Facturada +comOCCuerpo.Cantidad_Creditos as CantidadPendiente,
	comOcCuerpo.Precio, comOCCuerpo.Renglon_OC,comOCCuerpo.comOrdenComp, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta
FROM comMovPOC inner join comOCSegmentos on comMovPOC.comOrdenComp = comOCSegmentos.comOrdenComp
INNER JOIN comOcCuerpo ON comMovPOC.comOrdenComp = comOcCuerpo.comOrdenComp and 
						   comMovPOC.Renglon_OC=comOCCuerpo.Renglon_OC
INNER JOIN comOcArticulo ON comOcCuerpo.comOrdenComp = comOcArticulo.comOrdenComp and 
							comOcCuerpo.Renglon_OC = comOcArticulo.Renglon_OC
INNER JOIN stkProductos  ON (stkProductos.stkProductos = comOcArticulo.Producto_Id)
INNER JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOcCuerpo.Medida_Id)
inner join (SELECT conAsientos, MAX(Cuenta_Id) AS Cuenta_Id from   conMovCont		
			WHERE
				conMovCont.Clase in ('FACAR','OEFAR')
			Group by conAsientos) as conMovCont ON  comMovPOC.comMovProv=conMovCont.conAsientos 
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas
WHERE 
	comMovPOC.comMovProv = @pComMovProv
UNION ALL
SELECT comMovPOC.comMovProv, comMovPOC.Renglon_OC as Renglon, 0 RenglonReferencia, 	
	' ' Producto_Id, comOCMemo.Detalle as DescripcionProductos,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, 
	1 Factor, comMovPOC.Cantidad as Cantidad,
	comMovPOC.CantidadOriginal as CantidadForm, comOcCuerpo.Precio as CostoUnitario, 
	comOCCuerpo.Precio AS PrecioOriginal, 0 as conRenglonDebe, 
	 comOcCuerpo.Cantidad as CantidadOC, comOcCuerpo.Cantidad_Recibida - comOCCuerpo.Cantidad_Facturada +comOCCuerpo.Cantidad_Creditos as CantidadPendiente,
	comOcCuerpo.Precio, comOCCuerpo.Renglon_OC,comOCCuerpo.comOrdenComp, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta
FROM comMovPOC inner join comOCSegmentos on comMovPOC.comOrdenComp = comOCSegmentos.comOrdenComp
INNER JOIN comOcCuerpo ON comMovPOC.comOrdenComp = comOcCuerpo.comOrdenComp and comMovPOC.Renglon_OC=comOCCuerpo.Renglon_OC
INNER JOIN comOCMemo ON comOcCuerpo.comOrdenComp = comOCMemo.comOrdenComp and 
	comOcCuerpo.Renglon_OC = comOCMemo.Renglon_OC
inner join (SELECT conAsientos, MAX(Cuenta_Id) AS Cuenta_Id from   conMovCont		
			WHERE
				conMovCont.Clase in ('FACAR','OEFAR')
			Group by conAsientos) as conMovCont ON comMovPOC.comMovProv=conMovCont.conAsientos 
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas
INNER JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOcCuerpo.Medida_Id)
WHERE 
	comMovPOC.comMovProv = @pComMovProv
go

drop procedure inf_comMovProvSTR
go
create procedure inf_comMovProvSTR
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )
SELECT dbo.Segmento(comOCSegmentos.Segmento_Id,
	comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C, 
	comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) as SegmentoSTR

From comOCSegmentos 
INNER JOIN genSegmentos	ON genSegmentos.genSegmentos = comOCSegmentos.Segmento_Id
WHERE 
	Exists(select 1 from comMovPOC where
		comMovPOC.comMovProv = @pComMovProv and 
		comMovPOC.comOrdenComp =	comOCSegmentos.comOrdenComp)
go

drop procedure inf_comMovProvVOC
go
create procedure inf_comMovProvVOC
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )

SELECT comMovPOC.comMovProv, comMovPOC.Renglon_OC as Renglon, 0 RenglonReferencia, 	
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProductos,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, 
	comOCArticulo.Factor, comMovPOC.Cantidad as Cantidad,
	comMovPOC.CantidadOriginal as CantidadForm, comOcCuerpo.Precio as CostoUnitario, 
	comOCArticulo.PrecioOriginal, 0 as conRenglonDebe, 
	 comOcCuerpo.Cantidad as CantidadOC, comOcCuerpo.Cantidad_Recibida - comOCCuerpo.Cantidad_Facturada +comOCCuerpo.Cantidad_Creditos as CantidadPendiente,
	comOcCuerpo.Precio, comOCCuerpo.Renglon_OC,comOCCuerpo.comOrdenComp, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta,
	dbo.Segmento(comOCSegmentos.Segmento_Id,
	comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C, 
	comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) as SegmentoSTR
FROM comMovPOC inner join comOCSegmentos on comMovPOC.comOrdenComp = comOCSegmentos.comOrdenComp
INNER JOIN comOcCuerpo ON comMovPOC.comOrdenComp = comOcCuerpo.comOrdenComp and comMovPOC.Renglon_OC=comOCCuerpo.Renglon_OC
INNER JOIN comOcArticulo ON comOcCuerpo.comOrdenComp = comOcArticulo.comOrdenComp and 
	comOcCuerpo.Renglon_OC = comOcArticulo.Renglon_OC

INNER JOIN stkProductos  ON (stkProductos.stkProductos = comOcArticulo.Producto_Id)
INNER JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOcCuerpo.Medida_Id)
inner join (SELECT conAsientos, MAX(Cuenta_Id) AS Cuenta_Id from   conMovCont		
			WHERE
				conMovCont.Clase in ('FACAR','OEFAR')
			Group by conAsientos) as conMovCont ON 
			conMovCont.conAsientos = comMovPOC.comMovProv
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas


WHERE 
	comMovPOC.comMovProv = @pComMovProv
UNION ALL
SELECT comMovPOC.comMovProv, comMovPOC.Renglon_OC as Renglon, 0 RenglonReferencia, 	
	' ' Producto_Id, comOCMemo.Detalle as DescripcionProductos,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, 
	1 Factor, comMovPOC.Cantidad as Cantidad,
	comMovPOC.CantidadOriginal as CantidadForm, comOcCuerpo.Precio as CostoUnitario, 
	comOCCuerpo.Precio AS PrecioOriginal, 0 as conRenglonDebe, 
	 comOcCuerpo.Cantidad as CantidadOC, comOcCuerpo.Cantidad_Recibida - comOCCuerpo.Cantidad_Facturada +comOCCuerpo.Cantidad_Creditos as CantidadPendiente,
	comOcCuerpo.Precio, comOCCuerpo.Renglon_OC,comOCCuerpo.comOrdenComp, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta,
	dbo.Segmento(comOCSegmentos.Segmento_Id,
	comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C, 
	comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) as SegmentoSTR
FROM comMovPOC inner join comOCSegmentos on comMovPOC.comOrdenComp = comOCSegmentos.comOrdenComp
INNER JOIN comOcCuerpo ON comMovPOC.comOrdenComp = comOcCuerpo.comOrdenComp and comMovPOC.Renglon_OC=comOCCuerpo.Renglon_OC
INNER JOIN comOCMemo ON comOcCuerpo.comOrdenComp = comOCMemo.comOrdenComp and 
	comOcCuerpo.Renglon_OC = comOCMemo.Renglon_OC
inner join (SELECT conAsientos, MAX(Cuenta_Id) AS Cuenta_Id from   conMovCont		
			WHERE
				conMovCont.Clase in ('FACAR','OEFAR')
			Group by conAsientos) as conMovCont ON comMovPOC.comMovProv=conMovCont.conAsientos 
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas
INNER JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOcCuerpo.Medida_Id)

WHERE 

	comMovPOC.comMovProv = @pComMovProv
go

drop procedure inf_comMovProvEMBSTR
go
create procedure inf_comMovProvEMBSTR
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )

SELECT dbo.Segmento(genSegmentos.Segmento_Id,
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR

From genAsiSegmentos 
INNER JOIN comEmbarques on comEmbarques.comEmbarques = genAsiSegmentos.Asiento_Id
inner join comMovProvEmb on comMovProvEmb.comEmbarques = comEmbarques.comEmbarques
inner join comMovProv ON  comMovProv.comMovProv = comMovProvEmb.comMovProv
INNER JOIN genSegmentos	ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
WHERE 
comMovProv.comMovProv = @pComMovProv
go

drop procedure inf_comMovProvEMBCuerpo
go
create procedure inf_comMovProvEMBCuerpo
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )

SELECT comMovProvEmb.comMovProv, comOCCuerpo.Renglon_OC as Renglon, 0 RenglonReferencia, 	
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProductos,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, 
	comOCArticulo.Factor, comMovPOC.Cantidad as Cantidad,
	comMovPOC.CantidadOriginal as CantidadForm, comOcCuerpo.Precio as CostoUnitario, 
	comOCArticulo.PrecioOriginal, 0 as conRenglonDebe, 
	comEmbCuerpo.Cantidad as CantidadOC, comEmbCuerpo.CantidadRecibida - comEmbCuerpo.CantidadFacturada as CantidadPendiente,
	comOcCuerpo.Precio, comOCCuerpo.Renglon_OC,comOCCuerpo.comOrdenComp
FROM comMovProvEmb INNER JOIN comMovPOC ON comMovPOC.comMovProv = comMovProvEmb.comMovProv 
INNER JOIN  comOcCuerpo ON comMovPOC.comOrdenComp = comOcCuerpo.comOrdenComp  and 
						   comMovPOC.Renglon_OC = comOCCuerpo.Renglon_OC	
INNER JOIN comOcArticulo ON comOcCuerpo.comOrdenComp = comOcArticulo.comOrdenComp and 
					 		comOcCuerpo.Renglon_OC = comOcArticulo.Renglon_OC
INNER JOIN comEmbCuerpo ON comEmbCuerpo.comEmbarques = comMovProvEmb.comEmbarques and 
						  comEmbCuerpo.comOrdenComp = comOcArticulo.comOrdenComp and 
						  comEmbCuerpo.Renglon_OC = comOcArticulo.Renglon_OC
INNER JOIN stkProductos  ON (stkProductos.stkProductos = comOcArticulo.Producto_Id)
INNER JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOcCuerpo.Medida_Id)

WHERE 
	comMovProvEmb.comMovProv = @pComMovProv
go

drop procedure inf_comMovProvEMBGastos
go
create procedure inf_comMovProvEMBGastos
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )

SELECT comEmbGastos.Renglon, comEmbGastos.Detalle, comEmbGastos.ImporteOriginal, 
		genMonedas.Moneda_Id , comMovDetalle.Importe AS Monto,
		comEmbGastoMovProv.comRenglon, conCuentas.Cuenta_Id,conCuentas.Descripcion as DescripcionCuenta
	FROM comEmbGastos inner join genMonedas ON comEmbGastos.Moneda_Id = genMonedas.genMonedas
		INNER JOIN comEmbGastoMovProv ON 
		comEmbGastoMovProv.comEmbarques = comEmbGastos.comEmbarques and 
		comEmbGastoMovProv.Renglon = comEmbGastos.Renglon
		INNER JOIN comMovDetalle ON
		comMovDetalle.comMovProv =  comEmbGastoMovProv.comMovProv and
		comMovDetalle.Renglon =comEmbGastoMovProv.comRenglon
		inner join conMovCont on comMovDetalle.comMovProv =  conMovCont.conAsientos and
		comMovDetalle.Renglon =conMovCont.Renglon
		inner join conCuentas on conCuentas.conCuentas=conMovCont.Cuenta_Id
		Where
		comEmbGastoMovProv.comMovProv = @pComMovProv
		ORDER BY 1
go



drop procedure inf_comMovProvDifP
go
create procedure inf_comMovProvDifP
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )

SELECT comMovProvDPreFactDir.Renglon, 
	comMovProvDPreFactDir.RenglonStk as RenglonOrig,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, 
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoStr ,
	comMovProvDPreFactDir.CantidadOriginal as CantidadForm, comMovProvDPreFactDir.Cantidad, 
	comMovProvDPreFactDir.Descuento, comMovProvDPreFactDir.Monto, 
	comMovProvDPreFactDir.Monto *comMovProvDPreFactDir.CantidadOriginal as Total, 
	' ' as SegmentoStrOC, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkMoviCuerpo.CantidadForm as CantidadOriginal, stkUniMed.Medida_Id, 
	stkMoviCuerpo.Factor, stkMoviCuerpo.PrecioOriginal 
FROM comMovProvDPreFactDir INNER JOIN genAsiSegmentos ON
genAsiSegmentos.Asiento_Id = comMovProvDPreFactDir.stkMoviCabe
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN stkMoviCuerpo ON 
stkMoviCuerpo.stkMoviCabe = comMovProvDPreFactDir.stkMoviCabe AND 
stkMoviCuerpo.Renglon = comMovProvDPreFactDir.RenglonStk
INNER JOIN stkProductos ON
stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
INNER JOIN stkUniMed ON
stkUniMed.stkUniMed = stkMoviCuerpo.Medida_Id
Where 
	comMovProvDPreFactDir.comMovProv = @pComMovProv

UNION ALL
SELECT comMovProvDPreOC.Renglon, 
	comMovProvDPreOC.Renglon_OC,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, 
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoStr ,
	comMovProvDPreOC.CantidadOriginal as CantidadForm, comMovProvDPreOC.Cantidad, 
	comMovProvDPreOC.Descuento, comMovProvDPreOC.Monto, 
	comMovProvDPreOC.Monto *comMovProvDPreOC.CantidadOriginal as Total, 
	dbo.Segmento(comOCSegmentos.Segmento_Id, 
	comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C, 
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
	comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N, 
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) as SegmentoStrOC,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	comMovPOC.Cantidad , stkUniMed.Medida_Id, 
	comMovpOC.Factor, comOCArticulo.PrecioOriginal

FROM comMovProvDPreOC INNER JOIN genAsiSegmentos ON
genAsiSegmentos.Asiento_Id = comMovProvDPreOC.comMovProvFactOrig
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN comOCArticulo ON
comOCArticulo.comOrdenComp = comMovProvDPreOC.comOrdenComp and 
comOCArticulo.Renglon_OC =comMovProvDPreOC.Renglon_OC
INNER JOIN comOCCuerpo ON
comOCCuerpo.comOrdenComp = comMovProvDPreOC.comOrdenComp and 
comOCCuerpo.Renglon_OC =comMovProvDPreOC.Renglon_OC
INNER JOIN comMovpOC ON 
comMovpOC.comMovProv = comMovProvDPreOC.comMovProvFactOrig AND 
comMovpOC.comOrdenComp = comMovProvDPreOC.comOrdenComp AND 
comMovpOC.Renglon_OC = comMovProvDPreOC.Renglon_OC
INNER JOIN stkProductos ON
stkProductos.stkProductos = comOCArticulo.Producto_Id
INNER JOIN stkUniMed ON
stkUniMed.stkUniMed = comOCCuerpo.Medida_Id
INNER JOIN comOCSegmentos ON 
comOCSegmentos.comOrdenComp = comMovProvDPreOC.comOrdenComp
Where 
	comMovProvDPreOC.comMovProv = @pComMovProv
ORDER BY 2



GO

drop procedure inf_comMovProvRemi
go
create procedure inf_comMovProvRemi
(
@Empresa_Id int,
@Segmento_Id varchar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
DECLARE @pComMovProv bigint

SET @pComMovProv = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @Empresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@Segmento_id) and
	Segmento1N =@Segmento1N and
	Segmento2N = @Segmento2N and
	Segmento3N = @Segmento3N and
	Segmento4N = @Segmento4N and
	Segmento1C = @Segmento1C and
	Segmento2C = @Segmento2C and 
	Segmento3C = @Segmento3C and 
	Segmento4C = @Segmento4C )


-- Cuerpo
SELECT comRemiPendFact.Renglon, comRemiPendFact.RenglonCuerpo, comRemiPendFact.CantidadFacturado,
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, 
	comRemiPendFact.CantidadOriginalFact, comRemiPendFact.PrecioFacturado,
	stkMoviCuerpo.PrecioOriginal, stkUniMed.Medida_Id, stkMoviCuerpo.Cantidad, 
	stkMoviCuerpo.Factor, stkMoviCuerpo.CantidadForm as CantidadOriginal,
	dbo.Segmento(genAsiSegmentos.Segmento_Id,  
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoStr, 
	stkMoviCuerpo.stkMoviCabe
from comRemiPendFact inner join stkMoviCuerpo ON
	comRemiPendFact.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
	inner join stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id 
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkMoviCuerpo.Medida_Id
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = comRemiPendFact.stkMoviCabe
	left JOIN conCuentas ON 
	conCuentas.conCuentas = stkProductos.CtaCompra
Where
	comRemiPendFact.comMovprov = @pComMovProv
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comOCRecepciones.sql*/
-- exec inf_comOCRecepcionesCabe 1, 'REOC',16,0,0,0,'FGZ',' ',' ',' '
-- exec inf_comOCRecepcionesCuerpo 1, 'REOC',16,0,0,0,'FGZ',' ',' ',' '
Drop Procedure inf_comOCRecepcionesCabe
GO

Create Procedure inf_comOCRecepcionesCabe(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10), 
	@Segmento1N int,
	@Segmento2N int,
	@Segmento3N int,
	@Segmento4N int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
as

SELECT conAsientos.conAsientos, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, 
		genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
		genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
		genAsiSegmentos.Segmento4N) AS Comprobante, 
		conAsientos.Fecha, genUsuarios.Usuario_Id,
		dbo.Segmento(comOCSegmentos.Segmento_Id, comOCSegmentos.Segmento1C,
		comOCSegmentos.Segmento2C, comOCSegmentos.Segmento3C, 
		comOCSegmentos.Segmento4C, comOCSegmentos.Segmento1N,
		comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N, 
		comOCSegmentos.Segmento4N) AS OrdenCompra, 
		comOrdenComp.Fecha as FechaOC,
		comProveedores.Proveed_Id, comProveedores.RazonSocial, 
		genMonedas.Moneda_Id, conAsientos.Cambio, 
		ISNULL(conCuentas.Cuenta_Id,' ') as Cuenta_Id, 
		ISNULL(conCuentas.Descripcion,' ') as DescripcionCuenta
from conAsientos 
	inner join genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	inner join genSegmentos ON  genSegmentos.genSegmentos =genAsiSegmentos.Segmento_Id
	Inner join genUsuarios ON  genUsuarios.genUsuarios = conAsientos.Usuario_Id
	INNER JOIN (select Distinct comOrdenComp, comOcRecepcion from  comOcReceCuerpo) as comOcRecepcion on 
		comOcRecepcion.comOcRecepcion = conAsientos.conAsientos
	INNER JOIN comOrdenComp ON  comOrdenComp.comOrdenComp = comOcRecepcion.comOrdenComp
	INNER JOIN comProveedores ON  comProveedores.genEntidades = comOrdenComp.Proveed_Id
	INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
	INNER JOIN comOCSegmentos ON comOCSegmentos.comOrdenComp = comOrdenComp.comOrdenComp
	LEFT JOIN conCuentas ON  conCuentas.conCuentas = genMonedas.CtaFactaRecibir
	WHERE
		genSegmentos.Segmento_Id = @Segmento_Id and 
		genAsiSegmentos.Segmento1C = @Segmento1C AND
		genAsiSegmentos.Segmento2C = @Segmento2C AND
		genAsiSegmentos.Segmento3C = @Segmento3C AND
		genAsiSegmentos.Segmento4C = @Segmento4C AND
		genAsiSegmentos.Segmento1N = @Segmento1N AND
		genAsiSegmentos.Segmento2N = @Segmento2N AND
		genAsiSegmentos.Segmento3N = @Segmento3N AND
		genAsiSegmentos.Segmento4N = @Segmento4N 

		
GO


Drop Procedure inf_comOCRecepcionesCuerpo
GO

Create Procedure inf_comOCRecepcionesCuerpo(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10), 
	@Segmento1N int,
	@Segmento2N int,
	@Segmento3N int,
	@Segmento4N int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
as

SELECT conAsientos.conAsientos, comOcReceCuerpo.Renglon_OC, 
	comOCMemo.Detalle, comOcReceCuerpo.Cantidad, comocCuerpo.Precio, 
		round(comOcReceCuerpo.Cantidad * comocCuerpo.Precio * conAsientos.Cambio,2) as Monto,
	conCuentas.Cuenta_Id, 
		conCuentas.Descripcion, ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, 
		ISNULL(conCentro2.Centro2_Id,' ') as Centro2_Id
	
from conAsientos 
	inner join genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	inner join genSegmentos ON  genSegmentos.genSegmentos =genAsiSegmentos.Segmento_Id
	INNER JOIN comOcReceCuerpo on 
		comOcReceCuerpo.comOcRecepcion = conAsientos.conAsientos
	INNER JOIN comOCMemo ON  comOCMemo.comOrdenComp = comOcReceCuerpo.comOrdenComp AND 
		comOCMemo.Renglon_OC = comOcReceCuerpo.Renglon_OC
	inner join conCuentas ON conCuentas.conCuentas = comOCMemo.Cuenta_Id
	inner join comOCCuerpo ON comOCMemo.comOrdenComp = comOCCuerpo.comOrdenComp AND 
		comOCMemo.Renglon_OC = comOCCuerpo.Renglon_OC
	LEFT JOIN conCentro1 ON conCentro1.conCentro1 = comOCCuerpo.Centro1_Id
	LEFT JOIN conCentro2 ON conCentro2.conCentro2 = comOCCuerpo.Centro2_Id

	WHERE
		genSegmentos.Segmento_Id = @Segmento_Id and 
		genAsiSegmentos.Segmento1C = @Segmento1C AND
		genAsiSegmentos.Segmento2C = @Segmento2C AND
		genAsiSegmentos.Segmento3C = @Segmento3C AND
		genAsiSegmentos.Segmento4C = @Segmento4C AND
		genAsiSegmentos.Segmento1N = @Segmento1N AND
		genAsiSegmentos.Segmento2N = @Segmento2N AND
		genAsiSegmentos.Segmento3N = @Segmento3N AND
		genAsiSegmentos.Segmento4N = @Segmento4N 

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comOrdenCompCuerpo.sql*/
drop procedure inf_comOrdenCompCuerpo
go
create procedure inf_comOrdenCompCuerpo
(
@Empresa_Id int,
@Segmento_Id VarChar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
set nocount on
DECLARE @pComOrdenComp as Int
SET @pComOrdenComp = (SELECT comOrdenComp 
	FROM comOCSegmentos WHERE 
	(Empresa_Id = @Empresa_Id) AND 
	(Segmento_Id = dbo.FuncFkgenSegmentos(@Segmento_Id)) AND 
	(Segmento1N = @Segmento1N) AND 
	(Segmento2N = @Segmento2N) AND 
	(Segmento3N = @Segmento3N) AND 
	(Segmento4N = @Segmento4N) AND 
	(Segmento1C = @Segmento1C) AND 
	(Segmento2C = @Segmento2C) AND 
	(Segmento3C = @Segmento3C) AND 
	(Segmento4C = @Segmento4C))
SELECT comOCArticulo.comOrdenComp, comOCArticulo.Renglon_OC, stkProductos.Producto_Id,
	stkProductos.Descripcion + isnull(comOCCuerpo.Observaciones,'') 
	as DescripcionProductos, comOCArticulo.Factor, comOCArticulo.CantidadOriginal, comOCArticulo.PrecioOriginal,
	stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepositos,
	comOCCuerpo.Cantidad, comOCCuerpo.Cantidad_Recibida, comOcCuerpo.Cantidad_Embarcada,
	comOCCuerpo.Cantidad_Facturada, comOCCuerpo.Fecha_Entrega, comOCCuerpo.Precio, comOCCuerpo.Pendiente,
	comOCCuerpo.Cantidad_Creditos, stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, conCentro1.Centro1_Id,
	conCentro1.Descripcion as DescripcionCentro1, conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2
FROM comOCArticulo 
INNER JOIN comOCCuerpo  ON (comOCCuerpo.comOrdenComp = comOCArticulo.comOrdenComp) AND (comOCCuerpo.Renglon_OC = comOCArticulo.Renglon_OC)
LEFT JOIN stkProductos  ON (stkProductos.stkProductos = comOCArticulo.Producto_Id)
LEFT JOIN stkDepositos  ON (stkDepositos.stkDepositos = comOCArticulo.Deposito_Id)
INNER JOIN comOrdenComp  ON (comOrdenComp.comOrdenComp = comOCCuerpo.comOrdenComp)
LEFT JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOCCuerpo.Medida_Id)
LEFT JOIN conCentro1  ON (conCentro1.conCentro1 = comOCCuerpo.Centro1_Id)
LEFT JOIN conCentro2  ON (conCentro2.conCentro2 = comOCCuerpo.Centro2_Id)
where (comOCArticulo.comOrdenComp = @pcomOrdenComp)
AND (comOCArticulo.Renglon_OC = comOCArticulo.Renglon_oc)
union
SELECT comOCMemo.comOrdenComp, comOCMemo.Renglon_OC,'' as Producto_Id, comOCMemo.Detalle as DescripcionProductos,1 as Factor,
comOCCuerpo.Cantidad as CantidadOriginal,comOCCuerpo.Precio as PrecioOriginal,null as Deposito_Id,'' as DescripcionDepositos,
	comOCCuerpo.Cantidad, comOCCuerpo.Cantidad_Recibida, comOcCuerpo.Cantidad_Embarcada,
	comOCCuerpo.Cantidad_Facturada, comOCCuerpo.Fecha_Entrega, comOCCuerpo.Precio, comOCCuerpo.Pendiente,
	comOCCuerpo.Cantidad_Creditos, stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, conCentro1.Centro1_Id,
	conCentro1.Descripcion as DescripcionCentro1, conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2
FROM comOCMemo 
INNER JOIN comOCCuerpo  ON (comOCCuerpo.comOrdenComp = comOCMemo.comOrdenComp) AND (comOCCuerpo.Renglon_OC = comOCMemo.Renglon_OC)
LEFT JOIN conCuentas  ON (conCuentas.conCuentas = comOCMemo.Cuenta_Id)
INNER JOIN comOrdenComp  ON (comOrdenComp.comOrdenComp = comOCCuerpo.comOrdenComp)
LEFT JOIN stkUniMed  ON (stkUniMed.stkUniMed = comOCCuerpo.Medida_Id)
LEFT JOIN conCentro1  ON (conCentro1.conCentro1 = comOCCuerpo.Centro1_Id)
LEFT JOIN conCentro2  ON (conCentro2.conCentro2 = comOCCuerpo.Centro2_Id)
WHERE (comOCMemo.comOrdenComp = @pcomOrdenComp)
AND (comOCMemo.Renglon_OC = comOCMemo.Renglon_oc)
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comOrdenCompPrincipal.sql*/
drop procedure inf_comOrdenCompPrincipal
go
create procedure inf_comOrdenCompPrincipal
(
@Empresa_Id int,
@Segmento_Id VarChar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
set nocount on
DECLARE @pComOrdenComp as Int
SET @pComOrdenComp = (SELECT comOrdenComp 
	FROM comOCSegmentos WHERE 
	(Empresa_Id = @Empresa_Id) AND 
	(Segmento_Id = dbo.FuncFkgenSegmentos(@Segmento_Id)) AND 
	(Segmento1N = @Segmento1N) AND 
	(Segmento2N = @Segmento2N) AND 
	(Segmento3N = @Segmento3N) AND 
	(Segmento4N = @Segmento4N) AND 
	(Segmento1C = @Segmento1C) AND 
	(Segmento2C = @Segmento2C) AND 
	(Segmento3C = @Segmento3C) AND 
	(Segmento4C = @Segmento4C))
SELECT
ProvSuc.Descripcion as ProvinciaSucursal, PaisSuc.Descripcion as PaisSucursal, genSucursalesEmpr.Direccion as DireccionSucursal, 
genSucursalesEmpr.Localidad as LocalidadSucursal, genSucursalesEmpr.Telefono as TelefonoSucursal, genSucursalesEmpr.CodigoPostal as CPSucursal,
 genSucursalesEmpr.Descripcion as DescripcionSucursal, dbo.Segmento(comOCSegmentos.Segmento_Id,
	comOCSegmentos.Segmento1C,comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
	comOCSegmentos.Segmento1N,comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) as Segmento,
	comOrdenComp.comOrdenComp, comOCSegmentos.Empresa_Id, genSegmentos.Segmento_Id, 
	comOCSegmentos.Segmento1N,comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N, 
	comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C, comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
	comOrdenComp.Fecha, comProveedores.Proveed_Id, comProveedores.RazonSocial as DescripcionProveedores,
	comTipoPermi.TipoPermi_Id, comTipoPermi.Descripcion as DescripcionTipoPermi, 
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMonedas, comOrdenComp.Autorizo as NroUsuAuto,
	Autorizo.Usuario_Id as Autorizo, Autorizo.Apellido_y_Nombres as DescripcionUsuarioAutorizo, 
	comConPago.CondPago_Id, comConPago.Descripcion as DescripcionConPago,
	comOrdenComp.Impreso, comOrdenComp.Observaciones, 
	comOcEstados.Estado_Id, comOcEstados.Descripcion as DescripcionOcEstados,
	comOrdenComp.Saldo_Anticipo, comOrdenComp.ImporteImpuestos, 
	comOrdenComp.Saldo_NC, comOrdenComp.Cambio,
	genUsuarios2.Usuario_Id, genUsuarios2.Apellido_y_Nombres as DescripcionUsuario, 
	comOrdenComp.Posteado, comTipoPermi.TipoCuerpo, 
	ISNULL((SELECT SUM(Cantidad*Precio) from comOCCuerpo where
			comOCCuerpo.comOrdenComp = comOrdenComp.comOrdenComp),0) as SubTotal,
	comOrdenComp.ImporteImpuestos + ISNULL((SELECT SUM(Cantidad*Precio) from comOCCuerpo where
			comOCCuerpo.comOrdenComp = comOrdenComp.comOrdenComp),0) as Total, 
			comproveedores.Direccion1, comproveedores.Direccion2, comproveedores.Localidad, 
			comproveedores.CodigoPostal, genProvinciasP.Provincia_Id, 
			genProvinciasP.Descripcion DescripcionPrincia, 
			genPaisesP.Pais_Id, genPaisesP.Descripcion DescripcionPais, 
			comProveedores.Contacto, comProveedores.Telefono, 
			genEntidades.Cuit
FROM comOrdenComp 
LEFT JOIN comProveedores  ON (comProveedores.genEntidades = comOrdenComp.Proveed_Id)
LEFT JOIN comTipoPermi  ON (comTipoPermi.comTipoPermi = comOrdenComp.TipoPermi_Id)
LEFT JOIN genMonedas  ON (genMonedas.genMonedas = comOrdenComp.Moneda_Id)
left join comOCAutorizando on comOCAutorizando.comOrdenComp=comOrdenComp.comOrdenComp and comOCAutorizando.TipoApro='A'
LEFT JOIN genUsuarios  as Autorizo ON (Autorizo.genUsuarios = comOCAutorizando.Usuario_Id)
LEFT JOIN comConPago  ON (comConPago.comConPago = comOrdenComp.CondPago_Id)
INNER JOIN comOcEstados  ON (comOcEstados.Estado_Id = comOrdenComp.Estado_Id)
INNER JOIN genUsuarios genUsuarios2 ON (genUsuarios2.genUsuarios = comOrdenComp.Usuario_Id)
INNER JOIN comOcSegmentos ON comOcSegmentos.comOrdencomp = comOrdencomp.comOrdenComp
INNER JOIN genSegmentos  ON (genSegmentos.genSegmentos = comOCSegmentos.Segmento_Id)
inner join genEmpresas on comOCSegmentos.Empresa_Id = genEmpresas.genEmpresas
inner join genSucursalesEmpr on genUsuarios2.Sucursal=genSucursalesEmpr.genSucursalesEmpr
inner join genPaises on genEmpresas.Pais_Id=genPaises.genPaises
inner join genProvincias on genEmpresas.Provincia_Id=genProvincias.genProvincias
inner join genPaises PaisSuc on genSucursalesEmpr.Pais_Id=PaisSuc.genPaises
inner join genProvincias ProvSuc on genSucursalesEmpr.Provincia_Id=ProvSuc.genProvincias
inner join genPaises genPaisesp on comProveedores.Pais=genPaisesp.genPaises
inner join genProvincias genProvinciasP on comProveedores.Provincia_Id=genProvinciasP.genProvincias
inner join genEntidades on genEntidades.genEntidades =comProveedores.genEntidades
WHERE  
	comOrdenComp.comOrdenComp = @pComOrdenComp
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_comOrdenCompra.sql*/

-- INF_comOrdenCompra  1,'20200101','20211030',' ','zzz',' ','ZZZZ',1, 1
DROP PROCEDURE INF_comOrdenCompra 
GO
CREATE PROCEDURE INF_comOrdenCompra 
(
	@Empresa int,
	@FechaDesde DateTime , 
	@FechaHasta DateTime, 
	@ProveedDesde Char(15),
	@ProveedHasta Char(15),
	@ProductoDesde Char(25),
	@ProductoHasta Char(25),
	@Tipo Int,
	@Estado_id Int,
	@Centro1Desde VarChar(8),
	@Centro1Hasta VarChar(8),
	@Centro2Desde VarChar(8),
	@Centro2Hasta VarChar(8)
)
/* Tipo es 1 - Todas - 2 Solo Pendientes */
AS
SELECT comOrdenComp.comOrdenComp, dbo.Segmento(comOCSegmentos.Segmento_Id,
	comOCSegmentos.Segmento1C,comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
	comOCSegmentos.Segmento1N,comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) AS Segmento,
	comOCCuerpo.Renglon_OC,
	comOrdenComp.Fecha, comProveedores.Proveed_Id, comProveedores.RazonSocial,
	comTipoPermi.TipoPermi_Id, comTipoPermi.Descripcion as DescripcionTipoPermi,
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda,
	isnull(genUsuarios.Usuario_Id,'') as Autorizo, 
	comConPago.CondPago_Id, comConPago.Descripcion as DescripcionCondPago,
	ISNULL(comOrdenComp.Observaciones,'') Observaciones, comOrdenComp.Estado_Id, 
	comOrdenComp.ImporteImpuestos, comOrdenComp.Cambio, 
	Usuario.Usuario_Id as Ingreso,
	comOCCuerpo.Renglon_OC, comOCCuerpo.Cantidad, comOCCuerpo.Cantidad_Recibida, 
	comOCCuerpo.Cantidad_Facturada, comOCCuerpo.Cantidad_Creditos, 
	ISNULL((SELECT MAX(conAsientos.Fecha) 
		From conAsientos , stkMoviOC where
		conAsientos.conAsientos =stkMoviOC.stkMoviCabe and 
		stkMoviOC.comOrdenComp = comOrdencomp.comOrdenComp and 
		conAsientos.Anulado = 0 and conAsientos.Posteado = 1),comOCCuerpo.Fecha_Entrega) as Fecha_Entrega , 
	comOCCuerpo.Precio, Convert(Numeric(18,2),comOCCuerpo.Precio*
		CASE WHEN @Estado_Id = 4 THEN  comOCCuerpo.Cantidad_Recibida - comOCCuerpo.Cantidad_Facturada
		WHEN @Estado_Id = 7 then comOCCuerpo.Cantidad - comOCCuerpo.Cantidad_Recibida ELSE comOCCuerpo.Cantidad END) as SubTotal,
	ISNULL(conCentro1.Centro1_Id,'') AS Centro1_Id , ISNULL(conCentro1.Descripcion,'') as DescripcionC1,
	ISNULL(conCentro2.Centro2_Id,'') AS Centro2_Id , ISNULL(conCentro2.Descripcion,'') as DescripcionC2,
	ISNULL(stkUniMed.Medida_Id,'') AS Medida_Id, 
	ISNULL(stkProductos.Producto_Id,'') as Producto_id, 
	ISNULL(stkProductos.Descripcion, comOCMemo.Detalle) as DescripcionProducto, 
	ISNULL(conCuentasP.Cuenta_Id, conCuentasM.Cuenta_Id) as Cuenta_Id, 
	ISNULL(conCuentasP.Descripcion, conCuentasM.Descripcion) as DescripcionCuenta,
	ISNULL(stkDepositos.Deposito_Id,'') Deposito_id
FROM comOrdenComp 
	INNER Join comOCSegmentos ON comOrdenComp.comOrdenComp = comOCSegmentos.comOrdenComp
	INNER JOIN comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_Id
	INNER JOIN comTipoPermi ON comTipoPermi.comTipoPermi = comOrdenComp.TipoPermi_Id
	INNER JOIN genMonedas ON genMonedas.genMonedas = comOrdenComp.Moneda_Id
	LEFT JOIN genUsuarios ON genUsuarios.genUsuarios = comOrdenComp.Autorizo
	INNER JOIN comConPago ON comConPago.comConPago = comOrdenComp.CondPago_Id
	inner JOIN genUsuarios as Usuario ON Usuario.genUsuarios = comOrdenComp.Usuario_Id
	INNER JOIN comOCCuerpo ON comOCCuerpo.comOrdenComp = comOrdenComp.comOrdenComp
	LEFT JOIN conCentro1 ON conCentro1.conCentro1 = comOCCuerpo.Centro1_Id
	LEFT JOIN conCentro2 ON conCentro2.conCentro2 = comOCCuerpo.Centro2_Id
	LEFT JOIN stkUniMed ON stkUniMed.stkUniMed = comOCCuerpo.Medida_Id
	LEFT JOIN (comOCArticulo inner join stkProductos ON 
		comOCArticulo.Producto_Id= stkProductos.stkProductos
		INNER JOIN stkDepositos ON comOCArticulo.Deposito_Id = stkDepositos.stkDepositos
		LEFT JOIN conCuentas conCuentasP ON
		conCuentasP.conCuentas= stkProductos.CtaCompra) ON
		comOCArticulo.comOrdenComp = comOCCuerpo.comOrdenComp and
		comOCArticulo.Renglon_OC = comOCCuerpo.Renglon_OC
	LEFT JOIN (comOCMemo INNER JOIN conCuentas conCuentasM ON 
		comOCMemo.Cuenta_Id= conCuentasM.conCuentas) ON
		comOCMemo.comOrdenComp = comOCCuerpo.comOrdenComp and
		comOCMemo.Renglon_OC = comOCCuerpo.Renglon_OC
WHERE
	(comOCSegmentos.Empresa_Id = @Empresa) and
	(comordenComp.Fecha Between @FechaDesde and @FechaHasta) and
	(comProveedores.Proveed_Id Between @ProveedDesde And @ProveedHasta) and
	((stkProductos.Producto_Id Between @ProductoDesde And @ProductoHasta Or (@ProductoDesde = ' ' and  stkProductos.Producto_Id Is Null))) And
	((@Tipo = 1 or (comOrdenComp.Estado_Id IN ('A','P','E') And comOCCuerpo.Pendiente = 1)) AND
	/*Todos*/
	(@Estado_Id = '6' OR
	/*Pendientes de Autorizacion */
	(comOrdenComp.Estado_Id = 'P' AND @Estado_Id = 1) OR
	/*Autorizadas*/
	(comOrdenComp.Estado_Id = 'A' AND @Estado_Id = 2) OR
	/*Rechazadas*/
	(comOrdenComp.Estado_Id = 'R' AND @Estado_Id = 3) OR
	/*Pendiente de Factura */
	(comOCCuerpo.Cantidad_Recibida > comOCCuerpo.Cantidad_Facturada AND @Estado_Id = 4) OR
	-- Pendiente de Recibir
	(comOCCuerpo.Pendiente = 1  and comOCCuerpo.Cantidad > comOCCuerpo.Cantidad_Recibida AND @Estado_Id = 7) OR
	/*Terminadas*/
	(comOrdenComp.Estado_Id = 'T' AND @Estado_Id = 5))) and 
	ISNULL(conCentro1.Centro1_Id, ' ') BETWEEN @Centro1Desde AND @Centro1Hasta AND 
	ISNULL(conCentro2.Centro2_Id, ' ') BETWEEN @Centro2Desde AND @Centro2Hasta 
ORDER BY 1,3
GO
	




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comOrdenCompRI.sql*/
-- EXEC Inf_comOrdenCompRI ' ','zzz','20200101','20201130',' ','zz',' ','ZZZ',1  WITH RECOMPILE


DROP Procedure Inf_comOrdenCompRI
GO
CREATE Procedure Inf_comOrdenCompRI(

	@ProveedorDesde VarChar(15),
	@ProveedorHasta VarChar(15),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ProductoDesde VarChar(25), 
	@ProductoHasta VarChar(25),
	@SolicitoDesde VarChar(25),
	@SolicitoHasta VarChar(25),
	@Empresa_Id Int
)
AS
select dbo.Segmento( comOCSegmentos.Segmento_Id, comOCSegmentos.Segmento1C, 
comOCSegmentos.Segmento2C, comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N, 
comOCSegmentos.Segmento4N) as OrdenCompra, 
comOCCuerpo.Renglon_OC,
comOrdenComp.Fecha, comProveedores.Proveed_Id, comProveedores.RazonSocial, 
ISNULL(stkProductos.Producto_Id,'') AS Producto_Id, 
ISNULL(stkProductos.Descripcion, comOCMemo.Detalle) as Descripcion, 
comOCCuerpo.Cantidad, comOCCuerpo.Precio, 
Convert(Numeric(18,2), comOCCuerpo.Cantidad * comOCCuerpo.Precio) as SubTotal, 
dbo.Segmento( comRISegmento.Segmento_Id, comRISegmento.Segmento1C, 
comRISegmento.Segmento2C, comRISegmento.Segmento3C, comRISegmento.Segmento4C,
comRISegmento.Segmento1N, comRISegmento.Segmento2N, comRISegmento.Segmento3N, 
comRISegmento.Segmento4N) as Requicision, 
comRICuerpo.Cantidad as Pedidos, genUsuarios.Usuario_Id as Solicito
from comOCSegmentos 
INNER JOIN comOrdenComp ON comOCSegmentos.comOrdenComp = comOrdenComp.comOrdenComp
INNER JOIN comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_Id
INNER JOIN comOCCuerpo ON  comOCCuerpo.comOrdenComp = comOrdenComp.comOrdenComp
INNER JOIN comOCRI ON comOCRI.comOrdenComp =comOCCuerpo.comOrdenComp AND 
		comOCRI.Renglon_OC =comOCCuerpo.Renglon_OC
INNER JOIN comRICuerpo ON comRICuerpo.comReqInterno = comOCRI.comReqInterno and 
		comRICuerpo.Renglon_RI = comOCRI.Renglon_RI
LEFT JOIN (comOCArticulo  inner join stkProductos 
	ON stkProductos.stkProductos  = comOCArticulo.Producto_Id)
	ON comOCCuerpo.comOrdenComp = comOCArticulo.comOrdenComp AND 
			comOCCuerpo.Renglon_OC =  comOCArticulo.Renglon_OC
Left join comOCMemo ON comOCCuerpo.comOrdenComp = comOCMemo.comOrdenComp AND 
			comOCCuerpo.Renglon_OC =  comOCMemo.Renglon_OC
Inner join comRISegmento on comRISegmento.comReqInterno =comOCRI.comReqInterno
INNER JOIN comReqInterno ON comReqInterno.comReqInterno = comOCRI.comReqInterno
INNER JOIN genUsuarios ON genUsuarios.genUsuarios =comReqInterno.Usuario_Id
Where
	comProveedores.Proveed_Id BETWEEN @ProveedorDesde AND @ProveedorHasta AND 
	comOCSegmentos.Empresa_Id = @Empresa_Id AND 
	comOrdenComp.Fecha Between @FechaDesde and @FechaHasta and 
	comOrdenComp.Estado_Id != 'R' and 
	ISNULL(stkProductos.Producto_Id,' ') Between @ProductoDesde and @ProductoHasta and 
	genUsuarios.Usuario_Id Between @SolicitoDesde and @SolicitoHasta
ORDER BY 1,2
GO





Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_comPagosHabi.sql*/
DROP PROCEDURE INF_comPagosHabi
GO
CREATE PROCEDURE INF_comPagosHabi(
	@FechaHasta DateTime, 
	@ProveedorDesde VarChar(15),
	@ProveedorHasta VarChar(15),
	@Empresa Int
)

AS

SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,  genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,  
	genAsiSegmentos.Segmento4N) as Comprobante, 
	comPagosHabilitados.FechaHabilitacion, conAsientos.Fecha,
		genMonedas.Moneda_Id,
		comMovProv.Importe, comPagosHabilitados.ImporteHabilitado, 
		genAsiSegmentos.Segmento1N as Folio, 
		ISNULL((select min(genMovCuotas.FechaVencimiento) 
			from genMovCuotas
			where
				genMovCuotas.Asiento_Id = comMovProv.comMovProv and 
				genMovCuotas.Saldo > 0), conAsientos.Fecha) as FechaVencimiento
	FROM comMovProv INNER JOIN conAsientos ON 
		comMovProv.comMovProv = conAsientos.conAsientos
		INNER JOIN genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		INNER JOIN comPagosHabilitados ON
		comPagosHabilitados.comMovProv = comMovProv.comMovProv 
		INNER JOIn comProveedores ON
		comProveedores.genEntidades = comMovProv.Proveed_Id
		INNER JOIN genMonedas ON 
		conAsientos.Moneda_Id = genMonedas.genMonedas
		
	Where
			genAsiSegmentos.Empresa_Id = @Empresa and
			comPagosHabilitados.FechaHabilitacion <= @FechaHasta and 
			comPagosHabilitados.tesMovimientos IS NULL and 
			comProveedores.Proveed_Id BETWEEN @ProveedorDesde And  @ProveedorHasta AND 
			commovprov.Saldo > 0 
UNION ALL

SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial,
	'ANTICIPO' as Comprobante, 
		comPagosAnticipo.FechaPago, comPagosAnticipo.FechaPago AS Fecha,
		genMonedas.Moneda_Id,
		comPagosAnticipo.Importe, comPagosAnticipo.Importe ImporteHabilitado, 
		0 as Folio, comPagosAnticipo.FechaPago
	FROM comPagosAnticipo INNER JOIn comProveedores ON
		comProveedores.genEntidades = comPagosAnticipo.Proveed_Id
		INNER JOIN genMonedas ON 
		comPagosAnticipo.Moneda_Id = genMonedas.genMonedas
	Where
			comPagosAnticipo.Empresa_Id = @Empresa and
			comPagosAnticipo.FechaPago <= @FechaHasta and 
			comPagosAnticipo.tesMovimientos IS NULL AND 
			comProveedores.Proveed_Id BETWEEN @ProveedorDesde And  @ProveedorHasta
ORDER BY 1, 4, 3
GO	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_COMPOSFINANCIERA.sql*/
-- INF_COMPOSFINANCIERADETA ' ','zzzz','20210225',60,1, 1
-- INF_COMPOSFINANCIERA ' ','zzzz','20201201',60,1, 1
DROP PROCEDURE INF_COMPOSFINANCIERADETA
--ComPosfinancieraDeta
GO
CREATE PROCEDURE INF_COMPOSFINANCIERADETA(
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Fecha DateTime, 
	@Dias Int,
	@Columna int,
	@Empresa Int
)

AS
DECLARE @Fecha1 DateTime
DECLARE @Fecha2 DateTime
DECLARE @Fecha3 DateTime
DECLARE @Fecha4 DateTime
DECLARE @Fecha5 DateTime

SET @Fecha1 = dateadd(dd, @Dias*(1-@Columna), @Fecha)
SET @Fecha2 = dateadd(dd, @Dias*(2-@Columna), @Fecha)
SET @Fecha3 = dateadd(dd, @Dias*(3-@Columna), @Fecha)
SET @Fecha4 = dateadd(dd, @Dias*(4-@Columna), @Fecha)
SET @Fecha5 = dateadd(dd, @Dias*(5-@Columna), @Fecha)


SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	conAsientos.Cambio, 
	conAsientos.Fecha as FechaFactura, 
	genMovCuotas.FechaVencimiento, 
	comProveedores.RazonSocial, 
		dbo.Segmento(genAsiSegmentos.Segmento_id, 
			genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
			genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
			genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
			genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento, 
		CASE WHEN genMovCuotas.FechaVencimiento < @FECHA1 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Anterior ,
		CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA1 And
				genMovCuotas.FechaVencimiento < @FECHA2
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo01 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA2 And
				genMovCuotas.FechaVencimiento < @FECHA3
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo02 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA3 And
				genMovCuotas.FechaVencimiento < @FECHA4
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo03 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA4 And
				genMovCuotas.FechaVencimiento < @FECHA5
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo04 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA5
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Posterior ,

		(-comMovTipos.Signo*genMovCuotas.Saldo) AS Saldo, 
		@Fecha as Fecha,
		@Fecha1 as Fecha1,@Fecha2 as Fecha2, @Fecha3 as Fecha3,
		@Fecha4 as Fecha4, @Fecha5 as Fecha5
	
FROM comMovProv inner join comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genAsiSegmentos on 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN comMovTipos ON
	comMovTipos.TipoMov = comMovprov.TipoMov
	INNER JOIN (select genMovCuotas.Asiento_Id, 
		genMovCuotas.FechaVencimiento,
		genMovCuotas.Saldo + 
			isnull((select sum(genCancMov.Importe) from genCancMov , conAsientos where
				genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
				genCancMov.Asiento_Id_ap = conAsientos.conAsientos and
				conAsientos.Anulado = 0 and 
				genCancMov.FechaAplicacion > @Fecha),0) +
	isnull((select sum(genCancMov.Importe) from genCancMov , conAsientos where
				genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
				genCancMov.Asiento_Id = conAsientos.conAsientos and
				conAsientos.Anulado = 0 and 
				genCancMov.FechaAplicacion > @Fecha),0)
				 as Saldo
	 from genMovCuotas) genMovCuotas ON
	genMovCuotas.Asiento_Id = comMovprov.comMovprov
	WHERE
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		commovprov.FacturaTesoreria = 0 and 
		conAsientos.Fecha <= @Fecha and 
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		genMovCuotas.Saldo <> 0 and 
		conAsientos.Empresa_Id = @Empresa

ORDER BY 1,2,5,4

GO
DROP PROCEDURE INF_COMPOSFINANCIERA
--ComPosfinancieraDeta
GO

CREATE PROCEDURE INF_COMPOSFINANCIERA(
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Fecha DateTime, 
	@Dias Int,
	@Columna int,
	@Empresa Int
)
AS
DECLARE @Fecha1 DateTime
DECLARE @Fecha2 DateTime
DECLARE @Fecha3 DateTime
DECLARE @Fecha4 DateTime
DECLARE @Fecha5 DateTime

SET @Fecha1 = dateadd(dd, @Dias*(1-@Columna), @Fecha)
SET @Fecha2 = dateadd(dd, @Dias*(2-@Columna), @Fecha)
SET @Fecha3 = dateadd(dd, @Dias*(3-@Columna), @Fecha)
SET @Fecha4 = dateadd(dd, @Dias*(4-@Columna), @Fecha)
SET @Fecha5 = dateadd(dd, @Dias*(5-@Columna), @Fecha)


SELECT Proveed_Id, Moneda_Id,  RazonSocial, SUM(Anterior) as Anterior, 
	SUM(Periodo01) Periodo01, SUM(Periodo02) Periodo02, SUM(Periodo03) Periodo03,
	SUM(Periodo04) Periodo04, SUM(Posterior) Posterior, SUM(Saldo) Saldo,
	Fecha, Fecha1, Fecha2, Fecha3, Fecha4, Fecha5
FROM (
SELECT comProveedores.Proveed_id, genMonedas.Moneda_Id,	conAsientos.Cambio, conAsientos.Fecha AS FechaFactura, 
	genMovCuotas.FechaVencimiento, 
	comProveedores.RazonSocial, 
		dbo.SegmentoSP(genAsiSegmentos.Segmento_id, 
			genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
			genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
			genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
			genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento, 
		CASE WHEN genMovCuotas.FechaVencimiento < @FECHA1 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Anterior ,
		CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA1 And
				genMovCuotas.FechaVencimiento < @FECHA2
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo01 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA2 And
				genMovCuotas.FechaVencimiento < @FECHA3
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo02 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA3 And
				genMovCuotas.FechaVencimiento < @FECHA4
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo03 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA4 And
				genMovCuotas.FechaVencimiento < @FECHA5
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Periodo04 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA5
		 THEN
			(-comMovTipos.Signo*genMovCuotas.Saldo) ELSE 0 END as Posterior ,

		(-comMovTipos.Signo*genMovCuotas.Saldo) AS Saldo, 
		@Fecha as Fecha,
		@Fecha1 as Fecha1,@Fecha2 as Fecha2, @Fecha3 as Fecha3,
		@Fecha4 as Fecha4, @Fecha5 as Fecha5
	
FROM comMovProv inner join comProveedores ON
	comMovProv.Proveed_id = comProveedores.genEntidades
	INNER JOIN genProvincias ON 
	genProvincias.genProvincias = comProveedores.Provincia_Id
	INNER JOIN genPaises ON
	genPaises.genPaises = comProveedores.Pais
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genAsiSegmentos on 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN comMovTipos ON
	comMovTipos.TipoMov = comMovprov.TipoMov
	INNER JOIN (select genMovCuotas.Asiento_Id, 
		genMovCuotas.FechaVencimiento,
		genMovCuotas.Saldo + 
			isnull((select sum(genCancMov.Importe) from genCancMov , conAsientos where
				genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
				genCancMov.Asiento_Id_ap = conAsientos.conAsientos and
				conAsientos.Anulado = 0 and 
				genCancMov.FechaAplicacion > @Fecha),0) +
	isnull((select sum(genCancMov.Importe) from genCancMov , conAsientos where
				genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
				genCancMov.Asiento_Id = conAsientos.conAsientos and
				conAsientos.Anulado = 0 and 
				genCancMov.FechaAplicacion > @Fecha),0)
				 as Saldo
	 from genMovCuotas) genMovCuotas ON
	genMovCuotas.Asiento_Id = comMovprov.comMovprov
	WHERE
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and
		commovprov.FacturaTesoreria = 0 and 
		conAsientos.Fecha <= @Fecha and 
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta and 
		genMovCuotas.Saldo <> 0 and 
		conAsientos.Empresa_Id = @Empresa) AS XXX
GROUP BY Proveed_Id, Moneda_Id, RazonSocial, Fecha, Fecha1, 
	Fecha2, Fecha3, Fecha4, Fecha5
ORDER BY 2,1
GO


	


	


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ComprasEjercicio.sql*/
-- Inf_ComprasEjercicio 2019,1
DROP PROCEDURE Inf_ComprasEjercicio
GO
CREATE PROCEDURE Inf_ComprasEjercicio
(
	@Ejercicio Int,
	@Empresa_Id Int
)
as
select Ejercicio, Periodo, left(Mes,3) as Mes, sum(Cargos) as Cargos, sum(Abonos) as Abonos, 
	Sum(OtrosAbono - OtrosCargo) Otros , 
	sum(Abonos + OtrosAbono) Costo, SUM(DevCompras) AS DevCompras, 
	   SUM(Cargos - OtrosCargo - DevCompras) ComprasNetas, 
	   SUM(OtrosCargo) OtrosCargo , SUM(OtrosAbono) OtrosAbono,
	   ISNULL((SELECT SUM(Importe*(-2*Tipomov+3)) from 
		conasientos inner join conMovcont on 
		conasientos.conasientos = conMovcont.conasientos
		INNER JOIN conCuentas ON
			conCuentas.conCuentas = conmovcont.cuenta_id
		INNER JOIN conPeriodos ON 
			conAsientos.Fecha Between conPeriodos.Fecha_Desde AND conPeriodos.Fecha_Hasta
		Where
			conasientos.Especial = 'APE' and 
			conCuentas.tipo_id = 'MERCA' AND
			conPeriodos.Ejercicio = @Ejercicio),0) AS SaldoInicial


from (
SELECT conperiodos.Ejercicio, conperiodos.periodo, 
	DATENAME(MONTH,conPeriodos.Fecha_Hasta) Mes,
	SUM(CASE WHEN conCuentas.tipo_id ='MERCA' AND conMovCont.TipoMov= 1 THEN  conMovCont.importe ELSE 0 END) AS Cargos, 
	SUM(CASE WHEN conCuentas.tipo_id ='MERCA'  AND conMovCont.TipoMov = 2 THEN  conMovCont.importe ELSE 0 END) AS Abonos,
	SUM(CASE WHEN conCuentas.tipo_id NOT IN ('MERCA','COSTO','FACAR') AND conMovCont.TipoMov = 1  THEN conMovCont.Importe*(-2*conMovCont.Tipomov+3) ELSE 0 END)  as OtrosCargo,
	SUM(CASE WHEN conCuentas.tipo_id NOT IN ('MERCA','COSTO','FACAR') AND conMovCont.TipoMov = 2  THEN conMovCont.Importe*(-2*conMovCont.Tipomov+3) ELSE 0 END)  as OtrosAbono,
	SUM(CASE WHEN conCuentas.tipo_id = 'FACAR' AND conMovCont.Tipomov = 1 THEN conMovCont.Importe ELSE 0 END)  as DevCompras 
from conPeriodos inner join conAsientos ON 
	conAsientos.Fecha between conPeriodos.fecha_desde and conPeriodos.fecha_hasta 
	INNER JOIN conMovCont ON 
	conMovCont.conAsientos = conAsientos.conAsientos
	INNER JOIN conCuentas ON 		
	conCuentas.conCuentas = conMovCont.Cuenta_Id
	INNER JOIN stkMoviCabe ON
	stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
where
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conperiodos.Ejercicio = @Ejercicio
GROUP BY conperiodos.Ejercicio, conperiodos.periodo, conPeriodos.Fecha_Hasta
UNION ALL
SELECT conperiodos.Ejercicio, conperiodos.periodo, 
	DATENAME(MONTH,conPeriodos.Fecha_Hasta) Mes,
	SUM(CASE WHEN conCuentas.tipo_id ='MERCA' AND conMovCont.TipoMov= 1 THEN  conMovCont.importe ELSE 0 END) AS Cargos, 
	SUM(CASE WHEN conCuentas.tipo_id ='MERCA'  AND conMovCont.TipoMov = 2 THEN  conMovCont.importe ELSE 0 END) AS Abonos,
	0  as OtrosCargo,
	0 as OtrosAbono,
	0 as DevCompras 
from conPeriodos inner join conAsientos ON 
	conAsientos.Fecha between conPeriodos.fecha_desde and conPeriodos.fecha_hasta 
	INNER JOIN conMovCont ON 
	conMovCont.conAsientos = conAsientos.conAsientos
	INNER JOIN conCuentas ON 		
	conCuentas.conCuentas = conMovCont.Cuenta_Id
	
where
	NOT EXISTS(SELECT 1 FROM stkMoviCabe WHERE  stkMoviCabe.stkMoviCabe = conAsientos.conAsientos) AND
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conperiodos.Ejercicio = @Ejercicio
GROUP BY conperiodos.Ejercicio, conperiodos.periodo, conPeriodos.Fecha_Hasta

) as xxx
group by Ejercicio, Periodo, Mes
ORDER BY 1,2

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comPrevCompras.sql*/
-- Inf_comPrevCompras  ' ','ZZZ', '1','20180101','20180531', 1
DROP PROCEDURE Inf_comPrevCompras 
GO
CREATE PROCEDURE Inf_comPrevCompras 
(
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Deposito_Id VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa Int
)
AS

DECLARE @FechaDesde1 DateTime
DECLARE @FechaHasta1 DateTime
SET @FechaDesde1 = DATEADD(yy,-1, @FechaDesde)
SET @FechaHasta1 = DATEADD(yy,-1, @FechaHasta)

SELECT Producto_Id, Descripcion, Stock, Compras, Pedidos, 
	Stock + Compras - Pedidos as StockTotal,
	Consumos ConsumosPeriodo, MismoPerAnioAnt ConsumosAnioAnt,
	Maximo, Minimo, 
	case when Stock + Compras - Pedidos < Minimo then 
		case when Stock + Compras - Pedidos > Maximo
				then Minimo else Maximo end -(Stock + Compras - Pedidos)
			else 0 end NecesidadCompra, 
	case when Stock + Compras - Pedidos > Maximo then 
		(Stock + Compras - Pedidos)-Maximo  else 0 end Exceso 
		

FROM (

select stkProductos.Producto_Id, stkProductos.Descripcion, 
	ISNULL(stkMaxMin.Minimo,0) as Minimo, 
	ISNULL(stkMaxMin.Maximo,0) as Maximo, 
	ISNULL((SELECT sum(-stkMoviCuerpo.Cantidad * stkMoviCabe.Signo) 
		From stkMoviCabe INNER JOIN stkMoviCuerpo ON
		stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
		inner join conAsientos ON
		conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkSubTipoMov ON
		stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id
		INNER JOIN genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		Where
			stkSubTipoMov.Consumo = 1 and 
			conAsientos.Anulado = 0 and 
			genAsiSegmentos.Empresa_Id = @Empresa AND 
			conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta),0) Consumos,
	ISNULL((SELECT sum(-stkMoviCuerpo.Cantidad * stkMoviCabe.Signo) 
		From stkMoviCabe INNER JOIN stkMoviCuerpo ON
		stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND 
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
		inner join conAsientos ON
		conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkSubTipoMov ON
		stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id
		INNER JOIN genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		Where
			stkSubTipoMov.Consumo = 1 and 
			conAsientos.Anulado = 0 and 
			genAsiSegmentos.Empresa_Id = @Empresa AND 
			conAsientos.Fecha BETWEEN @FechaDesde1 and @FechaHasta1),0) MismoPerAnioAnt,
		ISNULL(stkExistencia.Cantidad,0) as Stock, 
		ISNULL((SELECT sum(comOCCuerpo.Cantidad -
		case when stkDepositos.Consignacion = 1 then 
		comOCCuerpo.CantidadConsignada else comOCCuerpo.Cantidad_Recibida end ) 
		From comOCCuerpo INNER JOIN comOrdenComp ON
		comOCCuerpo.comOrdenComp = comOrdenComp.comOrdenComp
		INNER JOIN comOCArticulo ON
		comOCCuerpo.comOrdenComp = comOCArticulo.comOrdenComp AND 
		comOCCuerpo.Renglon_OC = comOCArticulo.Renglon_OC and 
		comOCArticulo.Producto_Id = stkProductos.stkProductos
		INNER JOIN comOCSegmentos ON
		comOCSegmentos.comOrdenComp = comOCCuerpo.comOrdenComp 
		INNER JOIN stkDepositos ON stkDepositos.stkDepositos = comOCArticulo.Deposito_Id
		Where
			comOCSegmentos.Empresa_Id = @Empresa AND 
			comOrdenComp.Estado_Id in ('A','P') AND 
			comOCCuerpo.Cantidad >  case when stkDepositos.Consignacion = 1 then 
			comOCCuerpo.CantidadConsignada else comOCCuerpo.Cantidad_Recibida end  AND 
			comOCCuerpo.Pendiente = 1 ),0) Compras, 
	ISNULL((SELECT sum(venPediCuerpo.CantidadPedida-venPediCuerpo.CantidadRemitida) 
		From venPediCuerpo INNER JOIN venPedidos ON
		venPediCuerpo.venPedidos = venPedidos.venPedidos and 
		venPediCuerpo.Producto_Id = stkProductos.stkProductos
		INNER JOIN venPediSegmentos ON
		venPediSegmentos.venPedidos = venPedidos.venPedidos
		Where
			venPediSegmentos.Empresa_Id = @Empresa AND 
			venPedidos.Estado in ('A','P') AND 
			venPediCuerpo.CantidadPedida> venPediCuerpo.CantidadRemitida and 
			venPediCuerpo.Pendiente = 1 ),0) Pedidos

from stkProductos INNER JOIN stkDepositos ON
stkDepositos.Deposito_Id = @Deposito_id
LEFT JOIN stkMaxMin ON
stkMaxMin.Producto_Id = stkProductos.stkProductos AND 
stkMaxMin.Deposito_Id = stkDepositos.stkDepositos  AND
stkMaxMin.Empresa_Id = @Empresa
LEFT JOIN stkExistencia ON
stkExistencia.Producto_Id = stkProductos.stkProductos AND 
stkExistencia.Deposito_Id = stkDepositos.stkDepositos AND 
stkExistencia.Empresa_Id = @Empresa
Where
	stkProductos.Producto_Id BETWEEN @ProductoDesde And @ProductoHasta AND 
	stkProductos.Acepta_Compras = 1 and 
	stkProductos.Inactivo = 0 and 
	stkProductos.Posteado = 1 and 
	stkProductos.Clase IN ('E','-')) AS XXX
	
order by 1	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comProveListaNegra.sql*/
DROP PROCEDURE inf_comProveListaNegra
GO
CREATE PROCEDURE inf_comProveListaNegra
(
	@Empresa_Id Int
)

AS

select comProveedores.Proveed_Id, comProveedores.RazonSocial, genEntidades.Cuit, 
	comListaNegraMX.Situacion, comProveedores.Inactivo
From comProveedores 
	inner join genEntidades on comProveedores.genEntidades = genEntidades.genEntidades
	INNER JOIN comListaNegraMX ON comListaNegraMX.RFC =genEntidades.Cuit
WHERE
	ISNULL(comProveedores.Empresa_Id,@Empresa_Id)= @Empresa_Id
order by 1
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_comReqInterno.sql*/
DROP PROCEDURE [dbo].[inf_comReqInternoPrincipal]
GO

create procedure [dbo].[inf_comReqInternoPrincipal]
(
@Empresa_Id int,
@Segmento_Id VarChar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
set nocount on
DECLARE @pComReqInterno as Int
SET @pComReqInterno = (SELECT comReqInterno 
	FROM comRISegmento WHERE 
	(Empresa_Id = @Empresa_Id) AND 
	(Segmento_Id = dbo.FuncFkgenSegmentos(@Segmento_Id)) AND 
	(Segmento1N = @Segmento1N) AND 
	(Segmento2N = @Segmento2N) AND 
	(Segmento3N = @Segmento3N) AND 
	(Segmento4N = @Segmento4N) AND 
	(Segmento1C = @Segmento1C) AND 
	(Segmento2C = @Segmento2C) AND 
	(Segmento3C = @Segmento3C) AND 
	(Segmento4C = @Segmento4C))
    print @pcomReqInterno
SELECT
ProvSuc.Descripcion as ProvinciaSucursal, PaisSuc.Descripcion as PaisSucursal, genSucursalesEmpr.Direccion as DireccionSucursal, 
genSucursalesEmpr.Localidad as LocalidadSucursal, genSucursalesEmpr.Telefono as TelefonoSucursal, genSucursalesEmpr.CodigoPostal as CPSucursal,
 genSucursalesEmpr.Descripcion as DescripcionSucursal, dbo.Segmento(comRISegmento.Segmento_Id,
	comRISegmento.Segmento1C,comRISegmento.Segmento2C,
	comRISegmento.Segmento3C, comRISegmento.Segmento4C,
	comRISegmento.Segmento1N,comRISegmento.Segmento2N,
	comRISegmento.Segmento3N, comRISegmento.Segmento4N) as Segmento,
	comReqInterno.comReqInterno, comRISegmento.Empresa_Id, genSegmentos.Segmento_Id, 
	comRISegmento.Segmento1N,comRISegmento.Segmento2N, comRISegmento.Segmento3N, comRISegmento.Segmento4N, 
	comRISegmento.Segmento1C, comRISegmento.Segmento2C, comRISegmento.Segmento3C, comRISegmento.Segmento4C,
	comReqInterno.Fecha, comProveedores.Proveed_Id, comProveedores.RazonSocial as DescripcionProveedores,
	comTipoPermi.TipoPermi_Id, comTipoPermi.Descripcion as DescripcionTipoPermi, 

	Autorizo.Usuario_Id as Autorizo, Autorizo.Apellido_y_Nombres as DescripcionUsuarioAutorizo, 
	
	 comReqInterno.Observaciones, 
	comRIEstados.EstadoRI_Id, comRIEstados.Descripcion as DescripcionOcEstados,
	genUsuarios2.Usuario_Id, genUsuarios2.Apellido_y_Nombres as DescripcionUsuario, 
	comTipoPermi.TipoCuerpo, 
	ISNULL((SELECT SUM(Cantidad*Precio) from comRICuerpo where
			comRICuerpo.comReqInterno = comReqInterno.comReqInterno),0) as SubTotal,
	ISNULL((SELECT SUM(Cantidad*Precio) from comRICuerpo where
			comRICuerpo.comReqInterno = comReqInterno.comReqInterno),0) as Total
FROM comReqInterno 
LEFT JOIN comProveedores  ON (comProveedores.genEntidades = comReqInterno.Proveed_Id)
LEFT JOIN comTipoPermi  ON (comTipoPermi.comTipoPermi = comReqInterno.TipoPermi_Id)
inner join comRIAutorizando on comRIAutorizando.comReqInterno=comReqInterno.comReqInterno
LEFT JOIN genUsuarios  as Autorizo ON (Autorizo.genUsuarios = comRIAutorizando.Usuario_Id)

INNER JOIN comRIEstados  ON (comRIEstados.EstadoRI_Id = comReqInterno.EstadoRI_Id)
INNER JOIN genUsuarios genUsuarios2 ON (genUsuarios2.genUsuarios = comReqInterno.Usuario_Id)
INNER JOIN comRISegmento ON comRISegmento.comReqInterno = comReqInterno.comReqInterno
INNER JOIN genSegmentos  ON (genSegmentos.genSegmentos = comRISegmento.Segmento_Id)
inner join genEmpresas on comRISegmento.Empresa_Id = genEmpresas.genEmpresas
inner join genSucursalesEmpr on genUsuarios2.Sucursal=genSucursalesEmpr.genSucursalesEmpr
inner join genPaises on genEmpresas.Pais_Id=genPaises.genPaises
inner join genProvincias on genEmpresas.Provincia_Id=genProvincias.genProvincias
inner join genPaises PaisSuc on genSucursalesEmpr.Pais_Id=PaisSuc.genPaises
inner join genProvincias ProvSuc on genSucursalesEmpr.Provincia_Id=ProvSuc.genProvincias
WHERE  
	comReqInterno.comReqInterno = @pComReqInterno
GO



DROP PROCEDURE [dbo].[inf_comReqInternoCuerpo]
GO

create procedure [dbo].[inf_comReqInternoCuerpo]
(
@Empresa_Id int,
@Segmento_Id VarChar(10),
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C varchar(20),
@Segmento2C varchar(20),
@Segmento3C varchar(20),
@Segmento4C varchar(20)
)
as
set nocount on
DECLARE @pComReqInterno as Int
SET @pComReqInterno = (SELECT comReqInterno 
	FROM comRISegmento WHERE 
	(Empresa_Id = @Empresa_Id) AND 
	(Segmento_Id = dbo.FuncFkgenSegmentos(@Segmento_Id)) AND 
	(Segmento1N = @Segmento1N) AND 
	(Segmento2N = @Segmento2N) AND 
	(Segmento3N = @Segmento3N) AND 
	(Segmento4N = @Segmento4N) AND 
	(Segmento1C = @Segmento1C) AND 
	(Segmento2C = @Segmento2C) AND 
	(Segmento3C = @Segmento3C) AND 
	(Segmento4C = @Segmento4C))
SELECT comRIArticulo.comReqInterno, comRIArticulo.Renglon_RI, stkProductos.Producto_Id,
	stkProductos.Descripcion as DescripcionProductos, comRIArticulo.Factor, comRIArticulo.CantidadOriginal, comRIArticulo.PrecioOriginal,
	stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepositos,
	comRICuerpo.Cantidad, 
	comRICuerpo.FechaNecesidad, comRICuerpo.Precio, comRICuerpo.Pendiente,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, conCentro1.Centro1_Id,
	conCentro1.Descripcion as DescripcionCentro1, conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2
FROM comRIArticulo 
INNER JOIN comRICuerpo  ON (comRICuerpo.comReqInterno = comRIArticulo.comReqInterno) AND (comRICuerpo.Renglon_RI = comRIArticulo.Renglon_RI)
LEFT JOIN stkProductos  ON (stkProductos.stkProductos = comRIArticulo.Producto_Id)
LEFT JOIN stkDepositos  ON (stkDepositos.stkDepositos = comRIArticulo.Deposito_Id)
INNER JOIN comReqInterno  ON (comReqInterno.comReqInterno = comRICuerpo.comReqInterno)
LEFT JOIN stkUniMed  ON (stkUniMed.stkUniMed = comRICuerpo.Medida_Id)
LEFT JOIN conCentro1  ON (conCentro1.conCentro1 = comRICuerpo.Centro1_Id)
LEFT JOIN conCentro2  ON (conCentro2.conCentro2 = comRICuerpo.Centro2_Id)
where (comRIArticulo.comReqInterno = @pComReqInterno)
AND (comRIArticulo.Renglon_RI = comRIArticulo.Renglon_RI)
union
SELECT comRIMemo.comReqInterno, comRIMemo.Renglon_RI,'' as Producto_Id, comRIMemo.Detalle as DescripcionProductos,1 as Factor,
comRICuerpo.Cantidad as CantidadOriginal,comRICuerpo.Precio as PrecioOriginal,null as Deposito_Id,'' as DescripcionDepositos,
	comRICuerpo.Cantidad, 
	comRICuerpo.FechaNecesidad, comRICuerpo.Precio, comRICuerpo.Pendiente,
	stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, conCentro1.Centro1_Id,
	conCentro1.Descripcion as DescripcionCentro1, conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2
FROM comRIMemo 
INNER JOIN comRICuerpo  ON (comRICuerpo.comReqInterno = comRIMemo.comReqInterno) AND (comRICuerpo.Renglon_RI = comRIMemo.Renglon_RI)
LEFT JOIN conCuentas  ON (conCuentas.conCuentas = comRICuerpo.Cuenta_Id)
INNER JOIN comReqInterno  ON (comReqInterno.comReqInterno = comRICuerpo.comReqInterno)
LEFT JOIN stkUniMed  ON (stkUniMed.stkUniMed = comRICuerpo.Medida_Id)
LEFT JOIN conCentro1  ON (conCentro1.conCentro1 = comRICuerpo.Centro1_Id)
LEFT JOIN conCentro2  ON (conCentro2.conCentro2 = comRICuerpo.Centro2_Id)
WHERE (comRIMemo.comReqInterno = @pComReqInterno)
AND (comRIMemo.Renglon_RI = comRIMemo.Renglon_RI)
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comReqInternoDet.sql*/
-- Inf_comReqInternoDet '20200101','20200131',0,' ','ZZZ',' ','ZZZ',1

DROP PROCEDURE Inf_comReqInternoDet
GO
CREATE PROCEDURE Inf_comReqInternoDet
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime,
	@Pendiente Bit, 
	@UsuarioDesde VarChar(25),
	@UsuarioHasta VarChar(25),
	@TipoPermiDesde VarChar(5),
	@TipoPermiHasta VarChar(5),
	@Empresa_Id Int
	
)
AS

Select comReqInterno.comReqInterno, comReqInterno.Fecha, 
	dbo.Segmento(comRISegmento.Segmento_Id, comRISegmento.Segmento1C, 
	comRISegmento.Segmento2C, comRISegmento.Segmento3C, comRISegmento.Segmento4C,
	comRISegmento.Segmento1N, comRISegmento.Segmento2N, comRISegmento.Segmento3N,
	comRISegmento.Segmento4N) as Segmento, 
		genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as DescripcionUsuaurio,
		comTipoPermiRI.TipoPermiRI_Id, comTipoPermiRI.Descripcion  as DescripcionTipoPermi,
		comReqInterno.EstadoRI_Id, comTipoPermiRI.GeneraOC, 
		stkProductos.Producto_Id, stkProductos.Descripcion, 
		comRiCuerpo.Cantidad, comRiCuerpo.CantidadRecibida, 
		comRiCuerpo.Precio, 	comRiCuerpo.Pendiente,
			conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta ,
			ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id , 
			ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id
from comReqInterno INNER join comRISegmento ON
	comReqInterno.comReqInterno = comRISegmento.comReqInterno
	inner join comTipoPermiRI ON
	comTipoPermiRI.comTipoPermiRI = comReqInterno.TipoPermi_Id
	INNER join genUsuarios ON
	genUsuarios.genUsuarios = comReqInterno.Usuario_Id
	inner join comRICuerpo ON
	comRICuerpo.comReqInterno = comReqInterno.comReqInterno  
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = comRICuerpo.Medida_Id
	inner join comRiArticulo ON
	comRiArticulo.comReqInterno = comRICuerpo.comReqInterno  and 
	comRiArticulo.Renglon_RI = comRICuerpo.Renglon_RI
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = comRiArticulo.Producto_Id
	INNER JOIN conCuentas ON
	conCuentas.conCuentas = comRICuerpo.Cuenta_Id
	LEFT JOIN conCentro1 ON
	conCentro1.conCentro1 = comRICuerpo.Centro1_Id
	LEFT JOIN conCentro2 ON
	conCentro2.conCentro2 = comRICuerpo.Centro2_Id
WHERE
	comRISegmento.Empresa_Id = @Empresa_Id and 
	(@Pendiente = 1  or comReqInterno.Fecha BETWEEN @FechaDesde And @FechaHasta) and		
	genUsuarios.Usuario_Id BETWEEN @UsuarioDesde and @UsuarioHasta and 
	(@Pendiente = 0 or (comReqInterno.EstadoRI_Id IN ('A','P') AND 
		comRiCuerpo.Pendiente = 1)) and 
	comTipoPermiRI.TipoPermiRI_Id BETWEEN @TipoPermiDesde and @TipoPermiHasta 
	
UNION ALL
Select comReqInterno.comReqInterno, comReqInterno.Fecha, 
	dbo.Segmento(comRISegmento.Segmento_Id, comRISegmento.Segmento1C, 
	comRISegmento.Segmento2C, comRISegmento.Segmento3C, comRISegmento.Segmento4C,
	comRISegmento.Segmento1N, comRISegmento.Segmento2N, comRISegmento.Segmento3N,
	comRISegmento.Segmento4N) as Segmento, 
		genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as DescripcionUsuaurio,
		comTipoPermiRI.TipoPermiRI_Id, comTipoPermiRI.Descripcion  as DescripcionTipoPermi,
		comReqInterno.EstadoRI_Id, comTipoPermiRI.GeneraOC, 
		' ' Producto_Id, comRiMemo.Detalle as Descripcion, 
		comRiCuerpo.Cantidad, comRiCuerpo.CantidadRecibida, 
		comRiCuerpo.Precio, 	comRiCuerpo.Pendiente, 
		conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta ,
		ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id , 
		ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id
from comReqInterno INNER join comRISegmento ON
	comReqInterno.comReqInterno = comRISegmento.comReqInterno
	inner join comTipoPermiRI ON
	comTipoPermiRI.comTipoPermiRI = comReqInterno.TipoPermi_Id
	INNER join genUsuarios ON
	genUsuarios.genUsuarios = comReqInterno.Usuario_Id
	inner join comRICuerpo ON
	comRICuerpo.comReqInterno = comReqInterno.comReqInterno  
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = comRICuerpo.Medida_Id
	inner join comRiMemo ON
	comRiMemo.comReqInterno = comRICuerpo.comReqInterno  and 
	comRiMemo.Renglon_RI = comRICuerpo.Renglon_RI
	INNER JOIN conCuentas ON
	conCuentas.conCuentas = comRICuerpo.Cuenta_Id
	LEFT JOIN conCentro1 ON
	conCentro1.conCentro1 = comRICuerpo.Centro1_Id
	LEFT JOIN conCentro2 ON
	conCentro2.conCentro2 = comRICuerpo.Centro2_Id
WHERE
	comRISegmento.Empresa_Id = @Empresa_Id and 
	(@Pendiente = 1  or comReqInterno.Fecha BETWEEN @FechaDesde And @FechaHasta) and		
	genUsuarios.Usuario_Id BETWEEN @UsuarioDesde and @UsuarioHasta and 
	(@Pendiente = 0 or (comReqInterno.EstadoRI_Id IN ('A','P') AND 
		comRiCuerpo.Pendiente = 1)) and 
	comTipoPermiRI.TipoPermiRI_Id BETWEEN @TipoPermiDesde and @TipoPermiHasta 
ORDER BY 2,1		 



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_comSaldoXCuenta.sql*/
-- Inf_comSaldoXCuenta '20200331',1
-- Inf_comSaldoXCuenta '20191231',1
DROP PROCEDURE Inf_comSaldoXCuenta
GO
CREATE PROCEDURE Inf_comSaldoXCuenta @FechaHasta DateTime, @Empresa int
AS
SELECT  Cuenta_Id, Descripcion, Proveed_id, RazonSocial, 
	SUM(Monto) as Monto
FROM (

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,1 as Origen
FROm comMovProv INNER JOIN conAsientos ON
comMovProv.comMovProv = conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
Where
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
union all

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,2
FROm genCancmov INNER JOIN conAsientos ON
genCancmov.AsientoApli_id = conAsientos.conAsientos
INNER JOIN  comMovProv ON  
comMovProv.comMovProv = genCancmov.Asiento_id
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
Where
NOT EXISTS(SELECT 1 FROM genCancMovApliImpor where
	genCancMovApliImpor.conAsientos = genCancMov.Asiento_Id) and 
NOT EXISTS(SELECT 1 FROM genCancMovApliImpor where
	genCancMovApliImpor.conAsientos = genCancMov.Asiento_Id_ap) and 
gencancmov.Importacion = 0 AND 
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0

UNION ALL

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,3
FROm genCancmov INNER JOIN conAsientos ON
genCancmov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN  comMovProv ON  
comMovProv.comMovProv = genCancmov.Asiento_id
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
Where
genCancMov.Importacion = 0 and
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,4
FROm genCancmov INNER JOIN conAsientos ON
genCancmov.AsientoApli_id = conAsientos.conAsientos
INNER JOIN  comMovProv ON  
comMovProv.comMovProv = genCancmov.Asiento_id
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 0
Where
genCancMov.Importacion = 1 and
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,5
FROm genCancmov INNER JOIN conAsientos ON
genCancmov.AsientoApli_id = conAsientos.conAsientos
INNER JOIN  comMovProv ON  
comMovProv.comMovProv = genCancmov.Asiento_id_Ap
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 1
Where
genCancMov.Importacion = 1 and
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,6
FROm genCancmov INNER JOIN conAsientos ON
genCancmov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN  comMovProv ON  
comMovProv.comMovProv = genCancmov.Asiento_id
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 0
Where
genCancMov.Importacion = 1 and
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,7
FROm genCancmov INNER JOIN conAsientos ON
genCancmov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN  comMovProv ON  
comMovProv.comMovProv = genCancmov.Asiento_id_Ap
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON
comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 1
Where
genCancMov.Importacion = 1 and
comMovProv.FacturaTesoreria = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
	,8
FROm comAsiCierreCr INNER JOIN conAsientos ON
comAsiCierreCr.Asiento_Id = conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = comAsiCierreCr.Asiento_Id AND 
conMovCont.Renglon = comAsiCierreCr.conRenglon
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comAsiCierreCr.Proveed_id 
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('PRO', 'ANTPR')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial
having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
) AS XXX
GROUP BY Cuenta_Id, Descripcion, Proveed_id, RazonSocial
HAVING SUM(Monto) <> 0

ORDER BY 1,4
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ComSubDiario.sql*/
-- INF_ComSubDiario '20170101','20170831',1,1
DROP PROCEDURE INF_ComSubDiario
GO
CREATE PROCEDURE INF_ComSubDiario @FechaDesde DateTime, @FechaHasta DateTime, @Empresa int, 
	@IncluPagos Bit
AS
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comMovProv 
INNER JOIN conAsientos ON comMovProv.comMovProv = conAsientos.conAsientos
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluPagos=1 or comMovTipos.Tipomov NOT IN ('P','C')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Embarque' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comEmbarques 
INNER JOIN conAsientos ON comEmbarques.comEmbarques = conAsientos.conAsientos
INNER JOIN (select  comEmbCuerpo.comEmbarques, max(comOrdenComp.Proveed_Id) Proveed_Id
	from  comEmbCuerpo, comOrdenComp 
	Where
	comOrdenComp.comOrdenComp = comEmbCuerpo.comOrdenComp
	GROUP BY comEmbCuerpo.comEmbarques ) AS comEmbCuerpo ON comEmbCuerpo.comEmbarques = comEmbarques.comEmbarques
INNER JOIN comProveedores ON comProveedores.genEntidades = comEmbCuerpo.Proveed_Id
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 

Union All
-- Recepciones de OC memo --
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Recepcion OC' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comOcReceCuerpo 
INNER JOIN conAsientos ON comOcReceCuerpo.comOcRecepcion = conAsientos.conAsientos
Inner Join comOrdenComp On comOrdenComp.comOrdenComp = comOcReceCuerpo.comOrdenComp
INNER JOIN comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
union all
-- Cierres --
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Cierres' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comAsiCierreCr INNER JOIN conAsientos ON
comAsiCierreCr.Asiento_Id = conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = comAsiCierreCr.Asiento_Id AND 
conMovCont.Renglon = comAsiCierreCr.conRenglon
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comAsiCierreCr.Proveed_id 
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
left join conCentro1 ON conCentro1.conCentro1 = conmovcont.Centro1_Id
left join conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro1_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 

	UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Cierres' Descripcion, 
	' ' Proveed_id, ' ' RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comAsiCierre INNER JOIN conAsientos ON
	comAsiCierre.Asiento_id	= conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
left join conCentro1 ON conCentro1.conCentro1 = conmovcont.Centro1_Id
left join conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro1_Id
Where
	Not exists(select 1 from comAsiCierreCr where
		comAsiCierreCr.Asiento_Id = conMovCont.conAsientos and 
		comAsiCierreCr.conRenglon = conMovCont.Renglon) and
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 

UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Aplicaciones' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
Where
	genCancMov.Importacion = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
UNION ALL
--- APLICACIONES IMPORTACION
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Aplicaciones Import' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 0
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Aplicaciones Import' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id_Ap
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 1
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
-- APLICACIONES IMPORTACION DIF EN CAMBIOS
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Aplicaciones Import' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 0
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Aplicaciones Import' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id_Ap
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 1
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 

UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Aplicaciones' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
Where
	genCancMov.Importacion = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 

ORDER BY 1,2,3
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ComSubMayor.sql*/
-- Inf_ComSubMayor '20170101','20170831',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 1,1
DROP PROCEDURE Inf_ComSubMayor
GO

CREATE PROCEDURE [dbo].[Inf_ComSubMayor] @FechaDesde DateTime, @FechaHasta DateTime, 
	@CuentaDesde VarChar(25),@CuentaHasta VarChar(25),
	@Centro1Desde VarChar(8),@Centro1Hasta VarChar(8),
	@Centro2Desde VarChar(8),@Centro2Hasta VarChar(8),
	@ProveedDesde VarChar(15), @ProveedHasta VarChar(15), 
	@Empresa int, 
	@IncluPagos Bit
AS
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comMovProv 
INNER JOIN conAsientos ON comMovProv.comMovProv = conAsientos.conAsientos
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluPagos=1 or comMovTipos.Tipomov NOT IN ('P','C')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
Where
	genCancMov.Importacion = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
Where
	genCancMov.Importacion = 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 

UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Embarque' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comEmbarques 
INNER JOIN conAsientos ON comEmbarques.comEmbarques = conAsientos.conAsientos
INNER JOIN (select  comEmbCuerpo.comEmbarques, max(comOrdenComp.Proveed_Id) Proveed_Id
	from  comEmbCuerpo, comOrdenComp 
	Where
	comOrdenComp.comOrdenComp = comEmbCuerpo.comOrdenComp
	GROUP BY comEmbCuerpo.comEmbarques ) AS comEmbCuerpo ON comEmbCuerpo.comEmbarques = comEmbarques.comEmbarques
INNER JOIN comProveedores ON comProveedores.genEntidades = comEmbCuerpo.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 
-- IMPORTACIONES APLICACION
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 0
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 

UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id_Ap
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 1
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 
-- DIF CAMBIO IMPORTACIONES
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 0
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 

UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	comMovTipos.Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN comMovProv ON comMovProv.comMovProv = genCancMov.Asiento_Id_Ap
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN genCancMovApliImpor ON 
genCancMovApliImpor.conAsientos = conmovcont.conAsientos and 
genCancMovApliImpor.Renglon = conmovcont.Renglon and
genCancMovApliImpor.EsDelAp = 1
Where
	genCancMov.Importacion = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta 
Union All
-- Recepciones OC --
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Recepcion OC' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comOcReceCuerpo 
INNER JOIN conAsientos ON comOcReceCuerpo.comOcRecepcion = conAsientos.conAsientos
Inner Join comOrdenComp On comOrdenComp.comOrdenComp = comOcReceCuerpo.comOrdenComp
INNER JOIN comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_id 
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos And conMovCont.Renglon = comOcReceCuerpo.conRenglon
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Recepcion OC' Descripcion, 
	comProveedores.Proveed_id, comProveedores.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm comAsiCierreCr INNER JOIN conAsientos ON
comAsiCierreCr.Asiento_Id = conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = comAsiCierreCr.Asiento_Id AND 
conMovCont.Renglon = comAsiCierreCr.conRenglon
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN comProveedores ON
comProveedores.genEntidades = comAsiCierreCr.Proveed_id 
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
left join conCentro1 ON conCentro1.conCentro1 = conmovcont.Centro1_Id
left join conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro1_Id

Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	comProveedores.Proveed_id BETWEEN @ProveedDesde AND @ProveedHasta



ORDER BY 1,3,4,5

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_comUltimasCompras.sql*/
--INF_comUltimasCompras 1, '20100101','20171231',' ','ZZZ',' ','ZZZ'
DROP PROCEDURE INF_comUltimasCompras
GO
CREATE PROCEDURE INF_comUltimasCompras 
(
	@Empresa int,
	@FechaDesde DateTime , 
	@FechaHasta DateTime, 
	@ProveedDesde Char(15),
	@ProveedHasta Char(15),
	@ProductoDesde Char(25),
	@ProductoHasta Char(25)
)
AS

SELECT  stkProductos.Producto_Id, stkProductos.Descripcion, conAsientos.Fecha,
	'OC' Tipo,
	dbo.Segmento(comOCSegmentos.Segmento_Id,
	comOCSegmentos.Segmento1C,comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
	comOCSegmentos.Segmento1N,comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N) as Segmento, 
	comProveedores.Proveed_Id, comProveedores.RazonSocial,
	comOCCuerpo.Precio, genMonedas.Moneda_Id, 
	stkMoviCuerpo.CostoUnitario, stkMoviCuerpo.Cantidad, 
	stkUniMed.Medida_Id
From stkMoviCabe
INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
INNER JOIN stkProductos ON stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
INNER JOIN stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
inner join conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
INNER JOIN stkMoviOC ON stkMoviOC.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND stkMoviOC.Renglon = stkMoviCuerpo.Renglon
INNER JOIN comOrdenComp ON comOrdenComp.comOrdenComp = stkMoviOC.comOrdenComp
INNER JOIN comOCSegmentos ON comOCSegmentos.comOrdenComp = comOrdenComp.comOrdenComp
INNER JOIN comOCCuerpo ON comOCCuerpo.comOrdenComp = stkMoviOC.comOrdenComp AND comOCCuerpo.Renglon_OC = stkMoviOC.Renglon_OC
INNER JOIN genMonedas ON genMonedas.genMonedas = comOrdenComp.Moneda_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_Id
Where
	stkMoviCabe.Signo = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between  @FechaDesde And @FechaHasta and
	comProveedores.Proveed_Id between @ProveedDesde And @ProveedHasta and
	stkproductos.Producto_Id BETWEEN @ProductoDesde And @ProductoHasta


UNION ALL
SELECT  stkProductos.Producto_Id, stkProductos.Descripcion, conAsientos.Fecha,
	'FD' Tipo,
	dbo.Segmento(genAsiSegmentos.Segmento_Id,
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Segmento, 
	comProveedores.Proveed_Id, comProveedores.RazonSocial,
	stkMoviCuerpo.PrecioOriginal, genMonedas.Moneda_Id, 
	stkMoviCuerpo.CostoUnitario, stkMoviCuerpo.Cantidad, 
	stkUniMed.Medida_Id
From stkMoviCabe
INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
INNER JOIN stkProductos ON stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
INNER JOIN stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
inner join conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
INNER JOIN stkMoviProv ON stkMoviProv.stkMoviCabe = stkMoviCuerpo.stkMoviCabe 
INNER JOIN commovprov ON commovprov.commovprov = stkMoviCabe.stkMoviCabe
INNER JOIN genAsiSegmentos ON commovprov.comMovProv = genAsiSegmentos.Asiento_Id
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_Id
Where
	stkMoviCabe.Signo = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between  @FechaDesde And @FechaHasta and
	comProveedores.Proveed_Id between @ProveedDesde And @ProveedHasta and
	stkproductos.Producto_Id BETWEEN @ProductoDesde And @ProductoHasta


GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_conAsientos.sql*/
drop procedure inf_conAsientosPrincipal
go
create procedure inf_conAsientosPrincipal
(
@pEmpresa_id int, 
@pSegmento_id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS
SET NOCOUNT ON 

Declare @pIdentity bigint= (select Asiento_id from genAsiSegmentos
	Where
	genAsiSegmentos.Empresa_id = @pEmpresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@pSegmento_id) and 
	genAsiSegmentos.Segmento1N = @pSegmento1N and 
	genAsiSegmentos.Segmento2N = @pSegmento2N and 
	genAsiSegmentos.Segmento3N = @pSegmento3N and 
	genAsiSegmentos.Segmento4N = @pSegmento4N and 
	genAsiSegmentos.Segmento1C = @pSegmento1C and 
	genAsiSegmentos.Segmento2C = @pSegmento2C and 
	genAsiSegmentos.Segmento3C = @pSegmento3C and 
	genAsiSegmentos.Segmento4C = @pSegmento4C)

select dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS SegmentoSTR, conAsientosCon.LeyendaLibroDiario,
conAsientos.Fecha, conAsientos.Observaciones, 
genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres, 
genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion as DescripcionSucursal, 
conAsientos.FechaRegistro, conAsientos.Posteado, conAsientos.Anulado,  conAsientos.Cambio
from conAsientos 
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id=conAsientos.conAsientos
left join conAsientosCon on conAsientos.conAsientos= conAsientosCon.conAsientos
inner join genUsuarios ON 
genUsuarios.genUsuarios = conAsientos.Usuario_Id
left join genSucursalesEmpr ON 
genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
where @pIdentity=conAsientos.conAsientos

go
drop procedure inf_conAsientosCuerpo
go
create procedure inf_conAsientosCuerpo
(
@pEmpresa_id int, 
@pSegmento_id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS
SET NOCOUNT ON 

Declare @pIdentity bigint= (select Asiento_id from genAsiSegmentos
	Where
	genAsiSegmentos.Empresa_id = @pEmpresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@pSegmento_id) and 
	genAsiSegmentos.Segmento1N = @pSegmento1N and 
	genAsiSegmentos.Segmento2N = @pSegmento2N and 
	genAsiSegmentos.Segmento3N = @pSegmento3N and 
	genAsiSegmentos.Segmento4N = @pSegmento4N and 
	genAsiSegmentos.Segmento1C = @pSegmento1C and 
	genAsiSegmentos.Segmento2C = @pSegmento2C and 
	genAsiSegmentos.Segmento3C = @pSegmento3C and 
	genAsiSegmentos.Segmento4C = @pSegmento4C)


select conCuentas.Cuenta_Id, conCuentas.Descripcion, conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1, conCentro2.Centro2_Id,conCentro2.Descripcion as DescripcionCentro2, 
case when TipoMov=1 then conMovContCon.Importe else 0 end as Cargo, case when TipoMov=2 then conMovContCon.Importe else 0 end as Abono
 from conMovContCon
inner join conAsientos on conAsientos.conAsientos=conMovContCon.conAsientos
left join conCuentas on conCuentas.conCuentas=conMovContCon.Cuenta_Id
left join conCentro1 on conCentro1.conCentro1=conMovContCon.Centro1_Id
left join conCentro2 on conCentro2.conCentro2=conMovContCon.Centro2_Id
where @pIdentity=conAsientos.conAsientos
	
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_conBalanzaXCentro.sql*/
-- inf_conBalanzaXCentro '20210901','20210930', ' ','ZZZ',' ','ZZZ','4','9z',1, 1, 'es-MX'
-- inf_conBalanzaXCentro '20180101','20181031', ' ','ZZZ',' ','ZZZ','1140-101','1140-101',1, 0, 'en-US'

-- inf_conBalanzaXCentro '20180101','20181031', ' ','ZZZ',' ','ZZZ','1140-102','1140-102',1, 0
drop procedure inf_conBalanzaXCentro
go
create procedure inf_conBalanzaXCentro
(
@FechaDesde datetime,
@FechaHasta datetime,
@Centro1Desde varchar(8),
@Centro1Hasta varchar(8),
@Centro2Desde varchar(8),
@Centro2Hasta varchar(8),
@CuentaDesde varchar(25),
@CuentaHasta varchar(25),
@Empresa_Id int,
@PorAlternativo bit, 
@Cultura VarChar(5)=null
)
as

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))


if(@PorAlternativo=0)
begin
select conCuentas.Cuenta_Id, 
CASE WHEN @EnOtro=1 THEN conCuentas.Description else 
	conCuentas.Descripcion end as DescripcionCuenta,
	conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1, 
conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2,
sum(case when conMovCont.TipoMov=1 then Importe else 0 end) as Debe, 
sum (case when conMovCont.TipoMov=2 then Importe else 0 end) as Haber

from conAsientos
inner join conMovCont on conAsientos.conAsientos=conMovCont.conAsientos
inner join conCentro1 on ISNULL(conMovCont.Centro1_Id,1)=conCentro1.conCentro1
inner join conCentro2 on ISNULL(conMovCont.Centro2_Id,1)=conCentro2.conCentro2
inner join conCuentas on conCuentas.conCuentas=conMovCont.Cuenta_Id
left join conAsientosCon on conAsientosCon.conAsientos = conAsientos.conAsientos
inner join genEmpresas ON genEmpresas.genEmpresas = conAsientos.Empresa_Id
where 
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma or conAsientosCon.conAsientos is Not null) and
conAsientos.Anulado = 0 and
conAsientos.Posteado = 1 and 
conCentro1.Centro1_Id between @Centro1Desde and @Centro1Hasta and
conAsientos. Fecha between @FechaDesde and @FechaHasta and
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and
conAsientos.Empresa_Id=@Empresa_Id
Group by conCuentas.Cuenta_Id,conCuentas.Descripcion,conCentro2.Centro2_Id,conCentro2.Descripcion, 
conCentro1.Centro1_Id,conCentro1.Descripcion, concuentas.Description
order by 3,1,5
end
else
begin
select conCuentas.Cuenta_Id, 
CASE WHEN @EnOtro=1 THEN conCuentas.Description else 
	conCuentas.Descripcion end  as DescripcionCuenta, conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1,
conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2,
sum(case when conMovCont.TipoMov=1 then Importe else 0 end) as Debe, sum (case when conMovCont.TipoMov=2 then Importe else 0 end) as Haber

from conAsientos
inner join conMovCont on conAsientos.conAsientos=conMovCont.conAsientos
inner join conCentro1 on ISNULL(conMovCont.Centro1_Id,1)=conCentro1.conCentro1
inner join conCentro2 on ISNULL(conMovCont.Centro2_Id,1)=conCentro2.conCentro2
inner join conCuentas on conCuentas.conCuentas=conMovCont.Cuenta_Id
left join conAsientosCon on conAsientosCon.conAsientos = conAsientos.conAsientos
inner join genEmpresas ON genEmpresas.genEmpresas = conAsientos.Empresa_Id
where 
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma or conAsientosCon.conAsientos is Not null) and
conAsientos.Anulado = 0 and
conAsientos.Posteado = 1 and 
conCentro2.Centro2_Id between @Centro2Desde and @Centro2Hasta and
conAsientos. Fecha between @FechaDesde and @FechaHasta and
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and
conAsientos.Empresa_Id=@Empresa_Id
Group by conCuentas.Cuenta_Id,conCuentas.Descripcion,
conCentro1.Centro1_Id,conCentro1.Descripcion, conCentro2.Centro2_Id,conCentro2.Descripcion,
	conCuentas.Description
order by 5,1,3
end
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_conCentro1.sql*/
DROP PROCEDURE inf_conCentro1
GO

CREATE PROCEDURE inf_conCentro1
(
	@CentroDesde VarChar(8),
	@CentroHasta VarChar(8),
	@Empresa_Id Int
)

as 

Select conCentro1,Centro1_Id,Empresa_Id,Descripcion,Nivel,Imputable,Notas,Inactivo,Usuario_Id,Posteado 
From conCentro1
Where 
Centro1_Id between @CentroDesde and @CentroHasta and	
isnull(Empresa_Id,@Empresa_Id) = @Empresa_Id and 
Centro1_Id NOT IN ('%','*',' ')

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_conCentro2.sql*/
DROP PROCEDURE inf_conCentro2
GO

CREATE PROCEDURE inf_conCentro2
(
	@CentroDesde VarChar(8),
	@CentroHasta VarChar(8),
	@Empresa_Id Int
)

as 

select conCentro2,Centro2_Id,Empresa_Id,Descripcion,Nivel,Imputable,Notas,Inactivo,Usuario_Id,Posteado 
From conCentro2
Where 
Centro2_Id between @CentroDesde and @CentroHasta and	
isnull(Empresa_Id,@Empresa_Id) = @Empresa_Id AND 
Centro2_Id NOT IN ('%','*',' ')

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_conCuentas.sql*/
DROP Procedure Inf_conCuentas 
GO
CREATE Procedure Inf_conCuentas (
	@CuentaDesde VarChar(25),@CuentaHasta VarChar(25), @pEmpresa_Id Int)
AS

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	conCuentas.Rubro_Id, conCuentas.Imputable, conCuentas.Nivel, 
		conCuentas.Naturaleza, conCuentas.NoSeReserva, 
		conCuentas.EliminaConsolida, conCuentas.Inactivo, 	
		conCuentas.Posteado, conTiposContables.Tipo_id, 
		conTiposContables.Descripcion as DescripcionTipo, 
		conBaseDistri.Base_Id, conBaseDistri.Descripcion as DescripcionBase, 
		conGruposCont.Grupo_Id, conGruposCont.Descripcion as DescripcionGrupo, 
		conSituPatri.Descripcion as Rubro_Balance	, 
		genMonedas.Moneda_Id, conCuentas.TipoSat_Id
FROM conCuentas	LEFT OUTER JOIN conTiposContables ON
conCuentas.Tipo_id = conTiposContables.Tipo_Id
LEFT OUTER JOIN conBaseDistri ON
conBaseDistri.conBaseDistri = conCuentas.Base_Id
LEFT OUTER JOIN conGruposCont ON
conGruposCont.conGruposCont = conCuentas.Grupo_Id
LEFT OUTER JOIN conSituPatri ON
conSituPatri.Rubro_Balance =conCuentas.Rubro_Balance
LEFT OUTER JOIN genMonedas ON
genMonedas.genMonedas = ConCuentas.Moneda_Id
WHERE
	conCuentas.Cuenta_Id BETWEEN @CuentaDesde and @CuentaHasta and 
	ISNULL(conCuentas.Empresa_Id,@pEmpresa_id) = @pEmpresa_id
ORDER BY 1
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_conEstadoRes.sql*/
-- Inf_conEstadoRes  1, '20180501','20180531', '1','ZZZ',' ','ZZZ', 'es'
-- Inf_conEstadoRes  1, '20180501','20180531', '1','ZZZ',' ','ZZZ', 'en'
DROP Procedure Inf_conEstadoRes 
GO
Create Procedure Inf_conEstadoRes 
(
@Empresa Int, 
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@Centro1Desde VarChar(8),
@Centro1Hasta VarChar(8),
@Centro2Desde VarChar(8),
@Centro2Hasta VarChar(8),
@Cultura VarChar(5)=null
)
as

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))


DECLARE @FechaDesdeE DateTime


SET @FechaDesdeE = (
			select min(Fecha_Desde) from conPeriodos inner join genEmpresas ON
			genEmpresas.genEmpresas = conPeriodos.Empresa_Id
			WHERE
			--conPeriodos.Fecha_Desde = genEmpresas.FechaInicioSumma and 
			conPeriodos.Empresa_Id = @Empresa AND 
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				conPeriodos1.Empresa_Id = @Empresa AND 
				@FechaHasta between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta))



PRINT @FechaDesdeE
-- Ingresos

SELECT * INTO #T1  FROM vconMovContRes WHERE FECHA BETWEEN @FechaDesdeE AND @FechaHasta and 
	Empresa_id = @Empresa


 
-- Ingresos

SELECT 10 AS ORDENTIPO, conAnexosGrupos.Orden , 'V' AS Tipo,
	case when @EnOtro=1 then conAnexosGrupos.Description else conAnexosGrupos.Descripcion end Descripcion,
ISNULL((SELECT SUM(-Monto) 
	from #T1  vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id  BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as Monto,
		ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #T1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id  BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as MontoAcum
		,@FechaDesdeE as FechaDesdeE
FROM 
	conAnexosGrupos inner join conAnexosOrigenes ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
where
	conAnexosOrigenes.TipoRubro = 'ING' 
UNION ALL
SELECT 20 AS ORDENTIPO, 1 Orden , 'T' AS Tipo,
	'Total_'+conAnexosOrigenes.Descripcion Descripcion,
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id  BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE
FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro = 'ING'
	
--- Costos

UNION ALL

SELECT 30 AS ORDENTIPO, conAnexosGrupos.Orden , 'V' AS Tipo, 
	case when @EnOtro=1 then conAnexosGrupos.Description else conAnexosGrupos.Descripcion end Descripcion,
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id  BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as Monto,
		ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM 
	conAnexosGrupos inner join conAnexosOrigenes ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
where
	conAnexosOrigenes.TipoRubro = 'COS'

UNION ALL
-- Total Costos
SELECT 40 AS ORDENTIPO, 1 Orden , 'T' AS Tipo, 
	'Total_'+ conAnexosOrigenes.Descripcion, 
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto, 
		ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id  BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro = 'COS'
-- UTILIDAD (Perdida Bruta)
UNION ALL
select xxx.ORDENTIPO, xxx.Orden,  'T' AS Tipo,  xxx.Descripcion,
	SUM(Monto) as Monto, SUM(MontoAcum) MontoAcum,@FechaDesdeE as FechaDesdeE
from (
-- Utilidad o Perdida Bruta
SELECT 50 AS ORDENTIPO, 1 Orden , 
	'Utilidad_(Perdida)_Bruta' Descripcion, 'T' AS Tipo, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto, 
		ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id  BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro in ('COS', 'ING')) as xxx
group by xxx.ORDENTIPO, xxx.Orden,  xxx.Descripcion
-- gastos
UNION ALL
SELECT 60 AS ORDENTIPO, conAnexosGrupos.Orden , 'V' AS Tipo, 
	case when @EnOtro=1 then conAnexosGrupos.Description else conAnexosGrupos.Descripcion end Descripcion,
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as Monto, 
		ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM 
	conAnexosGrupos inner join conAnexosOrigenes ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
where
	conAnexosOrigenes.TipoRubro = 'GAS'

-- UTILIDAD (Perdida Bruta)
UNION ALL
select xxx.ORDENTIPO, xxx.Orden,  'T' AS Tipo,  xxx.Descripcion, 
	SUM(Monto) as Monto, SUM(MontoAcum) MontoAcum
	,@FechaDesdeE as FechaDesdeE
from (
-- Utilidad o Perdida Operacion
SELECT 70 AS ORDENTIPO, 1 Orden , 
	'Utilidad_(Perdida)_Operacion' Descripcion, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro in ('COS', 'ING','GAS')) as xxx
group by xxx.ORDENTIPO, xxx.Orden,  xxx.Descripcion

-- Otros Ingresos
UNION ALL
SELECT 80 AS ORDENTIPO, conAnexosGrupos.Orden , 'V' AS Tipo, 
	case when @EnOtro=1 then conAnexosGrupos.Description else conAnexosGrupos.Descripcion end Descripcion,
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as Monto, 
		ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM 
	conAnexosGrupos inner join conAnexosOrigenes ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
where
	conAnexosOrigenes.TipoRubro = 'OI'

UNION ALL
SELECT 90 AS ORDENTIPO, conAnexosGrupos.Orden , 'V' AS Tipo, 
	case when @EnOtro=1 then conAnexosGrupos.Description else conAnexosGrupos.Descripcion end Descripcion,
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as Monto, 
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM 
	conAnexosGrupos inner join conAnexosOrigenes ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
where
	conAnexosOrigenes.TipoRubro = 'OE' and 
	conAnexosOrigenes.Origen = 5



UNION ALL
SELECT 110 AS ORDENTIPO, conAnexosGrupos.Orden , 'V' AS Tipo, 
	case when @EnOtro=1 then conAnexosGrupos.Description else conAnexosGrupos.Descripcion end Descripcion,
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as Monto, 
ISNULL((SELECT SUM(vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM 
	conAnexosGrupos inner join conAnexosOrigenes ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
where
	conAnexosOrigenes.TipoRubro = 'OE' and 
	conAnexosOrigenes.Origen = 7

UNION ALL
-- Utilidad o Perdida Operacion
select xxx.ORDENTIPO, xxx.Orden,  'T' AS Tipo,  xxx.Descripcion, 
	SUM(Monto) as Monto, SUM(MontoAcum) MontoAcum,@FechaDesdeE as FechaDesdeE
from (
SELECT 100 AS ORDENTIPO, 1 Orden , 
	'Utilidad_(Perdida)_Antes_de_Impuestos' Descripcion, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id  BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto,
		ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro in ('COS', 'ING','GAS', 'OI','OE') AND
	conAnexosOrigenes.Origen <> 7)  as xxx
group by xxx.ORDENTIPO, xxx.Orden,  xxx.Descripcion
UNION ALL
-- Impuestos
select xxx.ORDENTIPO, xxx.Orden,  'T' AS Tipo,  xxx.Descripcion, 
	SUM(Monto) as Monto, SUM(MontoAcum) MontoAcum,@FechaDesdeE as FechaDesdeE
from (
SELECT 115 AS ORDENTIPO, 1 Orden , 
	'Impuestos' Descripcion, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto, 
	ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro in ('IM') AND
	conAnexosOrigenes.Origen <> 7)  as xxx
group by xxx.ORDENTIPO, xxx.Orden,  xxx.Descripcion
UNION ALL
-- Utilidad o Perdida Operacion
select xxx.ORDENTIPO, xxx.Orden, 'T' AS Tipo,  xxx.Descripcion, 
	SUM(Monto) as Monto, SUM(MontoAcum) as MontoAcum,@FechaDesdeE as FechaDesdeE
from (
SELECT 120 AS ORDENTIPO, 1 Orden , 
	'Utilidad_(Perdida)' Descripcion, 
ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesde And @FechaHasta),0) as  Monto,
		ISNULL((SELECT SUM(-vconMovContRes.Monto) 
	from #t1 vconMovContRes
	INNER JOIN conAnexosGrupos ON
	conAnexosGrupos.Origen = conAnexosOrigenes.Origen 
	INNER JOIN conAnexoGrupoTipos ON
	conAnexoGrupoTipos.GrupoAne_Id = conAnexosGrupos.GrupoAne_Id and
	conAnexoGrupoTipos.Tipo_Id = vconMovContRes.Tipo_Id
	WHERE
		vconMovContRes.Empresa_Id = @Empresa and 
		vconMovContRes.Especial NOT IN ('CIR','CCP') AND 
		vconMovContRes.Centro1_Id BETWEEN @Centro1Desde And @Centro1Hasta and 
		vconMovContRes.Centro2_Id BETWEEN @Centro2Desde And @Centro2Hasta and 
		vconMovContRes.Fecha between @FechaDesdeE And @FechaHasta),0) as  MontoAcum
		,@FechaDesdeE as FechaDesdeE

FROM conAnexosOrigenes
where
	conAnexosOrigenes.TipoRubro in ('COS', 'ING','GAS', 'OI','OE','IM'))  as xxx
group by xxx.ORDENTIPO, xxx.Orden,  xxx.Descripcion
order by 1,2
OPTION	(RECOMPILE)


DROP TABLE #T1 

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_conEvoPatne.sql*/
-- Inf_conEvoPatne '20180630', 1
DROP PROCEDURE Inf_conEvoPatne
GO
CREATE PROCEDURE Inf_conEvoPatne
(
	@FechaHasta Datetime, 
	@Empresa_Id Int
)
AS
DECLARE @FechaDesde DateTime 

SET @FechaDesde = (SELECT MIN(conPeriodos.Fecha_Desde) 
		From conPeriodos INNER JOIN conPeriodos conPeriodos1 ON
		conPeriodos.Ejercicio = conPeriodos1.Ejercicio 
		WHERE
			 @FechaHasta Between conPeriodos1.Fecha_Desde And conPeriodos1.Fecha_Hasta)

Select 1 AS ORDEN, 'Saldos AL '+ CONVERT(CHAR(10),@FechaDesde) AS Leyenda,
	case when conTiposContables.Rubro_Balance = 'APORT' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Aumentos, 
	case when conTiposContables.Rubro_Balance In( 'CAPIT', 'CAPV') THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Capital, 
	case when conTiposContables.Rubro_Balance = 'RESAC' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResNoAsi, 
	case when conTiposContables.Rubro_Balance = 'RESLE' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResLegal, 
	case when conTiposContables.Rubro_Balance = 'SEPN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Resultados, 
	case when conTiposContables.Rubro_Balance = 'PART' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Participacion, 
	case when conTiposContables.Rubro_Balance = 'RTEN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResPorTenencia,
	case when conTiposContables.Rubro_Balance = 'DINV' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as DeInversiones,
	case when conTiposContables.Rubro_Balance = 'OBLIG' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Obligaciones
	FROM conasientos INNER JOIN conmovcont ON
		conasientos.conAsientos = conmovcont.conAsientos
		INNER JOIN conCuentas ON
		conCuentas.conCuentas = conmovcont.Cuenta_Id
		INNER JOIN conTiposContables ON
		conTiposContables.Tipo_Id =conCuentas.Tipo_Id
		INNER JOIN conRubros ON
		conRubros.Rubro_Id = conCuentas.Rubro_Id
		WHERE 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		conRubros.Tipo = 'CAP' 
		and conasientos.Especial = 'APE' 
		GROUP BY conTiposContables.Rubro_Balance
UNION ALL
	Select 2 AS ORDEN, 'Aplicaci?n de la Utilidad del Ejercicio' AS Leyenda,
	case when conTiposContables.Rubro_Balance = 'APORT' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Aumentos, 
	case when conTiposContables.Rubro_Balance In( 'CAPIT', 'CAPV') THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Capital, 
	case when conTiposContables.Rubro_Balance = 'RESAC' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResNoAsi, 
	case when conTiposContables.Rubro_Balance = 'RESLE' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResLegal, 
	case when conTiposContables.Rubro_Balance = 'SEPN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Resultados, 
	case when conTiposContables.Rubro_Balance = 'PART' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Participacion, 
	case when conTiposContables.Rubro_Balance = 'RTEN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResPorTenencia,
	case when conTiposContables.Rubro_Balance = 'DINV' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as DeInversiones,
	case when conTiposContables.Rubro_Balance = 'OBLIG' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Obligaciones
	FROM conasientos INNER JOIN conmovcont ON
		conasientos.conAsientos = conmovcont.conAsientos
		INNER JOIN conCuentas ON
		conCuentas.conCuentas = conmovcont.Cuenta_Id
		INNER JOIN conTiposContables ON
		conTiposContables.Tipo_Id =conCuentas.Tipo_Id
		INNER JOIN conRubros ON
		conRubros.Rubro_Id = conCuentas.Rubro_Id
		WHERE 
		conTiposContables.Rubro_Balance = 'RESAC' AND 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		conRubros.Tipo = 'CAP' 
		GROUP BY conTiposContables.Rubro_Balance

UNION ALL
	Select 3 AS ORDEN, 'Aumento de Capital Social' AS Leyenda,
	case when conTiposContables.Rubro_Balance = 'APORT' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Aumentos, 
	case when conTiposContables.Rubro_Balance In( 'CAPIT', 'CAPV') THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Capital, 
	case when conTiposContables.Rubro_Balance = 'RESAC' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResNoAsi, 
	case when conTiposContables.Rubro_Balance = 'RESLE' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResLegal, 
	case when conTiposContables.Rubro_Balance = 'SEPN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Resultados, 
	case when conTiposContables.Rubro_Balance = 'PART' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Participacion, 
	case when conTiposContables.Rubro_Balance = 'RTEN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResPorTenencia,
	case when conTiposContables.Rubro_Balance = 'DINV' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as DeInversiones,
	case when conTiposContables.Rubro_Balance = 'OBLIG' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Obligaciones
	FROM conasientos INNER JOIN conmovcont ON
		conasientos.conAsientos = conmovcont.conAsientos
		INNER JOIN conCuentas ON
		conCuentas.conCuentas = conmovcont.Cuenta_Id
		INNER JOIN conTiposContables ON
		conTiposContables.Tipo_Id =conCuentas.Tipo_Id
		INNER JOIN conRubros ON
		conRubros.Rubro_Id = conCuentas.Rubro_Id
		WHERE 
		conTiposContables.Rubro_Balance In( 'CAPIT', 'CAPV') AND 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		conRubros.Tipo = 'CAP' 
		GROUP BY conTiposContables.Rubro_Balance
UNION ALL
	Select 4 AS ORDEN, 'Aportaciones para Futuros Aumentos' AS Leyenda,
	case when conTiposContables.Rubro_Balance = 'APORT' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Aumentos, 
	case when conTiposContables.Rubro_Balance In( 'CAPIT', 'CAPV') THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Capital, 
	case when conTiposContables.Rubro_Balance = 'RESAC' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResNoAsi, 
	case when conTiposContables.Rubro_Balance = 'RESLE' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResLegal, 
	case when conTiposContables.Rubro_Balance = 'SEPN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Resultados, 
	case when conTiposContables.Rubro_Balance = 'PART' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Participacion, 
	case when conTiposContables.Rubro_Balance = 'RTEN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResPorTenencia,
	case when conTiposContables.Rubro_Balance = 'DINV' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as DeInversiones,
	case when conTiposContables.Rubro_Balance = 'OBLIG' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Obligaciones
	FROM conasientos INNER JOIN conmovcont ON
		conasientos.conAsientos = conmovcont.conAsientos
		INNER JOIN conCuentas ON
		conCuentas.conCuentas = conmovcont.Cuenta_Id
		INNER JOIN conTiposContables ON
		conTiposContables.Tipo_Id =conCuentas.Tipo_Id
		INNER JOIN conRubros ON
		conRubros.Rubro_Id = conCuentas.Rubro_Id
		WHERE 
		conTiposContables.Rubro_Balance = 'APORT' AND 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		conRubros.Tipo = 'CAP' 
		GROUP BY conTiposContables.Rubro_Balance

UNION ALL
	Select 5 AS ORDEN, 'Variaci?n Reserva Legal' AS Leyenda,
	case when conTiposContables.Rubro_Balance = 'APORT' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Aumentos, 
	case when conTiposContables.Rubro_Balance In( 'CAPIT', 'CAPV') THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Capital, 
	case when conTiposContables.Rubro_Balance = 'RESAC' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResNoAsi, 
	case when conTiposContables.Rubro_Balance = 'RESLE' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResLegal, 
	case when conTiposContables.Rubro_Balance = 'SEPN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Resultados, 
	case when conTiposContables.Rubro_Balance = 'PART' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Participacion, 
	case when conTiposContables.Rubro_Balance = 'RTEN' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as ResPorTenencia,
	case when conTiposContables.Rubro_Balance = 'DINV' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as DeInversiones,
	case when conTiposContables.Rubro_Balance = 'OBLIG' THEN 
		SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) ELSE 0 END as Obligaciones
	FROM conasientos INNER JOIN conmovcont ON
		conasientos.conAsientos = conmovcont.conAsientos
		INNER JOIN conCuentas ON
		conCuentas.conCuentas = conmovcont.Cuenta_Id
		INNER JOIN conTiposContables ON
		conTiposContables.Tipo_Id =conCuentas.Tipo_Id
		INNER JOIN conRubros ON
		conRubros.Rubro_Id = conCuentas.Rubro_Id
		WHERE 
		conTiposContables.Rubro_Balance = 'RESLE'  AND 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		conRubros.Tipo = 'CAP' 
		GROUP BY conTiposContables.Rubro_Balance

UNION ALL
	Select 6 AS ORDEN, 'Utilidad (Perdida) Neta del Ejercicio' AS Leyenda,
	0 as Aumentos, 
	0 as Capital, 
	0 as ResNoAsi, 
	0 as ResLegal, 
	SUM(-conmovcont.IMPORTE * (-2*conmovcont.Tipomov+3)) as Resultados, 
	0 as Participacion, 
	0 as ResPorTenencia,
	0 as DeInversiones,
	0 as Obligaciones
	FROM conasientos INNER JOIN conmovcont ON
		conasientos.conAsientos = conmovcont.conAsientos
		INNER JOIN conCuentas ON
		conCuentas.conCuentas = conmovcont.Cuenta_Id
		INNER JOIN conTiposContables ON
		conTiposContables.Tipo_Id =conCuentas.Tipo_Id
		INNER JOIN conRubros ON
		conRubros.Rubro_Id = conCuentas.Rubro_Id
		WHERE 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		conRubros.Tipo IN('ING' ,'GAS', 'COS', 'OI','OE')
		GROUP BY conTiposContables.Rubro_Balance


GO		
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_conGruposCont.sql*/
Drop procedure inf_conGruposCont
Go

Create procedure inf_conGruposCont
(
@GrupoDesde varChar(5),
@GrupoHasta varChar(5)
)
As
Select conGruposCont.Grupo_Id, conGruposCont.Descripcion DescripcionGrupo, conCentro1.Centro1_Id, conCentro1.Descripcion DescripcionCentro1,
conCentro2.Centro2_Id, conCentro2.Descripcion DescripcionCentro2
From conGruposCont
Inner Join conGrupoCentro On conGrupoCentro.Grupo_Id = conGruposCont.conGruposCont
Inner Join conCentro1 On conCentro1.conCentro1 = conGrupoCentro.Centro1_Id
Inner Join conCentro2 On conCentro2.conCentro2 = conGrupoCentro.Centro2_Id
Where conGruposCont.Grupo_Id Between @GrupoDesde And @GrupoHasta
Order By conGruposCont.Grupo_Id, conGrupoCentro.Centro1_Id, conGrupoCentro.Centro2_Id
Go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_conMayor.sql*/
-- Inf_conMayor '11-118-001-002','11-118-001-002',' ','ZZZZZZZZ',' ','ZZZZZZZZ','20210601','20210630',5,0, 'es',1,1

-- Inf_conMayor '1140-101','1140-101',' ','ZZZZZZZZ',' ','ZZZZZZZZ','20190501','20190531',1,1, 'en'
DROP Procedure Inf_conMayor
GO

Create Procedure Inf_conMayor
( 
	@CuentaDesde VarChar(25),@CuentaHasta VarChar(25), 
	@Centro1Desde VarChar(8), @Centro1Hasta VarChar(8),  
	@Centro2Desde VarChar(8), @Centro2Hasta VarChar(8),  
	@FechaDesde DateTime, @FechaHasta DateTime, @Empresa Int,
	@ConSaldo Sino,  @Cultura VarChar(5)=null, 
	@IncuCierre Bit, @ResumirPorCom Bit)
AS

SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))
DECLARE @FechaDesdeE DateTime

/* FM 11/05/2020 Que vaya hasta el primer asiento de apertura cualquiera sea el ejercicio

SET @FechaDesdeE = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Empresa_Id = @Empresa AND 
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				conPeriodos1.Empresa_Id = @Empresa AND 
				@FechaHasta between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta))
*/
Set @FechaDesdeE = isNull((Select Max(Fecha) From conAsientos Where Fecha <= @FechaDesde And Especial = 'APE'), '20000101')

IF @ResumirPorCom = 0

SELECT conCuentas.Cuenta_Id, 
	case when @EnOtro=1 then concuentas.Description else conCuentas.Descripcion end Descripcion , 
	DATEADD(dd, -1,@FechaDesde) as Fecha, 
	case when @EnOtro=1 then 'INITIAL BALANCE' else 'SALDO INICIAL' end AS Segmento,
	0 as conAsientos, 
	'  ' as Formulario, ' ' as Formulario_Id,
	' ' Centro1_Id, ' ' Centro2_Id, 
	SUM(conMovCont.Importe * (-2*conMovCont.Tipomov+3)) as SaldoInicial, 
	0 As Debe,
	0 As Haber,'' as Observaciones,  ' ' Entidad, ' ' RazonSocial, ' ' Detalle, ' ' as ClaveFiscal,
	'' as SegmentotesMoviSTR, ' ' as Sucursal, '  ' as Clase
From conCuentas INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = ISNULL(conMovCont.Centro1_Id,' ')
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = ISNULL(conMovCont.Centro2_Id,' ')
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
Inner Join genEmpresas On genEmpresas.genEmpresas = conAsientos.Empresa_Id
left join conAsientosCon ON conAsientosCon.conAsientos = conAsientos.conAsientos
WHERE
@ConSaldo = 1 And
conAsientos.Empresa_Id = @Empresa and conAsientos.Anulado = 0 And conAsientos.Posteado = 1 and 
(conAsientos.Fecha < @FechaDesde or conAsientos.Especial = 'APE') and 
(conAsientos.Fecha between @FechaDesdeE AND @FechaDesde) and 
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta And
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma OR conAsientosCon.conAsientos IS NoT NULL)
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, concuentas.Description
UNION ALL
SELECT conCuentas.Cuenta_Id, 
	case when @EnOtro=1 then concuentas.Description else conCuentas.Descripcion end Descripcion , 
	conAsientos.Fecha, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	conAsientos.conAsientos, disFormularios.Descripcion as Formulario,disFormularios.Formulario_Id,
	ISNULL(conCentro1.Centro1_Id,' ') as Centro1_Id,
	ISNULL(conCentro2.Centro2_Id,' ') as Centro2_Id,
	0 as SaldoInicial, 
	CASE WHEN conMovCont.Tipomov = 1 then  conMovCont.Importe else 0 end As Debe,
	CASE WHEN conMovCont.Tipomov = 2 then  conMovCont.Importe else 0 end As Haber,
	ISNULL(conAsientos.Observaciones,'') AS Observaciones, 
		ISNULL(iSNULL(iSNULL(isnull(isnull(venclientes.Cliente_Id, comProveedores.Proveed_Id),venClientesS.Cliente_Id), comProveedoresA.Proveed_Id), venClientesA.Cliente_Id), comProveedoresR.Proveed_Id) as Entidad, 
		ISNULL(isnull(isnull(isnull(isnull(venclientes.RazonSocial, comProveedores.RazonSocial),venClientesS.RazonSocial), comProveedoresA.RazonSocial), venClientesA.RazonSocial), comProveedoresR.RazonSocial) as RazonSocial,		
		CASE WHEN venMovDetalle.Detalle is not null then venMovDetalle.Detalle
			WHEN comMovDetalle.Detalle is not null then comMovDetalle.Detalle
			when CompApli.Segmento_Id IS NOT NULL THEN 
			dbo.Segmento(CompApli.Segmento_Id, CompApli.Segmento1C, CompApli.Segmento2C
				, CompApli.Segmento3C, CompApli.Segmento4C, CompApli.Segmento1N
				, CompApli.Segmento2N, CompApli.Segmento3N, CompApli.Segmento4N)
			When CompDC.Segmento_Id  IS NOT NULL THEN 
		dbo.Segmento(CompDC.Segmento_Id, CompDC.Segmento1C, CompDC.Segmento2C
			, CompDC.Segmento3C, CompDC.Segmento4C, CompDC.Segmento1N
			, CompDC.Segmento2N, CompDC.Segmento3N, CompDC.Segmento4N)
			ELSE isnull(conMovCont.LeyendaLibroMayor,'') END as Detalle,
	isnull(isnull(venMovimientosFiscal.ClaveFiscal,isnull(comMovProv.ClaveFiscal, comMovprovA.ClaveFiscal)),' ') as ClaveFiscal,
		dbo.Segmento(SegtesMovi.Segmento_Id,SegtesMovi.Segmento1C,SegtesMovi.Segmento2C,
		SegtesMovi.Segmento3C,SegtesMovi.Segmento4C,SegtesMovi.Segmento1N,SegtesMovi.Segmento2N,
		SegtesMovi.Segmento3N,SegtesMovi.Segmento4N) as SegmentotesMoviSTR, 
		genSucursalesEmpr.Sucursal, conMovCont.Clase

From conCuentas INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
left join genSucursalesEmpr on genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
left JOIN disFormularios ON disFormularios.disFormularios = conAsientos.Formulario_Id
Inner Join genEmpresas On genEmpresas.genEmpresas = conAsientos.Empresa_Id
left join conAsientosCon ON conAsientosCon.conAsientos = conAsientos.conAsientos
left join (commovprov inner join comProveedores ON  commovprov.Proveed_Id = comProveedores.genEntidades) ON commovprov.comMovProv = conAsientos.conAsientos
left join (comOcReceCuerpo inner join comOrdenComp ON  comOrdenComp.comOrdenComp = comOcReceCuerpo.comOrdencomp 
	inner join comProveedores  comProveedoresR ON comOrdenComp.Proveed_Id = comProveedoresR.genEntidades) ON comOcReceCuerpo.comOcRecepcion = conMovCont.conAsientos AND 
				comOcReceCuerpo.conRenglon = conMovCont.Renglon 
left join (venMovimientos inner join venclientes ON  venClientes.genEntidades = venMovimientos.Cliente_Id) ON venMovimientos.venMovimientos = conAsientos.conAsientos
left join (commovdetallecont  INNER JOIN comMovDetalle ON
	comMovDetalle.comMovProv = commovdetallecont.comMovProv AND 
	comMovDetalle.Renglon =  commovdetallecont.Renglon) on commovdetallecont.comMovProv = conMovCont.conAsientos  and 
		commovdetallecont.conRenglon = conmovcont.Renglon
LEFT JOIN venMovDetalle on 
	venMovDetalle.venMovimientos = conmovcont.conAsientos and 
	venMovDetalle.conRenglon = conMovcont.Renglon
	left join tesRengMovicomMovProv on conMovCont.conAsientos=tesRengMovicomMovProv.comMovProv
	left join genAsiSegmentos SegtesMovi on SegtesMovi.Asiento_Id=tesRengMovicomMovProv.tesMovimientos
	left join venMovimientosFiscal on conMovCont.conAsientos=venMovimientosFiscal.venMovimientos
	left join genSegmentos genSegmentotesMovi on SegtesMovi.Segmento_Id=genSegmentotesMovi.genSegmentos
	-- factura directa
LEFT JOIN (select distinct venClientesS.Cliente_Id, venClientesS.RazonSocial, 
	venMovStkHist.stkMoviCabe, stkMoviCuerpo.conRenglonDebe, stkMoviCuerpo.conRenglonHaber
	from 
	venMovStkHist inner join  stkMoviCuerpo on  
	venMovStkHist.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
	venMovStkHist.RenglonCuerpo = stkMoviCuerpo.Renglon
	inner join venMovimientos venMovimientosS ON 
	venMovimientosS.venMovimientos = venMovStkHist.venMovimientos
	INNER JOIN venClientes venClientesS ON 
	venClientesS.genEntidades = venMovimientosS.Cliente_Id
	) as  venClientesS on
	venClientesS.stkMoviCabe = conMovCont.conAsientos AND 
	(venClientesS.conRenglonDebe = conMovCont.Renglon or
	venClientesS.conRenglonHaber = conMovCont.Renglon)
LEFT JOIN (comMovImpAcredita 
	INNER JOIN comMovprov comMovprovA ON comMovprovA.comMovprov = comMovImpAcredita.comMovProv
	INNER JOIN comProveedores  comProveedoresA ON comProveedoresA.genEntidades = comMovprovA.Proveed_Id) ON
	comMovImpAcredita.Asiento_Id = conAsientos.conAsientos and 
	(comMovImpAcredita.RenglonDebe = conMovCont.Renglon  or comMovImpAcredita.RenglonHaber = conMovCont.Renglon ) 
LEFT JOIN ((SELECT MAX(venMovImpTraslado.tesMovimientos) AS tesMovimientos, venMovImpTraslado.Asiento_Id, venMovImpTraslado.RenglonDebe, venMovImpTraslado.RenglonHaber 
		FROM  venMovImpTraslado 
		GROUP BY venMovImpTraslado.Asiento_Id, venMovImpTraslado.RenglonDebe, venMovImpTraslado.RenglonHaber ) AS venMovImpTraslado
	INNER JOIN venMovimientos venMovimientosA ON venMovimientosA.venMovimientos = venMovImpTraslado.tesMovimientos 
	INNER JOIN venClientes venClientesA ON venClientesA.genEntidades = venMovimientosA.Cliente_Id) ON
	venMovImpTraslado.Asiento_Id = conAsientos.conAsientos and 
	(venMovImpTraslado.RenglonDebe = conMovCont.Renglon  or venMovImpTraslado.RenglonHaber = conMovCont.Renglon ) 
LEFT JOIN (genCancMov INNER JOIN genAsiSegmentos as CompApli ON
				genCancMov.Asiento_Id = CompApli.Asiento_Id) ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
LEFT JOIN (genCancMov genCancMovDC INNER JOIN genAsiSegmentos as CompDC ON
				genCancMovDC.Asiento_Id = CompDC.Asiento_Id) ON genCancMovDC.AsieDifCambio_Id = conAsientos.conAsientos


WHERE
conAsientos.Anulado = 0 and conAsientos.Posteado = 1 and 
conAsientos.Empresa_Id = @Empresa and 
conAsientos.Fecha Between @FechaDesde and @FechaHasta and 
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta And
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma OR conAsientosCon.conAsientos IS NoT NULL) AND 
conAsientos.Especial != 'APE' and 
(@IncuCierre=1 or (conAsientos.Especial NOT IN('CIR','CCP')))
ORDER BY 1,3,4
OPTION	(RECOMPILE)

ELSE


SELECT conCuentas.Cuenta_Id, 
	case when @EnOtro=1 then concuentas.Description else conCuentas.Descripcion end Descripcion , 
	DATEADD(dd, -1,@FechaDesde) as Fecha, 
	case when @EnOtro=1 then 'INITIAL BALANCE' else 'SALDO INICIAL' end AS Segmento,
	0 as conAsientos, 
	'  ' as Formulario, ' ' as Formulario_Id,
	' ' Centro1_Id, ' ' Centro2_Id, 
	SUM(conMovCont.Importe * (-2*conMovCont.Tipomov+3)) as SaldoInicial, 
	0 As Debe,
	0 As Haber,'' as Observaciones,  ' ' Entidad, ' ' RazonSocial, ' ' Detalle, ' ' as ClaveFiscal,
	'' as SegmentotesMoviSTR, ' ' as Sucursal, ' ' Clase
From conCuentas INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = ISNULL(conMovCont.Centro1_Id,' ')
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = ISNULL(conMovCont.Centro2_Id,' ')
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
Inner Join genEmpresas On genEmpresas.genEmpresas = conAsientos.Empresa_Id
left join conAsientosCon ON conAsientosCon.conAsientos = conAsientos.conAsientos
WHERE
@ConSaldo = 1 And
conAsientos.Empresa_Id = @Empresa and conAsientos.Anulado = 0 And conAsientos.Posteado = 1 and 
(conAsientos.Fecha < @FechaDesde or conAsientos.Especial = 'APE') and 
(conAsientos.Fecha between @FechaDesdeE AND @FechaDesde) and 
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta And
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma OR conAsientosCon.conAsientos IS NoT NULL)
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, concuentas.Description
UNION ALL
SELECT conCuentas.Cuenta_Id, 
	case when @EnOtro=1 then concuentas.Description else conCuentas.Descripcion end Descripcion , 
	conAsientos.Fecha, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	conAsientos.conAsientos, disFormularios.Descripcion as Formulario,disFormularios.Formulario_Id,
	ISNULL(conCentro1.Centro1_Id,' ') as Centro1_Id,
	ISNULL(conCentro2.Centro2_Id,' ') as Centro2_Id,
	0 as SaldoInicial, 
	sum(CASE WHEN conMovCont.Tipomov = 1 then  conMovCont.Importe else 0 end) As Debe,
	sum(CASE WHEN conMovCont.Tipomov = 2 then  conMovCont.Importe else 0 end) As Haber,
	ISNULL(conAsientos.Observaciones,'') AS Observaciones, 
		iSNULL(iSNULL(iSNULL(isnull(isnull(venclientes.Cliente_Id, comProveedores.Proveed_Id),venClientesS.Cliente_Id), comProveedoresA.Proveed_Id), venClientesA.Cliente_Id), comProveedoresR.Proveed_Id) as Entidad, 
		iSNULL(isnull(isnull(isnull(isnull(venclientes.RazonSocial, comProveedores.RazonSocial),venClientesS.RazonSocial), comProveedoresA.RazonSocial), venClientesA.RazonSocial), comProveedoresR.RazonSocial) as RazonSocial,		
		CASE WHEN venMovDetalle.Detalle is not null then venMovDetalle.Detalle
			WHEN comMovDetalle.Detalle is not null then comMovDetalle.Detalle
			when CompApli.Segmento_Id IS NOT NULL THEN 
			dbo.Segmento(CompApli.Segmento_Id, CompApli.Segmento1C, CompApli.Segmento2C
				, CompApli.Segmento3C, CompApli.Segmento4C, CompApli.Segmento1N
				, CompApli.Segmento2N, CompApli.Segmento3N, CompApli.Segmento4N)
			When CompDC.Segmento_Id  IS NOT NULL THEN 
		dbo.Segmento(CompDC.Segmento_Id, CompDC.Segmento1C, CompDC.Segmento2C
			, CompDC.Segmento3C, CompDC.Segmento4C, CompDC.Segmento1N
			, CompDC.Segmento2N, CompDC.Segmento3N, CompDC.Segmento4N)
			ELSE isnull(conMovCont.LeyendaLibroMayor,'') END  as Detalle,
		isnull(isnull(venMovimientosFiscal.ClaveFiscal,ISNULL(comMovProv.ClaveFiscal, comMovProvA.ClaveFiscal)),' ') as ClaveFiscal,
		dbo.Segmento(SegtesMovi.Segmento_Id,SegtesMovi.Segmento1C,SegtesMovi.Segmento2C,
		SegtesMovi.Segmento3C,SegtesMovi.Segmento4C,SegtesMovi.Segmento1N,SegtesMovi.Segmento2N,
		SegtesMovi.Segmento3N,SegtesMovi.Segmento4N) as SegmentotesMoviSTR, 
		genSucursalesEmpr.Sucursal, conMovCont.Clase

From conCuentas INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
left join genSucursalesEmpr on genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
left JOIN disFormularios ON disFormularios.disFormularios = conAsientos.Formulario_Id
Inner Join genEmpresas On genEmpresas.genEmpresas = conAsientos.Empresa_Id
left join conAsientosCon ON conAsientosCon.conAsientos = conAsientos.conAsientos
left join (commovprov inner join comProveedores ON  commovprov.Proveed_Id = comProveedores.genEntidades) ON commovprov.comMovProv = conAsientos.conAsientos
left join (venMovimientos inner join venclientes ON  venClientes.genEntidades = venMovimientos.Cliente_Id) ON venMovimientos.venMovimientos = conAsientos.conAsientos
left join (commovdetallecont  INNER JOIN comMovDetalle ON
	comMovDetalle.comMovProv = commovdetallecont.comMovProv AND 
	comMovDetalle.Renglon =  commovdetallecont.Renglon) on commovdetallecont.comMovProv = conMovCont.conAsientos  and 
		commovdetallecont.conRenglon = conmovcont.Renglon
LEFT JOIN venMovDetalle on 
	venMovDetalle.venMovimientos = conmovcont.conAsientos and 
	venMovDetalle.conRenglon = conMovcont.Renglon
	left join tesRengMovicomMovProv on conMovCont.conAsientos=tesRengMovicomMovProv.comMovProv
	left join genAsiSegmentos SegtesMovi on SegtesMovi.Asiento_Id=tesRengMovicomMovProv.tesMovimientos
	left join venMovimientosFiscal on conMovCont.conAsientos=venMovimientosFiscal.venMovimientos
	left join genSegmentos genSegmentotesMovi on SegtesMovi.Segmento_Id=genSegmentotesMovi.genSegmentos
left join (comOcReceCuerpo inner join comOrdenComp ON  comOrdenComp.comOrdenComp = comOcReceCuerpo.comOrdencomp 
	inner join comProveedores  comProveedoresR ON comOrdenComp.Proveed_Id = comProveedoresR.genEntidades) ON comOcReceCuerpo.comOcRecepcion = conMovCont.conAsientos AND 
				comOcReceCuerpo.conRenglon = conMovCont.Renglon 
	-- factura directa
LEFT JOIN (select distinct venClientesS.Cliente_Id, venClientesS.RazonSocial, 
	venMovStkHist.stkMoviCabe, stkMoviCuerpo.conRenglonDebe, stkMoviCuerpo.conRenglonHaber
	from 
	venMovStkHist inner join  stkMoviCuerpo on  
	venMovStkHist.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
	venMovStkHist.RenglonCuerpo = stkMoviCuerpo.Renglon
	inner join venMovimientos venMovimientosS ON 
	venMovimientosS.venMovimientos = venMovStkHist.venMovimientos
	INNER JOIN venClientes venClientesS ON 
	venClientesS.genEntidades = venMovimientosS.Cliente_Id
	) as  venClientesS on
	venClientesS.stkMoviCabe = conMovCont.conAsientos AND 
	(venClientesS.conRenglonDebe = conMovCont.Renglon or
	venClientesS.conRenglonHaber = conMovCont.Renglon)
LEFT JOIN (comMovImpAcredita 
	INNER JOIN comMovprov comMovprovA ON comMovprovA.comMovprov = comMovImpAcredita.comMovProv 
	INNER JOIN comProveedores  comProveedoresA ON comProveedoresA.genEntidades = comMovprovA.Proveed_Id) ON
	comMovImpAcredita.Asiento_Id = conAsientos.conAsientos and 
	(comMovImpAcredita.RenglonDebe = conMovCont.Renglon  or comMovImpAcredita.RenglonHaber = conMovCont.Renglon ) 
LEFT JOIN ((SELECT MAX(venMovImpTraslado.tesMovimientos) AS tesMovimientos, venMovImpTraslado.Asiento_Id, venMovImpTraslado.RenglonDebe, venMovImpTraslado.RenglonHaber 
		FROM  venMovImpTraslado 
		GROUP BY venMovImpTraslado.Asiento_Id, venMovImpTraslado.RenglonDebe, venMovImpTraslado.RenglonHaber ) AS venMovImpTraslado
	INNER JOIN venMovimientos venMovimientosA ON venMovimientosA.venMovimientos = venMovImpTraslado.tesMovimientos 
	INNER JOIN venClientes venClientesA ON venClientesA.genEntidades = venMovimientosA.Cliente_Id) ON
	venMovImpTraslado.Asiento_Id = conAsientos.conAsientos and 
	(venMovImpTraslado.RenglonDebe = conMovCont.Renglon  or venMovImpTraslado.RenglonHaber = conMovCont.Renglon ) 
	LEFT JOIN (genCancMov INNER JOIN genAsiSegmentos as CompApli ON
				genCancMov.Asiento_Id = CompApli.Asiento_Id) ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
	LEFT JOIN (genCancMov genCancMovDC INNER JOIN genAsiSegmentos as CompDC ON
				genCancMovDC.Asiento_Id = CompDC.Asiento_Id) ON genCancMovDC.AsieDifCambio_Id = conAsientos.conAsientos

WHERE
conAsientos.Anulado = 0 and conAsientos.Posteado = 1 and 
conAsientos.Empresa_Id = @Empresa and 
conAsientos.Fecha Between @FechaDesde and @FechaHasta and 
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta And
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma OR conAsientosCon.conAsientos IS NoT NULL) AND 
conAsientos.Especial != 'APE' and 
(@IncuCierre=1 or (conAsientos.Especial NOT IN('CIR','CCP')))
GROUP BY conCuentas.Cuenta_Id, 	conCuentas.Descripcion , 
	conAsientos.Fecha, 
	genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N,
	conAsientos.conAsientos, disFormularios.Descripcion ,disFormularios.Formulario_Id,
	ISNULL(conCentro1.Centro1_Id,' ') ,ISNULL(conCentro2.Centro2_Id,' ') ,
	conAsientos.Observaciones,venclientes.Cliente_Id, comProveedores.Proveed_Id,
	venClientesS.Cliente_Id, comProveedoresA.Proveed_Id, venClientesA.Cliente_Id,
	venclientes.RazonSocial, comProveedores.RazonSocial,venClientesS.RazonSocial, comProveedoresA.RazonSocial, venClientesA.RazonSocial,		
	venMovDetalle.Detalle, comMovDetalle.Detalle, conMovCont.LeyendaLibroMayor,
	venMovimientosFiscal.ClaveFiscal,comMovProv.ClaveFiscal,
	SegtesMovi.Segmento_Id,SegtesMovi.Segmento1C,SegtesMovi.Segmento2C,
		SegtesMovi.Segmento3C,SegtesMovi.Segmento4C,SegtesMovi.Segmento1N,SegtesMovi.Segmento2N,
		SegtesMovi.Segmento3N,SegtesMovi.Segmento4N,genSucursalesEmpr.Sucursal, 
		concuentas.Description, 
		CompApli.Segmento_Id, CompApli.Segmento1C, CompApli.Segmento2C
	, CompApli.Segmento3C, CompApli.Segmento4C, CompApli.Segmento1N
	, CompApli.Segmento2N, CompApli.Segmento3N, CompApli.Segmento4N,CompDC.Segmento_Id, CompDC.Segmento1C, CompDC.Segmento2C
	, CompDC.Segmento3C, CompDC.Segmento4C, CompDC.Segmento1N, conMovCont.Clase
	, CompDC.Segmento2N, CompDC.Segmento3N, CompDC.Segmento4N, comMovprovA.ClaveFiscal, 
	comProveedoresR.Proveed_Id, comProveedoresR.RazonSocial
ORDER BY 1,3,4
OPTION	(RECOMPILE)

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_conMayorRes.sql*/
-- Inf_conMayorRes '20180201','20180228','1140-101','1140-101',' ','ZZZZ',' ','ZZZZ',1,1, 'es'
--  Inf_conMayorRes '20180201','20180228','1140-101','1140-101',' ','ZZZZ',' ','ZZZZ',1,1, 'en'
DROP Procedure Inf_conMayorRes
GO

Create Procedure Inf_conMayorRes
 ( @FechaDesde DateTime, @FechaHasta DateTime, 
	@CuentaDesde VarChar(25),@CuentaHasta VarChar(25), 
	@Centro1Desde VarChar(8), @Centro1Hasta VarChar(8),  
	@Centro2Desde VarChar(8), @Centro2Hasta VarChar(8),  
	@Empresa Int, @ConSaldo Sino, @Cultura VarChar(5)=null)
AS

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))
DECLARE @FechaDesdeE DateTime

/* FM 11/05/2020 Que vaya hasta el primer asiento de apertura cualquiera sea el ejercicio

SET @FechaDesdeE = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Empresa_Id = @Empresa AND 
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				conPeriodos1.Empresa_Id = @Empresa AND 
				@FechaHasta between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta))
*/
Set @FechaDesdeE = isNull((Select Max(Fecha) From conAsientos Where Fecha <= @FechaDesde And Especial = 'APE'), '20000101')

SELECT conCuentas.Cuenta_Id, 
case when @EnOtro=1 then concuentas.Description else conCuentas.Descripcion end Descripcion , 
	DATEADD(dd, -1,@FechaDesde) as Fecha, 
	case when @EnOtro=1 then 'INITIAL BALANCE' else 'SALDO INICIAL' end  AS Formulario, ' ' as Formulario_Id,
	' ' Centro1_Id, ' ' Centro2_Id, 
	SUM(conMovCont.Importe * (-2*conMovCont.Tipomov+3)) as SaldoInicial, 
	0 As Debe,
	0 As Haber
From conCuentas
INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = ISNULL(conMovCont.Centro1_Id,' ')
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = ISNULL(conMovCont.Centro2_Id,' ')
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genEmpresas ON genEmpresas.genEmpresas = @Empresa 
LEFT JOIN conAsientosCon ON conAsientos.conAsientos = conAsientosCon.conAsientos
WHERE
@ConSaldo = 1 And
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma  or conAsientosCon.conAsientos IS NOT NULL) and
conAsientos.Anulado = 0 and conAsientos.Posteado = 1 AND 
conAsientos.Empresa_Id = @Empresa and 
(conAsientos.Fecha < @FechaDesde or conAsientos.Especial = 'APE') and 
(conAsientos.Fecha between @FechaDesdeE AND @FechaDesde) and 
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta 
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, concuentas.Description
UNION ALL

SELECT conCuentas.Cuenta_Id, 
	case when @EnOtro=1 then concuentas.Description else conCuentas.Descripcion end Descripcion , 
	conPeriodos.Fecha_Hasta Fecha,
	disFormularios.Descripcion as Formulario, disFormularios.Formulario_Id,
	ISNULL(conCentro1.Centro1_Id,' ') as Centro1_Id,
	ISNULL(conCentro2.Centro2_Id,' ') as Centro2_Id,
	0 as SaldoInicial, 
	SUM(CASE WHEN conMovCont.Tipomov = 1 then  conMovCont.Importe else 0 end) As Debe,
	SUM(CASE WHEN conMovCont.Tipomov = 2 then  conMovCont.Importe else 0 end) As Haber
From conCuentas
INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN disFormularios ON disFormularios.disFormularios = conAsientos.Formulario_Id
INNER JOIN conPeriodos ON conPeriodos.Empresa_Id = conPeriodos.Empresa_Id and
	conAsientos.Fecha BETWEEN conPeriodos.Fecha_Desde and conPeriodos.Fecha_Hasta and 
	conPeriodos.Empresa_Id =@Empresa
INNER JOIN genEmpresas ON genEmpresas.genEmpresas = @Empresa 
LEFT JOIN conAsientosCon ON conAsientos.conAsientos = conAsientosCon.conAsientos
WHERE
conasientos.Especial NOT IN ( 'APE','CIR','CCP') AND 
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma  or conAsientosCon.conAsientos IS NOT NULL) and
conAsientos.Anulado = 0 and conAsientos.Posteado = 1 AND 
conAsientos.Empresa_Id = @Empresa and 
conAsientos.Fecha Between @FechaDesde and @FechaHasta and 
conCuentas.Cuenta_Id between @CuentaDesde and @CuentaHasta and 
ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta 
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion ,  conPeriodos.Fecha_Hasta ,
	disFormularios.Descripcion, conCentro1.Centro1_Id, conCentro2.Centro2_Id, disFormularios.Formulario_Id, 
		conCuentas.Description
ORDER BY 1,3,5,6,7

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_ConPolizaDescuadrada.sql*/
-- exec inf_ConPolizaDescuadrada '20210101','20211231',1

drop procedure inf_ConPolizaDescuadrada
go
create procedure inf_ConPolizaDescuadrada(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id Int
)
AS

SELECT vgenAsiSegmentos.Segmento, vgenAsiSegmentos.Segmento_Id, 
	disFormularios.Descripcion, 
SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as Diferencia
from conAsientos 
	LEFT JOIN vgenAsiSegmentos ON vgenAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	LEFT JOIN disFormularios ON disFormularios.disFormularios = conAsientos.Formulario_Id
	inner join conMovCont ON conMovCont.conAsientos=conAsientos.conAsientos
	inner join genEmpresas ON  genEmpresas.genEmpresas = conAsientos.Empresa_Id
	left join conAsientosCon on  conAsientosCon.conAsientos = conAsientos.conAsientos
	WHERE
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and 
		conAsientos.Fecha between @FechaDesde and @FechaHasta and 
		(conAsientosCon.conAsientos is not null or
		conAsientos.Fecha >= genEmpresas.FechaInicioSumma )
GROUP BY vgenAsiSegmentos.Segmento, vgenAsiSegmentos.Segmento_Id, 
	disFormularios.Descripcion
having SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) <> 0
ORDER BY 2,1
GO

	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_conSubDiarioRes.sql*/


-- Inf_conSubDiarioRes '20180101','20180831',1, 'es'
-- Inf_conSubDiarioRes '20180101','20180831',1, 'en'
DROP Procedure Inf_conSubDiarioRes
GO

Create Procedure Inf_conSubDiarioRes
 ( @FechaDesde DateTime, @FechaHasta DateTime, @Empresa Int,@Cultura VarChar(5)=null)
as

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))


SELECT conPeriodos.Fecha_Hasta Fecha, disFormularios.Formulario_Id, 
	conMovCont.Tipomov,
	disFormularios.Descripcion as Formulario, genAsiSegmentos.Segmento_Id,
	conCuentas.Cuenta_Id, 
	CASE WHEN @EnOtro=1 THEN conCuentas.Description ELSE conCuentas.Descripcion END Descripcion,  
	ISNULL(conCentro1.Centro1_Id,' ') as Centro1_Id,
	ISNULL(conCentro2.Centro2_Id,' ') as Centro2_Id,
	SUM(CASE WHEN conMovCont.Tipomov = 1 then  conMovCont.Importe else 0 end) As Debe,
	SUM(CASE WHEN conMovCont.Tipomov = 2 then  conMovCont.Importe else 0 end) As Haber 
	
From conCuentas 
INNER JOIN conMovCont ON conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN disFormularios ON disFormularios.disFormularios = conAsientos.Formulario_Id
INNER JOIN conPeriodos ON conPeriodos.Empresa_Id = @Empresa and
conAsientos.Fecha BETWEEN conPeriodos.Fecha_Desde and conPeriodos.Fecha_Hasta
	inner join genEmpresas ON  genEmpresas.genEmpresas = conAsientos.Empresa_Id
	left join conAsientosCon ON conAsientosCon.conAsientos = conAsientos.conAsientos
WHERE
conAsientos.Anulado = 0 and 
conAsientos.Posteado =1 and 
conAsientos.Empresa_Id = @Empresa and 
conAsientos.Fecha Between @FechaDesde and @FechaHasta AND
(conAsientos.Fecha >= genEmpresas.FechaInicioSumma or conAsientosCon.conAsientos IS Not NULL)

GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion ,  conPeriodos.Fecha_Hasta ,genAsiSegmentos.Segmento_Id,
	disFormularios.Descripcion, conCentro1.Centro1_Id, conCentro2.Centro2_Id, disFormularios.Formulario_Id, 
		concuentas.Description, conMovCont.Tipomov
ORDER BY 1,2,3,5,6,7
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_ControlEntrega.sql*/



-- INF_ControlEntrega  ' ','zzz','20100101','20200131','20100101','20200131','20100101','20200131','20100101','20200131',1
DROP PROCEDURE INF_ControlEntrega 
GO
CREATE PROCEDURE INF_ControlEntrega 
(
	@FormaEntregaDesde VarChar(5),
	@FormaEntregaHasta VarChar(5),
	@FechaFacturaDesde DateTime,
	@FechaFacturaHasta DateTime,
	@FechaAutorizaDesde DateTime,
	@FechaAutorizaHasta DateTime,
	@FechaPedidoDesde DateTime,
	@FechaPedidoHasta DateTime,
	@FechaConformeDesde DateTime,
	@FechaConformeHasta DateTime,
	@Empresa_Id INT 
)
as

SELECT venFormaEntrega.FormaEntrega_id,  venFormaEntrega.razonsocial AS FormaEnterega,  
	venMovConforma.FechaConforma, venMovConforma.FechaRegistro,  
		dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
		genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N ) AS Factura,
		conAsientos.Fecha, venClientes.Cliente_id,  venClieHabitual.NombreFantasia, 
		venClieHabitual.Localidad_Entr,  genProvincias.Provincia_Id Provincia_id_Entr, 
			venPedidos.Fecha FechaPedido,  venPedidos.FechaAutorizo FechaAutoriza,
 Datediff(d,Venpedidos.Fecha,Venpedidos.FechaAutorizo) as DPediAut, 
 Datediff(d,Venpedidos.FechaAutorizo,conAsientos.Fecha) as DAutFact,
 Datediff(d,conAsientos.Fecha, VenMovConforma.FechaConforma) as DFactEnt,
 Datediff(d,VenMovConforma.FechaConforma, VenMovConforma.FechaRegistro) as DEntRec,
 Datediff(d,VenPedidos.Fecha, VenMovConforma.FechaConforma) as DPediEnt,
 Datediff(d,Venpedidos.FechaAutorizo, VenMOvConforma.FechaConforma) as DAutEn
FROM venClientes 
INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venClientes.genEntidades
INNER JOIN venMovimientos ON venMovimientos.Cliente_Id = venClieHabitual.genEntidades and 
				venMovimientos.Sucursal = venClieHabitual.Sucursal

INNER JOIN venFormaEntrega ON venFormaEntrega.venFormaEntrega = venMovimientos.FormaEntrega_Id
INNER JOIN venMovConforma ON venMovConforma.venMovimientos = venMovimientos.venMovimientos
INNER JOIN (SELECT Distinct venMovimientos, venPedidos FROM  venMovConStockCrPed)  AS venMovConStockCrPed ON 
	venMovConStockCrPed.venMovimientos = venMovimientos.venMovimientos
INNER JOIN venPedidos ON  venPedidos.venPedidos = venMovConStockCrPed.venPedidos
INNER JOIN venPediSegmentos ON venPediSegmentos.venPedidos = venPedidos.venPedidos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovimientos.venMovimientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genProvincias ON genProvincias.genProvincias = venClieHabitual.Provincia_Id_Entr
WHERE  
	conAsientos.Empresa_Id = @Empresa_Id and 
	venFormaEntrega.FormaEntrega_Id Between @FormaEntregaDesde and 	@FormaEntregaHasta and
	conAsientos.Fecha between @FechaFacturaDesde and @FechaFacturaHasta and 
	venPedidos.FechaAutorizo Between @FechaAutorizaDesde and @FechaAutorizaHasta and
	venPedidos.Fecha Between @FechaPedidoDesde and @FechaPedidoHasta and
	venMovConforma.FechaConforma BETWEEN @FechaConformeDesde AND @FechaConformeHasta 
Order by 1,3

go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_DATOSEMPRESA.sql*/

DROP PROCEDURE INF_DATOSEMPRESA  
GO
CREATE PROCEDURE INF_DATOSEMPRESA 
(	
	@pEmpresa_Id INT, 
	@pUsuario_Id Int= NULL
)
	
AS

SELECT genEmpresas, genEmpresas.Empresa_Id, Detalle, ExtensionArchivo,genMonedas.Moneda_Id,genPaises.Descripcion as Pais_Id, Cuit,Calle,NoExterior,NoInterior,Colonia,Localidad,
Municipio,Referencia, genProvincias.Descripcion as Provincia_Id, CodigoPostal,FechaInicioSumma,FechaInicioSociedad,NumeroIIBB,IGJ,Actividad,
Regimen,Telefono,genEmpresas.Usuario_Id,genEmpresas.Inactivo,logo,CarpetaEspecial,UsaCantidadAlterna,UsaDespachoImportacion,UsaSerie,
CtaMercaEnTransitoImpor,RazonSocial,FechaCierreVentas,FechaCierreTesoreria,FechaCierreStock,TipoCosto,TipoCosto2,TipoCosto3,
CodLocalidad,CodColonia,CodMunicipio,CondFiscal,PaginaWeb, 
	genInstalacion.Dominio_Id, genMonedas.Descripcion as DescripcionMoneda, genMonedas.Simbolo, 
	ISNULL(genEmpresas.CuentasDeposito,' ') AS CuentasDeposito, genEmpresas.Correo, 
	ISNULL(genUsuarios.Usuario_Id,' ') as Usuario_Id1
FROM genEmpresas 
inner join genPaises on genPaises.genPaises=genEmpresas.Pais_Id
inner join genProvincias on genProvincias.genProvincias=genEmpresas.Provincia_Id
inner join genMonedas on genMonedas.genMonedas=genEmpresas.Moneda_Id
Cross join genInstalacion
Left join genUsuarios ON genUsuarios.genUsuarios = @pUsuario_Id
where genEmpresas = @pEmpresa_Id
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_genPermisos.sql*/
DROP PROCEDURE Inf_genPermisos 
GO
CREATE PROCEDURE Inf_genPermisos (
@UsuarioDesde VarChar(25), 
@UsuarioHasta VarChar(25), 
@Empresa Int
)
as

SELECT genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres, 
	genMenus.Orden, 	
	disFormularios.Formulario_Id, disFormularios.Titulo, 
	genPermisos.Consultar, genPermisos.Actualizar, genPermisos.Borrar, 
	genPermisos.Postear, genPermisos.ModificaCodigos, '  ' AS Grupo
FROM genPermisos inner join disFormularios ON
genPermisos.Formulario_Id =disFormularios.disFormularios
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = genPermisos.Usuario_Id
INNER JOIN genMenus ON
genMenus.Formulario_id = disFormularios.disFormularios
Where
genUsuarios.Usuario_Id between @UsuarioDesde And @UsuarioHasta
UNION ALL
SELECT genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres, 
	genMenus.Orden, 
	disFormularios.Formulario_Id, disFormularios.Titulo, 
	genPermisos.Consultar, genPermisos.Actualizar, genPermisos.Borrar, 
	genPermisos.Postear, genPermisos.ModificaCodigos, Grupo.Usuario_Id AS Grupo
FROM genPermisos inner join disFormularios ON
genPermisos.Formulario_Id =disFormularios.disFormularios
INNER JOIN genGrupos ON
genGrupos.Grupo_Id =genPermisos.Usuario_Id
INNER JOIN genUsuarios as Grupo on 
Grupo.genUsuarios = genGrupos.Grupo_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = genGrupos.Usuario_Id
INNER JOIN genMenus ON
genMenus.Formulario_id = disFormularios.disFormularios

Where
	genUsuarios.Usuario_Id between @UsuarioDesde And @UsuarioHasta AND 
	ISNULL(genPermisos.Empresa_Id,@Empresa) = @Empresa
ORDER BY 1, 3

go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_genUsuGrupo.sql*/
-- Inf_genUsuGrupo ' ','ZZZ'
DROP PROCEDURE Inf_genUsuGrupo
GO
CREATE PROCEDURE Inf_genUsuGrupo (
@GrupoDesde VarChar(25), 
@GrupoHasta VarChar(25), 
@Empresa Int
)
as

SELECT Grupo.Usuario_Id AS Grupo_Id, Grupo.Apellido_y_Nombres as DescripcionGrupo,
	genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as DescripcionUsuario
FROM genGrupos INNER JOIN  genUsuarios as Grupo on 
Grupo.genUsuarios = genGrupos.Grupo_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = genGrupos.Usuario_Id
Where
	Grupo.Usuario_Id between @GrupoDesde And @GrupoHasta and 
	ISNULL(genUsuarios.Empresa_Id, @Empresa) = @Empresa

ORDER BY 1, 3

go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_impControlCfdi.sql*/

-- INF_impControlCfdi 1,'20200401','20200430'
DROP PROCEDURE INF_impControlCfdi
GO
CREATE PROCEDURE INF_impControlCfdi
(
	@Empresa_Id Int, 
	@FechaDesde DateTime, 
	@FechaHasta DateTime
)

AS
SELECT 'En SummaAdv y No En el SAT' AS Tipo, 
vimpCFDIEmitidos.Folio, vimpCFDIEmitidos.Fecha, 
	vimpCFDIEmitidos.UUID, vimpCFDIEmitidos.TipoComprobante, vimpCFDIEmitidos.Anulado, 
	isnull(vimpCFDIEmitidos.FechaAnulacion,vimpCFDIEmitidos.Fecha) FechaAnulacion
FROM vimpCFDIEmitidos 
WHERE
		vimpCFDIEmitidos.Empresa_Id = @Empresa_Id and 
		vimpCFDIEmitidos.Fecha Between @FechaDesde and @FechaHasta and 
		Not exists(SELECT 1 FROM impCfdiMetaDatos WHERE
			impCfdiMetaDatos.UUID = vimpCFDIEmitidos.UUID AND 
			impCfdiMetaDatos.Empresa_Id = @Empresa_Id)
UNION ALL
SELECT 'En el SAT y no En SummaAdv' AS Tipo, 
' ' Folio, impCfdiMetaDatos.FechaEmision, 
	impCfdiMetaDatos.UUID, impCfdiMetaDatos.EfectoComprobante, 1-impCfdiMetaDatos.Estatus, 
	isnull(impCfdiMetaDatos.FechaCancelacion,impCfdiMetaDatos.FechaEmision)
FROM impCfdiMetaDatos
WHERE
	impCfdiMetaDatos.EfectoComprobante IN ('I','E') AND 
	impCfdiMetaDatos.Empresa_id = @Empresa_Id and 
	impCfdiMetaDatos.FechaEmision Between @FechaDesde and @FechaHasta  and 
	Not exists(SELECT 1 FROM vimpCFDIEmitidos WHERE
		vimpCFDIEmitidos.UUID =  impCfdiMetaDatos.UUID AND
		vimpCFDIEmitidos.Empresa_Id = @Empresa_Id)
UNION ALL
SELECT 'Cancelada SummaAdv y No En el SAT' AS Tipo, 
vimpCFDIEmitidos.Folio, vimpCFDIEmitidos.Fecha, 
	vimpCFDIEmitidos.UUID, vimpCFDIEmitidos.TipoComprobante, 1 Anulado, 
	vimpCFDIEmitidos.FechaAnulacion
FROM vimpCFDIEmitidos inner join impCfdiMetaDatos ON 
			impCfdiMetaDatos.UUID = vimpCFDIEmitidos.UUID  AND 
			vimpCFDIEmitidos.Empresa_Id = @Empresa_Id
WHERE
		vimpCFDIEmitidos.Empresa_Id = @Empresa_Id and 
		vimpCFDIEmitidos.Fecha Between @FechaDesde and @FechaHasta and 
		vimpCFDIEmitidos.Anulado = 1 AND 
		impCfdiMetaDatos.Estatus = 1
UNION ALL
SELECT 'Cancelada SAT y No En el SummaAdv' AS Tipo, 
vimpCFDIEmitidos.Folio, vimpCFDIEmitidos.Fecha, 
	vimpCFDIEmitidos.UUID, vimpCFDIEmitidos.TipoComprobante, 0 Anulado, 
	vimpCFDIEmitidos.FechaAnulacion
FROM vimpCFDIEmitidos inner join impCfdiMetaDatos ON 
			impCfdiMetaDatos.UUID = vimpCFDIEmitidos.UUID  AND 
			vimpCFDIEmitidos.Empresa_Id = @Empresa_Id
WHERE
		vimpCFDIEmitidos.Empresa_Id = @Empresa_Id and 
		vimpCFDIEmitidos.Fecha Between @FechaDesde and @FechaHasta and 
		vimpCFDIEmitidos.Anulado = 0 AND 
		impCfdiMetaDatos.Estatus = 0
ORDER BY 1, 3, 2



GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_ImpSifere.sql*/
DROP PROCEDURE Inf_impSiferePerc
GO
CREATE PROCEDURE Inf_impSiferePerc
(
@pEmpresa_id int,
@pMes int,
@pAnio int
)
AS
SELECT impJurisdicciones.Juris_Id, 
impJurisdicciones.Descripcion DescJuris, conAsientos.Fecha, 
comProveedores.Proveed_Id, comProveedores.RazonSocial, genEntidades.Cuit,
conMovCont.Importe * conAsientos.Cambio Importe, comMovImpuestos.Porcentaje,
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, 
genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) Comp,
comMovImpuestos.Base_Imponible Base
FROM comMovProv
Inner Join genAsiSegmentos On genAsiSegmentos.Asiento_Id = comMovProv.comMovProv
Inner Join comProveedores On comProveedores.genEntidades = comMovProv.Proveed_Id
Inner Join genEntidades On genEntidades.genEntidades = comProveedores.genEntidades
Inner Join conAsientos On conAsientos.conAsientos = comMovProv.comMovProv
Inner Join comMovImpuestos On comMovImpuestos.comMovProv = comMovProv.comMovProv
Inner Join comImpuestos On comImpuestos.comImpuestos = comMovImpuestos.Impuesto_Id
Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = comImpuestos.TipoImpuesto
Inner Join impJurisdicciones On impJurisdicciones.impJurisdicciones = impTipoImpuesto.Juris_Id
Inner Join conMovCont On conMovCont.conAsientos = comMovImpuestos.comMovProv And 
conMovCont.Renglon = comMovImpuestos.conRenglon
WHERE conAsientos.Anulado = 0 And impTipoImpuesto.Juris_Id <> 0 And 
impTipoImpuesto.Referencia04 = 'PERC' And
genEntidades.Cuit <> '33-69345023-9' And conAsientos.Empresa_Id = @pEmpresa_id And 
Year(conAsientos.Fecha) = @pAnio And Month( conAsientos.Fecha) = @pMes 
GO

DROP PROCEDURE Inf_impSifereRet
GO
CREATE PROCEDURE Inf_impSifereRet
(
@pEmpresa_id int,
@pMes int,
@pAnio int
)
AS
SELECT impJurisdicciones.Juris_Id, impJurisdicciones.Descripcion DescJuris, 
conAsientos.Fecha, venClientes.Cliente_Id, venClientes.RazonSocial, 
genEntidades.Cuit, conMovCont.Importe, tesRengMoviRetClie.Porcentaje,
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, 
genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) Comp,
tesRengMoviRetClie.BaseImponible Base
FROM tesMovimientos
Inner Join conAsientos On conAsientos.conAsientos = tesMovimientos.tesMovimientos
Inner Join genAsiSegmentos On genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
Inner Join venMovimientos On venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
Inner Join tesRengMovi On tesRengMovi.tesMovimientos = tesMovimientos.tesMovimientos
Inner Join tesRengMoviRetClie On tesRengMoviRetClie.tesMovimientos = tesRengMovi.tesMovimientos And 
		tesRengMoviRetClie.conRenglon = tesRengMovi.conRenglon
Inner Join conMovCont On conMovCont.conAsientos = tesRengMovi.tesMovimientos And conMovCont.Renglon = tesRengMovi.conRenglon
Inner Join tesIdRetClien On tesIdRetClien.Cartera_Id = tesRengMovi.Cartera_Id
Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = tesIdRetClien.TipoImpuesto
Inner Join impJurisdicciones On impJurisdicciones.impJurisdicciones = impTipoImpuesto.Juris_Id
Inner Join genEntidades On genEntidades.genEntidades = venMovimientos.Cliente_Id
Inner Join venClientes On genEntidades.genEntidades = venClientes.genEntidades
WHERE conAsientos.Empresa_Id = @pEmpresa_id And Year(conAsientos.Fecha) = @pAnio And 
conAsientos.Anulado = 0 And Month( conAsientos.Fecha) = @pMes
GO






Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_MatrizDistribCantidad.sql*/
-- INF_MatrizDistribCantidad 1 ,50,30, 15,4,1, 6, 3
drop PROCEDURE INF_MatrizDistribCantidad
GO
CREATE PROCEDURE INF_MatrizDistribCantidad
(
	@Empresa Int, 
	@T INT, 
	@A INT, 
	@B INT,
	@C INT,
	@D INT, 
	@MASDEX INT,
	@MENOSDX INT,
	@FechaDesde DateTime, 
	@FechaHasta DateTime
)
AS
SET NOCOUNT ON
DECLARE @Total INT 
DECLARE @Tn INT
DECLARE @An INT
DECLARE @Bn INT
DECLARE @Cn INT
DECLARE @Dn INT

select 	stkProductos.stkProductos,
	isnull(Cantidad,0) Cantidad, iSNULL(MONTO,0) Monto	INTO #Temp1
		from stkProductos left join 
		(select venMovConStockCr.Producto_Id,
		 COUNT(1) Cantidad  , SUM(venMovConStockCr.CantFacturada * venMovConStockCr.PrecioVenta * conAsientos.Cambio) AS Monto
		from venMovimientos INNER JOIN  conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIn genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON
		venMovConStockCr.venMovimientos = venMovimientos.venMovimientos 
		where
			conAsientos.Fecha between @FechaDesde And @FechaHasta and 
			conAsientos.Anulado = 0 and
			genAsiSegmentos.Empresa_Id = @Empresa
		GROUP BY venMovConStockCr.Producto_Id) AS xxxx on
		stkProductos.stkProductos = xxxx.Producto_Id
		Where
			stkProductos.Clase in ('E','-') AND 
			ISNULL(stkProductos.Empresa_Id, @Empresa)= @Empresa and 
			stkProductos.Inactivo = 0 and stkProductos.Posteado = 1

SET @Total = (SELECT COUNT(1) FROM #TEMP1)
SET @Tn= @Total * @T / 100
SET @An= @Total * (@T+@A) / 100
SET @Bn= @Total * (@T+@A+@B) / 100
SET @Cn= @Total * (@T+@A+@B+@C) / 100
SET @Dn= @Total * (@T+@A+@B+@C+@D) / 100

SELECT 	1 AS Orden,  'T' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then 1 else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then 1 else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then 1 else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad
from #TEMP1) AS xxx
Where N <= @Tn
UNION ALL
SELECT 2 AS Orden,  'A' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then 1 else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then 1 else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then 1 else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad
from #TEMP1) AS xxx
Where N BETWEEN @Tn+1 AND @An 

UNION ALL
SELECT 3 AS Orden, 'B' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then 1 else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then 1 else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then 1 else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad
from #TEMP1) AS xxx
Where N BETWEEN @An+1 AND @Bn 
UNION ALL
SELECT 4 AS Orden, 'C' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then 1 else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then 1 else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then 1 else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad
from #TEMP1) AS xxx
Where N BETWEEN @Bn+1 AND @Cn 
UNION ALL
SELECT 4 AS Orden, 'D' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then 1 else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then 1 else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then 1 else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad
from #TEMP1) AS xxx
Where N BETWEEN @Cn+1 AND @Dn 

order by 1


GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_MatrizDistribMonto.sql*/
-- INF_MatrizDistribMonto 1 ,50,30, 15,4,1, 6, 3
drop PROCEDURE INF_MatrizDistribMonto
GO
CREATE PROCEDURE INF_MatrizDistribMonto
(
	@Empresa Int, 
	@T INT, 
	@A INT, 
	@B INT,
	@C INT,
	@D INT, 
	@MASDEX INT,
	@MENOSDX INT, 
	@FechaDesde DateTime, 
	@FechaHasta DateTime
)
AS
SET NOCOUNT ON
DECLARE @Total INT 
DECLARE @Tn INT
DECLARE @An INT
DECLARE @Bn INT
DECLARE @Cn INT
DECLARE @Dn INT


select 	stkProductos.stkProductos,
	isnull(Cantidad,0) Cantidad, iSNULL(MONTO,0) Monto	INTO #Temp1
		from stkProductos left join 
		(select venMovConStockCr.Producto_Id,
		 COUNT(1) Cantidad  , SUM(venMovConStockCr.CantFacturada * venMovConStockCr.PrecioVenta * conAsientos.Cambio) AS Monto
		from venMovimientos INNER JOIN  conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIn genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON
		venMovConStockCr.venMovimientos = venMovimientos.venMovimientos 
		where
			conAsientos.Fecha between @FechaDesde And @FechaHasta and 
			conAsientos.Anulado = 0 and
			genAsiSegmentos.Empresa_Id = @Empresa
		GROUP BY venMovConStockCr.Producto_Id) AS xxxx on
		stkProductos.stkProductos = xxxx.Producto_Id
		Where
			stkProductos.Clase in ('E','-') AND 
			ISNULL(stkProductos.Empresa_Id, @Empresa)= @Empresa and 
			stkProductos.Inactivo = 0 and stkProductos.Posteado = 1

	



SET @Total = (SELECT COUNT(1) FROM #TEMP1)
SET @Tn= @Total * @T / 100
SET @An= @Total * (@T+@A) / 100
SET @Bn= @Total * (@T+@A+@B) / 100
SET @Cn= @Total * (@T+@A+@B+@C) / 100
SET @Dn= @Total * (@T+@A+@B+@C+@D) / 100

SELECT 	1 AS Orden,  'T' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N <= @Tn
UNION ALL
SELECT 2 AS Orden,  'A' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @Tn+1 AND @An 

UNION ALL
SELECT 3 AS Orden, 'B' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @An+1 AND @Bn 
UNION ALL
SELECT 4 AS Orden, 'C' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @Bn+1 AND @Cn 
UNION ALL
SELECT 4 AS Orden, 'D' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @Cn+1 AND @Dn 

order by 1


GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_MatrizDistribStock.sql*/
-- INF_MatrizDistribStock 1 ,50,30, 15,4,1, 6, 3, '20180101','20180630'
drop PROCEDURE INF_MatrizDistribStock
GO
CREATE PROCEDURE INF_MatrizDistribStock
(
	@Empresa Int, 
	@T INT, 
	@A INT, 
	@B INT,
	@C INT,
	@D INT, 
	@MASDEX INT,
	@MENOSDX INT,
	@FechaDesde DateTime, 
	@FechaHasta DateTime
)
AS
SET NOCOUNT ON
DECLARE @Total INT 
DECLARE @Tn INT
DECLARE @An INT
DECLARE @Bn INT
DECLARE @Cn INT
DECLARE @Dn INT


select 	stkProductos.stkProductos,
	isnull((select COUNT(1) 
		from venMovimientos INNER JOIN  conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIn genAsiSegmentos ON
		genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON
		venMovConStockCr.venMovimientos = venMovimientos.venMovimientos and
		venMovConStockCr.Producto_Id = stkProductos.stkProductos
		where
			conAsientos.Fecha between @FechaDesde And @FechaHasta and 
			conAsientos.Anulado = 0 and
			genAsiSegmentos.Empresa_Id = @Empresa),0) as Cantidad,
			SUM(ISNULL(stkExistencia.Cantidad ,0) * stkProductos.CostoUltCompra) Monto
			INTO #Temp1
		from stkProductos left join stkExistencia ON
		stkProductos.stkProductos = stkExistencia.Producto_Id
		Where
			stkProductos.Clase in ('E','-') AND 
			ISNULL(stkProductos.Empresa_Id, @Empresa)= @Empresa and 
			stkProductos.Inactivo = 0 and stkProductos.Posteado = 1
GROUP BY stkProductos.stkProductos


SET @Total = (SELECT COUNT(1) FROM #TEMP1)
SET @Tn= @Total * @T / 100
SET @An= @Total * (@T+@A) / 100
SET @Bn= @Total * (@T+@A+@B) / 100
SET @Cn= @Total * (@T+@A+@B+@C) / 100
SET @Dn= @Total * (@T+@A+@B+@C+@D) / 100

SELECT 	1 AS Orden,  'T' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N <= @Tn
UNION ALL
SELECT 2 AS Orden,  'A' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @Tn+1 AND @An 

UNION ALL
SELECT 3 AS Orden, 'B' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @An+1 AND @Bn 
UNION ALL
SELECT 4 AS Orden, 'C' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @Bn+1 AND @Cn 
UNION ALL
SELECT 4 AS Orden, 'D' AS Tipo,
		ISNULL(SUM(CASE WHEN Cantidad >= @MASDEX then Monto else 0 end),0) as MasDe, 
		ISNULL(SUM(CASE WHEN Cantidad < @MASDEX and Cantidad >= @MENOSDX  then Monto else 0 end),0) as Entre, 
		ISNULL(SUM(CASE WHEN Cantidad < @MENOSDX  then Monto else 0 end),0) as MenosDe 
FROM (
select ROW_NUMBER() OVER( ORDER BY Monto desc ) as N,
	Cantidad,Monto
from #TEMP1) AS xxx
Where N BETWEEN @Cn+1 AND @Dn 

order by 1


GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_NominaCfdi.sql*/
-- INF_NominaCfdi  0,9999, '20210601','20210630',1


drop PROCEDURE INF_NominaCfdi 
go
CREATE PROCEDURE INF_NominaCfdi 
(
	@LegajoDesde Int, 
	@LegajoHasta Int, 
	@FechaDesde DateTime, 
	@FechaHasta DateTime,
	@Empresa_Id Int
)
as
SELECT 	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Nomina,
	sueLiquidacion.Descripcion, 
	suePersonal.Legajo as NroEmpleado, suePersonal.ApellidoPaterno +','+
	suePersonal.ApellidoMaterno+','+suePersonal.Nombres Nombre, 
	sueLiquidacion.FechaFinal, sueNominaCfdi.FechaTimbrado, 
	suePersonal.NumeroDoc as Curp,
	SUM(CASE WHEN sueTerminada.Signo = 1 AND SueConceptos.EsExento = 0 THEN sueTerminada.Importe else 0 end) as Sueldo,
	SUM(CASE WHEN sueTerminada.Signo = 1  AND SueConceptos.EsExento = 1 THEN sueTerminada.Importe else 0 end) as SueldoExento,
	SUM(CASE WHEN sueTerminada.Signo = -1 and sueConceptos.TipoDeduccion = '002'  then sueTerminada.Importe else 0 end) as ISPT,
	SUM(CASE WHEN sueTerminada.Signo = -1 and sueConceptos.TipoDeduccion = '001'  then sueTerminada.Importe else 0 end) as IMMS,
	SUM(CASE WHEN sueTerminada.Signo = -1 and sueConceptos.TipoDeduccion NOT IN('001','002')   then sueTerminada.Importe else 0 end) as OTROS, 
	sueNominaCfdi.UUID
from suePersonal inner join sueNominaCfdi ON
	suePersonal.genEntidades= sueNominaCfdi.Legajo
	INNER JOIN sueLiquidacion ON
	sueLiquidacion.sueLiquidacion = sueNominaCfdi.sueLiquidacion 
	INNER JOIN sueterminada ON 
	sueterminada.sueLiquidacion = sueNominaCfdi.sueLiquidacion AND 
	sueterminada.legajo = sueNominaCfdi.Legajo
	INNER JOIN sueConceptos ON
	sueConceptos.sueConceptos = sueterminada.concepto_id
	INNER JOIN conAsientos ON  conAsientos.conAsientos = sueLiquidacion.sueLiquidacion
	INNER JOIN genAsiSegmentos on genAsiSegmentos.Asiento_Id =conAsientos.conAsientos
	Where
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		sueterminada.Signo != 0 and  
		sueNominaCfdi.Anulada = 0 and 
		suepersonal.Legajo between @LegajoDesde and @LegajoHasta and 
		sueLiquidacion.FechaFinal between @FechaDesde And  @FechaHasta
group by suePersonal.Legajo , suePersonal.ApellidoPaterno , 
	suePersonal.ApellidoMaterno, suePersonal.Nombres,
	sueLiquidacion.FechaFinal, sueNominaCfdi.FechaTimbrado, 
	suePersonal.NumeroDoc , 
	sueNominaCfdi.UUID, sueLiquidacion.Descripcion, sueLiquidacion.Semana, 
	genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N
	order by 1,3

GO	


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_PapelTrabajo1.sql*/
-- INF_PapelTrabajo1 2019,'INPC',1
-- INF_PapelTrabajo1Ind 2019,'INPC',1
-- repote de axi
DROP PROCEDURE INF_PapelTrabajo1
go
CREATE PROCEDURE INF_PapelTrabajo1
(
	@Ejercicio Int, 
	@Indice_Id VarChar(5),
	@Empresa_Id Int,
	@Periodo Int
)
AS
SELECT Rubro_Id, RubroAxi_Id, Descripcion, P01, P02, P03, P04, P05, P06, 
	P07, P08, P09, P10, P11, P12, 
	Convert(Numeric(18,2), (P01 + P02 + P03 + P04 + P05 + P06 + P07 + P08 + P09 + P10 + P11 + P12)) as Total,
	Convert(Numeric(18,2), (P01 + P02 + P03 + P04 + P05 + P06 + P07 + P08 + P09 + P10 + P11 + P12) / Periodos) as Promedio,
	Periodos
FROM 
(
SELECT conRubrosAxi.Rubro_Id,
		conRubrosAxi.RubroAxi_Id, conRubrosAxi.Descripcion, 
			ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 1 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 1),0) as P01, 

ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 2 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 						
						conperiodos.Periodo <= 2),0) as P02, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 3 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 3),0) as P03, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 4 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 4),0) as P04, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 5 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 5),0) as P05, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 6 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 6),0) as P06, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 7 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 7),0) as P07, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 8 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 8),0) as P08, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 9 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 9),0) as P09, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 10 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 10),0) as P10, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 11 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 11),0) as P11, 
ISNULL((SELECT SUM(conMovCont.Importe*(-2*conMovCont.tipomov+3))
				from conasientos INNER JOIN conmovcont ON
					conasientos.conasientos  = conmovcont.conasientos
					INNER JOIN conCuentas ON
					conCuentas.conCuentas = conmovcont.Cuenta_Id and 
					conCuentas.RubroAxi_Id = conRubrosAxi.conRubrosAxi
					INNER JOIN conperiodos ON
					conasientos.fecha between conperiodos.fecha_desde and conperiodos.fecha_hasta
					Where
						conAsientos.Anulado = 0 and 
						conAsientos.Posteado = 1 and
						concuentas.Ajustable = 1 and 
						@Periodo >= 12 and 
						conasientos.Empresa_id = @Empresa_Id and 
						conasientos.especial NOT IN ('CCP','CIR','AXI') AND 
						conperiodos.Ejercicio = @Ejercicio and 
						conperiodos.Periodo <= 13),0) as P12, 
						(Select count(1) from conPeriodos INNER JOIN genEmpresas ON
							genEmpresas.genEmpresas = @Empresa_Id AND 
							conPeriodos.Fecha_Desde >= genEmpresas.FechaInicioSociedad and 
							conPeriodos.Ejercicio = @Ejercicio and 
							conPeriodos.Periodo <= @Periodo) as Periodos
from conRubrosAxi inner join conRubros ON 
	conRubros.Rubro_Id = conRubrosAxi.Rubro_Id
where 
	conRubros.Tipo  in ('ACT','PAS')
) AS XXX
ORDER BY 1,2

GO


DROP PROCEDURE INF_PapelTrabajo1Ind
go
CREATE PROCEDURE INF_PapelTrabajo1Ind
(
	@Ejercicio Int, 
	@Indice_Id VarChar(5),
	@Empresa_Id Int, 
	@Periodo Int
)
AS
SELECT 
isnull((Select conIndAjusCuerpo.Indice 
from conIndAjusCuerpo 
	INNER JOIN conIndicesAjustes ON conIndicesAjustes.conIndicesAjuste =conIndAjusCuerpo.Indice_Id
	INNER JOIN conPeriodos ON conPeriodos.Ejercicio =conIndAjusCuerpo.Ejercicio and 
						conPeriodos.Periodo =conIndAjusCuerpo.Periodo

Where
		conPeriodos.Periodo = 12 and 
		conPeriodos.Ejercicio = @Ejercicio-1 and 
		conPeriodos.Empresa_Id = @Empresa_Id and 
		conIndicesAjustes.Indice_Id = @Indice_Id),1) AS IndiceInicial,
isnull((Select conIndAjusCuerpo.Indice 
from conIndAjusCuerpo 
	INNER JOIN conIndicesAjustes ON conIndicesAjustes.conIndicesAjuste =conIndAjusCuerpo.Indice_Id
	INNER JOIN conPeriodos ON conPeriodos.Ejercicio =conIndAjusCuerpo.Ejercicio and 
		conPeriodos.Periodo =conIndAjusCuerpo.Periodo
Where
		conPeriodos.Periodo = @Periodo and 
		conPeriodos.Ejercicio = @Ejercicio and 
		conPeriodos.Empresa_Id = @Empresa_Id and 
		conIndicesAjustes.Indice_Id = @Indice_Id),1) AS IndiceFinal
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proCadenaProduccion.sql*/
-- inf_CadenaProduccion 'CH-105-100EP '

DROP PROCEDURE inf_proCadenaProduccionAux
GO
CREATE PROCEDURE inf_proCadenaProduccionAux
(
	@pReceta_id INT, 
	@TablaTemp VarChar(50), 
	@Nivel Int
)

AS

Declare @Sql VarChar(max)


set @Sql = 
'INSERT INTO '+@TablaTemp+
' Select proRecetas.Receta_Id, proRecetas.Descripcion, 	proCentroProductivo.CtroProd_Id,  proCentroProductivo.Descripcion as DescripcionCentro, '+
	str(@Nivel,3)+' AS Nivel
From proRecetas INNER JOIN proProductosReceta ON
proProductosReceta.Receta_Id =  proRecetas.proRecetas 
INNER JOIN proCentroProductivo ON
proCentroProductivo.proCentroProductivo = proRecetas.CtroProd_Id
Where
	proRecetas.proRecetas = '+STR(@pReceta_Id,10)

Exec sp_sqlexec @Sql

DECLARE @Receta_Id int
DECLARE @Renglon INT

-- BUSCO EL CUERPO
DECLARE CUERPO_CURSOR1 CURSOR LOCAL DYNAMIC FOR
SELECT  proProductosReceta.Receta_id, proRecetasProd.Renglon
from proProductosReceta 
inner join proRecetasProd ON 
	proRecetasProd.Producto_Id = proProductosReceta.Producto_Id  and 
	proRecetasProd.EntradaSalida = 'C' and 
	proProductosReceta.Principal = 1
Where
	proRecetasProd.Receta_Id = @pReceta_Id
order by 2

OPEN CUERPO_CURSOR1
  

FETCH NEXT FROM CUERPO_CURSOR1
INTO @Receta_Id, @Renglon
set @Nivel =   @Nivel+1

WHILE @@FETCH_STATUS = 0  
BEGIN  

	exec inf_proCadenaProduccionAux @Receta_id, '##TempCadena', @Nivel

	FETCH NEXT FROM CUERPO_CURSOR1
	INTO @Receta_Id, @Renglon
END
CLOSE CUERPO_CURSOR1;  
DEALLOCATE CUERPO_CURSOR1;  

go


DROP PROCEDURE inf_proCadenaProduccion
GO
CREATE PROCEDURE inf_proCadenaProduccion
(
	@Producto_id VarChar(25)
)

AS

select proRecetas.Receta_Id, proRecetas.Descripcion, 
	proCentroProductivo.CtroProd_Id,  proCentroProductivo.Descripcion as DescripcionCentro, 
	1 AS Nivel
INTO ##TempCadena
From proRecetas INNER JOIN proProductosReceta ON
proProductosReceta.Receta_Id =  proRecetas.proRecetas 
inner join stkProductos ON
stkProductos.stkProductos = proProductosReceta.Producto_Id and 
proProductosReceta.Principal = 1
INNER JOIN proCentroProductivo ON
proCentroProductivo.proCentroProductivo = proRecetas.CtroProd_Id
Where
	stkProductos.Producto_Id = @Producto_Id
	
DECLARE @Receta_Id int
DECLARE @Renglon INT
set @Receta_Id = (select max(proProductosReceta.Receta_Id) from 
	proProductosReceta inner join stkProductos ON 
	stkProductos.stkProductos = proProductosReceta.Producto_Id and 
	proProductosReceta.Principal = 1
	Where 
	stkProductos.Producto_Id = @Producto_Id	)



DECLARE CUERPO_CURSOR CURSOR FOR
SELECT  proProductosReceta.Receta_id, proRecetasProd.Renglon
from proProductosReceta 
inner join proRecetasProd ON 
	proRecetasProd.Producto_Id = proProductosReceta.Producto_Id  and 
	proRecetasProd.EntradaSalida = 'C' and 
	proProductosReceta.Principal = 1
Where
	proRecetasProd.Receta_Id = @Receta_Id
order by 2

OPEN CUERPO_CURSOR 
  

FETCH NEXT FROM CUERPO_CURSOR
INTO @Receta_Id, @Renglon
  
WHILE @@FETCH_STATUS = 0  
BEGIN  

	exec inf_proCadenaProduccionAux @Receta_id, '##TempCadena', 2

	FETCH NEXT FROM CUERPO_CURSOR
	INTO @Receta_Id, @Renglon
END
CLOSE CUERPO_CURSOR;  
DEALLOCATE CUERPO_CURSOR;  
SELECT * FROM ##TempCadena
DROP TABLE ##TempCadena
go


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proCausasMov.sql*/
-- Inf_proCausasMov ' ', 'ZZZ','20190801','20190831',1
drop Procedure Inf_proCausasMov
go
CREATE Procedure Inf_proCausasMov
(
	@CausaDesde VarChar(5),
	@CausaHasta VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id int
)
AS

SELECT 
proCausas.Causa_Id, proCausas.Descripcion as DescripcionCausa, 
conAsientos.Fecha,
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProd,
		proOrden.Cantidad - proOrden.CantidadTerminada as Cantidad , 
		stkUniMed.Medida_Id
from proOrden INNER JOIN proOrdenSegmento ON
proOrden.proOrden = proOrdenSegmento.proOrden
inner join proMovCierreOrden ON
proMovCierreOrden.proOrden = proOrden.proOrden
inner join  proCausas ON
proCausas.proCausas = proMovCierreOrden.Causa_Id
INNER JOIN conAsientos ON
conAsientos.conAsientos =  proMovCierreOrden.proMovCierreOrden
INNER JOIN genAsiSegmentos on
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN stkProductos on 
stkProductos.stkProductos = proOrden.Producto_Id
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = stkProductos.Medida_Id
WHERE
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 AND 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	proCausas.Causa_Id between @CausaDesde and @CausaHasta
	ORDER BY 1,2
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proConsMateriales.sql*/
-- EXEC Inf_proConsMateriales ' ','ZZZ',' ','ZZZ',1
DROP PROCEDURE Inf_proConsMateriales
GO
CREATE PROCEDURE Inf_proConsMateriales
(
	@CtroProdDesde VarChar(8),
	@CtroProdHasta VarChar(8),
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id Int
)

AS

Select stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepo, 
	proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCentroProd,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	SUM(proOrdenProd.Cantidad* case when proOrdenProd.EntradaSalida='C' THEN 1 ELSE -1 END ) as Cantidad, 
	stkUniMed.Medida_Id
FROM proOrden INNER JOIN proOrdenProd ON
	proOrden.proOrden = proOrdenProd.proOrden
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = proOrdenProd.Producto_Id 
	inner join stkUniMed ON
	stkUniMed.stkUniMed = proOrdenProd.Medida_Id
	INNER JOIN stkDepositos ON
	stkDepositos.stkDepositos = proOrdenProd.Deposito_Id
	inner join proRecetas ON
	proRecetas.proRecetas = proOrden.Receta_Id
	INNER JOIN proCentroProductivo ON 
	proCentroProductivo.proCentroProductivo = proRecetas.CtroProd_Id
	INNER JOIN proOrdenSegmento ON
	proOrdenSegmento.proOrden = proOrden.proOrden
	WHERE
		proOrdenProd.EntradaSalida = 'C' and 
		stkDepositos.Deposito_Id BETWEEN @DepositoDesde AND @DepositoHasta AND
		proCentroProductivo.CtroProd_Id BETWEEN @CtroProdDesde AND @CtroProdHasta AND 
		proOrdenSegmento.Empresa_Id = @Empresa_Id and 
		proOrden.FechaProduccion between @FechaDesde And @FechaHasta
GROUP BY stkDepositos.Deposito_Id, stkDepositos.Descripcion ,
	proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion ,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id
HAVING SUM(proOrdenProd.Cantidad* case when proOrdenProd.EntradaSalida='C' THEN 1 ELSE -1 END ) > 0
ORDER BY 1,3,5
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proCostos.sql*/
-- Inf_proCostos ' ', 'ZZZ','20190801','20190831',1
drop Procedure Inf_proCostos
go
CREATE Procedure Inf_proCostos
(
	@ProductoDesde VarChar(5),
	@ProductoHasta VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id int
)
AS

SELECT 
		stkProductos.Producto_Id, stkProductos.Descripcion ,
		isnull((SELECT sum(stkMoviCuerpo.Cantidad) from proMovCierreOrden 
		INNER JOIN proOrden ON	proOrden.proOrden = proMovCierreOrden.proOrden 
		INNER JOIN proOrdenStockCosto on
		proMovCierreOrden.proMovCierreOrden = proOrdenStockCosto.proMovCierreOrden 
		inner join stkMoviCabe on	proOrdenStockCosto.stkMoviCabe = stkMoviCabe.stkMoviCabe
		INNER JOIN conAsientos ON  conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkMoviCuerpo ON
			stkMoviCuerpo.stkMoviCabe = proOrdenStockCosto.stkMoviCabe  and 
			stkMoviCuerpo.Renglon =  proOrdenStockCosto.Renglon and 
			stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1 and 
			stkMoviCabe.Signo = 1 and
			conAsientos.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Empresa_Id = @Empresa_Id),0) as Cantidad,
			stkUniMed.Medida_Id, 

		isnull((SELECT sum(stkMoviCuerpo1.Cantidad*stkMoviCuerpo1.CostoUnitario*proOrdenStockCosto.PorcentajeCosto/100) 
		from proMovCierreOrden
		INNER JOIN proOrden ON	proOrden.proOrden = proMovCierreOrden.proOrden 
		INNER JOIN proOrdenStockCosto on
		proMovCierreOrden.proMovCierreOrden = proOrdenStockCosto.proMovCierreOrden 
		inner join stkMoviCabe on	proOrdenStockCosto.stkMoviCabe = stkMoviCabe.stkMoviCabe
		INNER JOIN conAsientos ON  conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkMoviCuerpo ON
			stkMoviCuerpo.stkMoviCabe = proOrdenStockCosto.stkMoviCabe  and 
			stkMoviCuerpo.Renglon =  proOrdenStockCosto.Renglon and 
			stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
		inner join proOrdenStock on
		proOrdenStock.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden 
		INNER JOIN stkMoviCabe stkMoviCabe1 ON 
		stkMoviCabe1.stkMoviCabe = proOrdenStock.stkMoviCabe and 
		stkMoviCabe1.Signo = -1 
		INNER JOIN stkMoviCuerpo stkMoviCuerpo1 on
			stkMoviCuerpo1.stkMoviCabe = stkMoviCabe1.stkMoviCabe  
        INNER JOIN conAsientos conAsientos1 on 
		conAsientos1.conAsientos = stkMoviCabe1.stkMoviCabe
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1 and 
			conAsientos1.Anulado = 0 and 
			conAsientos1.Posteado = 1 and 
			stkMoviCabe.Signo = 1 and
			conAsientos1.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Empresa_Id = @Empresa_Id),0) as MateriaPrima, 

		isnull((SELECT sum(proMovCierreTrabajos3.Cantidad * proMovCierreTrabajos3.Precio*proOrdenStockCosto.PorcentajeCosto/100) 
		from proMovCierreOrden
		INNER JOIN proOrden ON	proOrden.proOrden = proMovCierreOrden.proOrden 
		INNER JOIN proOrdenStockCosto on
		proMovCierreOrden.proMovCierreOrden = proOrdenStockCosto.proMovCierreOrden 
		inner join stkMoviCabe on	proOrdenStockCosto.stkMoviCabe = stkMoviCabe.stkMoviCabe
		INNER JOIN conAsientos ON  conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkMoviCuerpo ON
			stkMoviCuerpo.stkMoviCabe = proOrdenStockCosto.stkMoviCabe  and 
			stkMoviCuerpo.Renglon =  proOrdenStockCosto.Renglon and 
			stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
			inner join proMovCierreTrabajos3 ON
				proMovCierreTrabajos3.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
			INNER JOIN conAsientos conAsientos1 ON 
			conAsientos1.conAsientos = proMovCierreOrden.proMovCierreOrden
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1 and 
			conAsientos1.Anulado = 0 and 
			conAsientos1.Posteado = 1 and 
			stkMoviCabe.Signo = 1 and
			conAsientos1.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Empresa_Id = @Empresa_Id),0) as Trabajo3, 

					isnull((SELECT sum(proMovCierreRecursos.Cantidad*proMovCierreRecursos.Costo*proOrdenStockCosto.PorcentajeCosto/100) 
		from proMovCierreOrden
		INNER JOIN proOrden ON	proOrden.proOrden = proMovCierreOrden.proOrden 
		INNER JOIN proOrdenStockCosto on
		proMovCierreOrden.proMovCierreOrden = proOrdenStockCosto.proMovCierreOrden 
		inner join stkMoviCabe on	proOrdenStockCosto.stkMoviCabe = stkMoviCabe.stkMoviCabe
		INNER JOIN conAsientos ON  conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkMoviCuerpo ON
			stkMoviCuerpo.stkMoviCabe = proOrdenStockCosto.stkMoviCabe  and 
			stkMoviCuerpo.Renglon =  proOrdenStockCosto.Renglon and 
			stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
			inner join proMovCierreRecursos ON
				proMovCierreRecursos.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
			INNER JOIN conAsientos conAsientos1 ON 
			conAsientos1.conAsientos = proMovCierreOrden.proMovCierreOrden
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1 and 
			conAsientos1.Anulado = 0 and 
			conAsientos1.Posteado = 1 and 
			stkMoviCabe.Signo = 1 and
			conAsientos1.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Empresa_Id = @Empresa_Id),0) as Recursos

from stkProductos INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = stkProductos.Medida_Id
WHERE
	stkproductos.Producto_Id between @ProductoDesde And @ProductoHasta and 
		isnull((SELECT sum(stkMoviCuerpo.Cantidad) from proMovCierreOrden 
		INNER JOIN proOrden ON	proOrden.proOrden = proMovCierreOrden.proOrden 
		INNER JOIN proOrdenStockCosto on
		proMovCierreOrden.proMovCierreOrden = proOrdenStockCosto.proMovCierreOrden 
		inner join stkMoviCabe on	proOrdenStockCosto.stkMoviCabe = stkMoviCabe.stkMoviCabe
		INNER JOIN conAsientos ON  conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		INNER JOIN stkMoviCuerpo ON
			stkMoviCuerpo.stkMoviCabe = proOrdenStockCosto.stkMoviCabe  and 
			stkMoviCuerpo.Renglon =  proOrdenStockCosto.Renglon and 
			stkMoviCuerpo.Producto_Id = stkProductos.stkProductos
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1 and 
			stkMoviCabe.Signo = 1 and
			conAsientos.Fecha between @FechaDesde and @FechaHasta and 
			conAsientos.Empresa_Id = @Empresa_Id),0) > 0
	ORDER BY 1
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proCostosPorOrden.sql*/

-- Inf_proCostosPorOrden 'PORD', '0001',' ',' ',' ',8,0,0,0,1
drop Procedure Inf_proCostosPorOrden
go
CREATE Procedure Inf_proCostosPorOrden
(
	@Segmento_Id VarChar(10),
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@Segmento1N INT,
	@Segmento2N INT,
	@Segmento3N INT,
	@Segmento4N INT,
	@Empresa_Id Int
)

AS

SELECT 
	dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		1 as Tipo, 
		stkProductos.Producto_Id ProductoOP, stkProductos.Descripcion AS DescripcionProductoOP,
		conAsientos.Fecha,
		dbo.Segmento(genAsiSegmentos.Segmento_Id, 
		genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
		genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Comprobante,
		stkProductosc.Producto_Id, stkProductosc.Descripcion ,
		case when stkMoviCabe.Signo = 1 then stkMoviCuerpo.Cantidad else 0 end Entrada,
		case when stkMoviCabe.Signo = -1 then stkMoviCuerpo.Cantidad else 0 end Salida,
		stkUniMedC.Medida_Id, 
		stkMoviCuerpo.CostoUnitario , 
		Convert(Numeric(18,2),case when stkMoviCabe.Signo = 1 then  stkMoviCuerpo.CostoUnitario*stkMoviCuerpo.Cantidad else 0 end) as CostoEntrada,
		Convert(Numeric(18,2),case when stkMoviCabe.Signo = -1 then  stkMoviCuerpo.CostoUnitario*stkMoviCuerpo.Cantidad else 0 end) as CostoSalida
from proOrden INNER JOIN proOrdenSegmento ON 
proOrden.proOrden = proOrdenSegmento.proOrden
INNER JOIN stkProductos ON 
proOrden.Producto_Id =  stkProductos.stkProductos
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = stkProductos.Medida_Id
INNER JOIN proMovCierreOrden ON 
proMovCierreOrden.proOrden = proOrden.proOrden
inner join proOrdenStock on 
proOrdenStock.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
inner join stkMoviCabe ON
stkMoviCabe.stkMoviCabe = proOrdenStock.stkMoviCabe
inner join stkMoviCuerpo ON
stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
INNER JOIN conAsientos ON 
stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
inner join stkProductos stkProductosc ON 
stkProductosC.stkProductos = stkMoviCuerpo.Producto_Id
INNER JOIN stkUniMed stkUniMedC ON
stkUniMedC.stkUniMed = stkProductosC.Medida_Id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = proOrdenSegmento.Segmento_Id
WHERE
	conAsientos.Empresa_Id =@Empresa_Id and 
	genSegmentos.Segmento_Id = @Segmento_Id and
	proOrdenSegmento.Segmento1C = @Segmento1C and 
	proOrdenSegmento.Segmento2C = @Segmento2C and 
	proOrdenSegmento.Segmento3C = @Segmento3C and 
	proOrdenSegmento.Segmento4C = @Segmento4C and 
	proOrdenSegmento.Segmento1N = @Segmento1N AND
	proOrdenSegmento.Segmento2N  = @Segmento2N and
	proOrdenSegmento.Segmento3N  = @Segmento3N and
	proOrdenSegmento.Segmento4N  = @Segmento4N and
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 
UNION ALL -- TRABAJOS DE 3
SELECT 
	dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		2 as Tipo, 
		stkProductos.Producto_Id ProductoOP, stkProductos.Descripcion AS DescripcionProductoOP,
		conAsientos.Fecha,
		dbo.Segmento(genAsiSegmentos.Segmento_Id, 
		genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
		genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Comprobante,
		proTrabajo3.Trabajo3_Id, proTrabajo3.Descripcion ,
		0 Entrada,
		proMovCierreTrabajos3.Cantidad Salida,
		' ' Medida_Id, 
		proMovCierreTrabajos3.Precio , 
		0 as CostoEntrada,
		Convert(Numeric(18,2),proMovCierreTrabajos3.Precio *proMovCierreTrabajos3.Cantidad ) as CostoSalida
from proOrden INNER JOIN proOrdenSegmento ON 
proOrden.proOrden = proOrdenSegmento.proOrden
INNER JOIN stkProductos ON 
proOrden.Producto_Id =  stkProductos.stkProductos
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = stkProductos.Medida_Id
INNER JOIN proMovCierreOrden ON 
proMovCierreOrden.proOrden = proOrden.proOrden
inner join proMovCierreTrabajos3 on 
proMovCierreTrabajos3.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
INNER JOIN conAsientos ON 
proMovCierreOrden.proMovCierreOrden = conAsientos.conAsientos
inner join proTrabajo3 ON 
proTrabajo3.proTrabajo3 = proMovCierreTrabajos3.Trabajo3_Id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = proOrdenSegmento.Segmento_Id
WHERE
	conAsientos.Empresa_Id =@Empresa_Id and 
	genSegmentos.Segmento_Id = @Segmento_Id and
	proOrdenSegmento.Segmento1C = @Segmento1C and 
	proOrdenSegmento.Segmento2C = @Segmento2C and 
	proOrdenSegmento.Segmento3C = @Segmento3C and 
	proOrdenSegmento.Segmento4C = @Segmento4C and 
	proOrdenSegmento.Segmento1N = @Segmento1N AND
	proOrdenSegmento.Segmento2N  = @Segmento2N and
	proOrdenSegmento.Segmento3N  = @Segmento3N and
	proOrdenSegmento.Segmento4N  = @Segmento4N and
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 
UNION ALL -- Recursos
SELECT 
	dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		3 as Tipo, 
		stkProductos.Producto_Id ProductoOP, stkProductos.Descripcion AS DescripcionProductoOP,
		conAsientos.Fecha,
		dbo.Segmento(genAsiSegmentos.Segmento_Id, 
		genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
		genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Comprobante,
		proRecursos.Recurso_Id, proRecursos.Descripcion ,
		0 Entrada,
		proMovCierreRecursos.Cantidad Salida,
		' ' Medida_Id, 
		proMovCierreRecursos.Costo , 
		0 as CostoEntrada,
		Convert(Numeric(18,2),proMovCierreRecursos.Costo *proMovCierreRecursos.Cantidad ) as CostoSalida
from proOrden INNER JOIN proOrdenSegmento ON 
proOrden.proOrden = proOrdenSegmento.proOrden
INNER JOIN stkProductos ON 
proOrden.Producto_Id =  stkProductos.stkProductos
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = stkProductos.Medida_Id
INNER JOIN proMovCierreOrden ON 
proMovCierreOrden.proOrden = proOrden.proOrden
inner join proMovCierreRecursos on 
proMovCierreRecursos.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
INNER JOIN conAsientos ON 
proMovCierreOrden.proMovCierreOrden = conAsientos.conAsientos
inner join proRecursos ON 
proRecursos.proRecursos = proMovCierreRecursos.Recurso_Id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = proOrdenSegmento.Segmento_Id
WHERE
	conAsientos.Empresa_Id =@Empresa_Id and 
	genSegmentos.Segmento_Id = @Segmento_Id and
	proOrdenSegmento.Segmento1C = @Segmento1C and 
	proOrdenSegmento.Segmento2C = @Segmento2C and 
	proOrdenSegmento.Segmento3C = @Segmento3C and 
	proOrdenSegmento.Segmento4C = @Segmento4C and 
	proOrdenSegmento.Segmento1N = @Segmento1N AND
	proOrdenSegmento.Segmento2N  = @Segmento2N and
	proOrdenSegmento.Segmento3N  = @Segmento3N and
	proOrdenSegmento.Segmento4N  = @Segmento4N and
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 

	ORDER BY 1,2,3
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proEficiencia.sql*/
-- inf_proEficiencia ' ','ZZZ', '20190801', '20190831',1


DROP PROCEDURE inf_proEficiencia
GO
CREATE PROCEDURE inf_proEficiencia
(
	@CtroProdDesde VarChar(8),
	@CtroProdHasta VarChar(8),
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@Empresa_Id Int
)
AS

SELECT proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCP, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	SUM(proOrden.Cantidad) as Programado,
	SUM(proOrden.CantidadTerminada) AS Terminado,	stkUniMed.Medida_Id
	
FROM proCentroProductivo INNER JOIN proRecetas on
	proRecetas.CtroProd_Id = proCentroProductivo.proCentroProductivo
	INNER JOIN proOrden ON
	proOrden.Receta_Id = proRecetas.proRecetas
	INNER JOIN stkProductos ON 
	stkProductos.stkProductos = proOrden.Producto_Id
	inner join stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN proOrdenSegmento ON
	proOrdenSegmento.proOrden = proOrden.proOrden
	where
	proOrden.FechaNecesidad between @FechaDesde and  @FechaHasta and 
	proCentroProductivo.CtroProd_Id BETWEEN @CtroProdDesde And @CtroProdHasta AND 
	proOrdenSegmento.Empresa_Id = @Empresa_Id  and 
	proOrden.Anulado = 0 
GROUP BY proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion ,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
		stkUnimed.Medida_Id
ORDER BY 1,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proMovStockOrden.sql*/

-- EXEC  inf_proMovStockOrden  '20190801','20190831','PORD','0001',' ',' ',' ',1,0,0,0,9999999, 1
DROP PROCEDURE inf_proMovStockOrden
GO
CREATE PROCEDURE inf_proMovStockOrden
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime,
	@Segmento_Id VarChar(10),
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@Segmento1N INT,
	@Segmento2N INT,
	@Segmento3N INT,
	@Segmento4N INT,
	@Segmento1NHasta INT,
	@Empresa_Id Int
)
AS
SELECT 
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		dbo.Segmento(genAsiSegmentos.Segmento_Id, 
		genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
		genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Cierre,
		dbo.Segmento(genAsiSegmentosS.Segmento_Id, 
		genAsiSegmentosS.Segmento1C,genAsiSegmentosS.Segmento2C,
		genAsiSegmentosS.Segmento3C, genAsiSegmentosS.Segmento4C,
		genAsiSegmentosS.Segmento1N, genAsiSegmentosS.Segmento2N,
		genAsiSegmentosS.Segmento3N, genAsiSegmentosS.Segmento4N) as MovStock, 
		stkProductos.Producto_Id, stkProductos.Descripcion, 
			case when stkMoviCabe.Signo = 1 then stkmovicuerpo.CantidadForm else 0 end as Entrada,
			case when stkMoviCabe.Signo = -1 then stkmovicuerpo.CantidadForm else 0 end as Salida,
			stkUniMed.Medida_Id, stkMoviCuerpo.CostoUnitario, conAsientos.Fecha
From proOrden INNER JOIN proOrdenSegmento ON
proOrden.proOrden = proOrdenSegmento.proOrden 
INNER JOIN proMovCierreOrden on
	proMovCierreOrden.proOrden = proOrden.proOrden
inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id=proMovCierreOrden.proMovCierreOrden
INNER JOIN proOrdenStock ON
	proOrdenStock.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
INNER JOIN genAsiSegmentos genAsiSegmentosS On 
	genAsiSegmentoss.Asiento_Id = proOrdenStock.stkMoviCabe
INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = proOrdenStock.stkMoviCabe
INNER JOIN stkMoviCabe ON
	stkMoviCabe.stkMoviCabe = proOrdenStock.stkMoviCabe
inner join conAsientos ON
conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id 
INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkMoviCuerpo.Medida_Id
INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = proOrdenSegmento.Segmento_Id
WHERE
	proOrden.FechaEmision between @FechaDesde and @FechaHasta AND 
	proOrdenSegmento.Empresa_Id =@Empresa_Id and 
	genSegmentos.Segmento_Id = @Segmento_Id and
	proOrdenSegmento.Segmento1C = @Segmento1C and 
	proOrdenSegmento.Segmento2C = @Segmento2C and 
	proOrdenSegmento.Segmento3C = @Segmento3C and 
	proOrdenSegmento.Segmento4C = @Segmento4C and 
	proOrdenSegmento.Segmento1N BETWEEN @Segmento1N and @Segmento1NHasta AND
	proOrdenSegmento.Segmento2N  = @Segmento2N and
	proOrdenSegmento.Segmento3N  = @Segmento3N and
	proOrdenSegmento.Segmento4N  = @Segmento4N and
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 

	ORDER BY 1,2,3
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proOrden.sql*/
DROP PROCEDURE INF_proOrdencabe
GO
CREATE PROCEDURE INF_proOrdencabe  (
    @Empresa_Id int, 
    @Segmento_Id VarChar(10), 
    @Segmento1N int,
    @Segmento2N int,
    @Segmento3N int,
    @Segmento4N int,
    @Segmento1C VarChar(20),
    @Segmento2C VarChar(20),
    @Segmento3C VarChar(20),
    @Segmento4C VarChar(20)

    )
	
    AS
    SELECT proOrdenSegmento.proOrden, 
    dbo.Segmento(proOrdenSegmento.Segmento_Id, proOrdenSegmento.Segmento1C,
    proOrdenSegmento.Segmento2C, proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C, 
    proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N, proOrdenSegmento.Segmento3N, 
    proOrdenSegmento.Segmento4N) AS SegmentoStr, 
    genSegmentos.Segmento_Id, proOrdenSegmento.Segmento1C,
    proOrdenSegmento.Segmento2C, proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C, 
    proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N, proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N, 
    proOrden.FechaEmision, proOrden.FechaNecesidad,stkProductos.Producto_Id, proOrden.Cantidad,
	stkproductos.Descripcion, proRecetas.Receta_Id, proRecetas.Descripcion, 
	stkUniMed.Medida_Id, stkUniMed.Descripcion, proOrden.Factor, 
	stkUniMedProd.Medida_Id MedidaProducto,  stkUniMedProd.Descripcion DescripcionMedProd, proRecetas.CtroProd_Id,
	proRecetasprod.Observaciones ObservacionReceta, isnull(proOrden.FechaFin,Getdate())
    FROM proOrdenSegmento
    INNER JOIN genSegmentos ON proOrdenSegmento.Segmento_Id = genSegmentos.genSegmentos
    INNER JOIN proOrden ON proOrden.proOrden = proOrdenSegmento.proOrden
	INNER JOIN stkProductos ON proOrden.Producto_Id = stkproductos.stkProductos
	INNER JOIN proRecetas on proOrden.Receta_Id = proRecetas.proRecetas
	INNER JOIN stkUniMed on proOrden.Medida_id = stkUnimed.stkUniMed
	INNER JOIN stkUniMed stkUniMedProd on stkproductos.Medida_Id = stkUniMedProd.stkUniMed
	INNER JOIN proRecetasProd on proRecetas.proRecetas = proRecetasProd.Receta_Id and 
			   proRecetasProd.EntradaSalida = 'P'
	WHERE
			proOrdenSegmento.Empresa_Id = @Empresa_Id And
            genSegmentos.Segmento_Id =  @Segmento_Id and
            proOrdenSegmento.Segmento1C = @Segmento1C and 
            proOrdenSegmento.Segmento2C = @Segmento2C and 
            proOrdenSegmento.Segmento3C = @Segmento3C and 
            proOrdenSegmento.Segmento4C = @Segmento4C and 
            proOrdenSegmento.Segmento1N = @Segmento1N and 
            proOrdenSegmento.Segmento2N = @Segmento2N and  
            proOrdenSegmento.Segmento3N = @Segmento3N and  
            proOrdenSegmento.Segmento4N = @Segmento4N 


GO


DROP PROCEDURE INF_proOrdenCuerpo
GO
CREATE PROCEDURE INF_proOrdenCuerpo (
	@Empresa_Id int, 
	@Segmento_Id VarChar(10), 
	@Segmento1N int,
	@Segmento2N int,
	@Segmento3N int,
	@Segmento4N int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
	)
	AS
	SELECT proOrdenProd.Renglon, stkProductos.Producto_Id, 
		stkProductos.Descripcion, stkProductos.DescripcionDetallada, stkProductos.Description, 
		stkUniMed.Medida_Id as MedidaProd, MedidaOrden.Medida_Id as MedidaMov, 
		proOrdenProd.Cantidad, proOrdenprod.Deposito_Id, stkDepositos.Descripcion
	FROM proOrdenProd 
		INNER JOIN proOrdenSegmento ON proOrdenProd.proOrden = proOrdenSegmento.proOrden
		INNER JOIN genSegmentos ON proOrdenSegmento.Segmento_Id = genSegmentos.genSegmentos
		INNER JOIN stkProductos ON stkProductos.stkProductos = proOrdenProd.Producto_Id
		INNER JOIN stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
		INNER JOIN stkUniMed AS MedidaOrden ON MedidaOrden.stkUniMed = proOrdenProd.Medida_Id
		INNER JOIN stkDepositos on proOrdenProd.Deposito_Id = stkDepositos.stkDepositos
	
	WHERE
		proOrdenSegmento.Empresa_Id = @Empresa_Id And
		genSegmentos.Segmento_Id =  @Segmento_Id and
		proOrdenSegmento.Segmento1C = @Segmento1C and 
		proOrdenSegmento.Segmento2C = @Segmento2C and 
		proOrdenSegmento.Segmento3C = @Segmento3C and 
		proOrdenSegmento.Segmento4C = @Segmento4C and 
		proOrdenSegmento.Segmento1N = @Segmento1N and 
		proOrdenSegmento.Segmento2N = @Segmento2N and  
		proOrdenSegmento.Segmento3N = @Segmento3N and  
		proOrdenSegmento.Segmento4N = @Segmento4N  and 
		proOrdenprod.EntradaSalida = 'C'
	ORDER BY 1

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proOrdenOrigen.sql*/
-- EXEC  inf_proOrdenOrigen ' ','ZZZ', '20190801','20190831',1
DROP PROCEDURE inf_proOrdenOrigen
GO
CREATE PROCEDURE inf_proOrdenOrigen
(
	@CtroProdDesde VarChar(8),
	@CtroProdHasta VarChar(8),
	@FechaDesde DateTime, 
	@FechaHasta DateTime,
	@Empresa_Id Int
)
AS
SELECT 
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		proOrden.FechaEmision, proOrden.FechaNecesidad, 
		proOrden.FechaProduccion,
		stkProductos.Producto_Id, stkProductos.Descripcion , 
		proOrden.CantidadIngresada, stkUniMed.Medida_Id,
		ISNULL(
		dbo.Segmento(proProgramasSegmento.Segmento_Id, 
		proProgramasSegmento.Segmento1C,proProgramasSegmento.Segmento2C,
		proProgramasSegmento.Segmento3C, proProgramasSegmento.Segmento4C,
		proProgramasSegmento.Segmento1N, proProgramasSegmento.Segmento2N,
		proProgramasSegmento.Segmento3N, proProgramasSegmento.Segmento4N) ,
		'NA') 	as Programa, 
		ISNULL(stkProductosC.Producto_Id,' ') Origen, 
		ISNULL(stkProductosC.Descripcion,' ') DescripcionOrigen

from proOrden INNER JOIN proOrdenSegmento ON
proOrden.proOrden = proOrdenSegmento.proOrden 
INNER JOIN stkProductos ON
	stkProductos.stkProductos = proOrden.Producto_Id 
INNER JOIN stkUniMed ON
stkUniMed.stkUniMed = proOrden.Medida_Id
INNER JOIN proRecetas ON
proRecetas.proRecetas = proOrden.Receta_Id
INNER JOIN proCentroProductivo ON
proCentroProductivo.proCentroProductivo = proRecetas.CtroProd_Id
left join (proProgramaOrden INNER join proProgramasSegmento ON 
	proProgramaOrden.proProgramas = proProgramasSegmento.proProgramas
	inner join proProgramasCuerpo ON
	proProgramasCuerpo.proProgramas = proProgramaOrden.proProgramas and
	proProgramasCuerpo.Renglon =  proProgramaOrden.Renglon
	INNER JOIN stkProductos  stkProductosC ON 
	stkProductosC.stkProductos = proProgramasCuerpo.Producto_Id	)
	ON
	proProgramaOrden.proOrden = proOrden.proOrden
WHERE
	proCentroProductivo.CtroProd_Id between @CtroProdDesde and @CtroProdHasta and 
	proOrden.FechaEmision between @FechaDesde and @FechaHasta AND 
	proOrdenSegmento.Empresa_Id =@Empresa_Id
	ORDER BY 1
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proProduccionesPend.sql*/
-- inf_proProduccionesPend ' ','ZZZ', '20190831',1
DROP PROCEDURE inf_proProduccionesPend
GO
CREATE PROCEDURE inf_proProduccionesPend
(
	@CtroProdDesde VarChar(8),
	@CtroProdHasta VarChar(8),
	@FechaHasta DateTime,
	@Empresa_Id Int
)
AS

SELECT proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCP, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	SUM(proOrden.CantidadIngresada) AS CantidadIngresada ,
	Convert(numeric(18,8), SUM((proOrden.Cantidad - proOrden.CantidadTerminada)/ proOrden.Factor)) as Pendiente
	
FROM proCentroProductivo INNER JOIN proRecetas on
	proRecetas.CtroProd_Id = proCentroProductivo.proCentroProductivo
	INNER JOIN proOrden ON
	proOrden.Receta_Id = proRecetas.proRecetas
	INNER JOIN stkProductos ON 
	stkProductos.stkProductos = proOrden.Producto_Id
	inner join stkUniMed ON
	stkUniMed.stkUniMed = proOrden.Medida_Id
	INNER JOIN proOrdenSegmento ON 
		proOrden.proOrden = proOrdenSegmento.proOrden
	where
	proOrden.FechaFin IS NULL AND 
	proOrden.Cantidad > proOrden.CantidadTerminada And
	proOrden.FechaNecesidad <= @FechaHasta and 
	proCentroProductivo.CtroProd_Id BETWEEN @CtroProdDesde And @CtroProdHasta AND 
	proOrdenSegmento.Empresa_Id = @Empresa_Id
GROUP BY proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion ,
	stkProductos.Producto_Id, stkProductos.Descripcion
ORDER BY 1,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proProduccionesPeriodo.sql*/
-- inf_proProduccionesPeriodo ' ','ZZZ', '20190801', '20190831','P',1
-- inf_proProduccionesPeriodo ' ','ZZZ', '20190801', '20190831','C',1

DROP PROCEDURE inf_proProduccionesPeriodo
GO
CREATE PROCEDURE inf_proProduccionesPeriodo
(
	@CtroProdDesde VarChar(8),
	@CtroProdHasta VarChar(8),
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@ConsOProd Char(1),
	@Empresa_Id Int
)
AS

SELECT proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCP, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	SUM(stkMoviCuerpo.Cantidad) AS Cantidad,	stkUniMed.Medida_Id
	
FROM proCentroProductivo INNER JOIN proRecetas on
	proRecetas.CtroProd_Id = proCentroProductivo.proCentroProductivo
	INNER JOIN proOrden ON
	proOrden.Receta_Id = proRecetas.proRecetas
	INNER JOIN proMovCierreOrden ON 
	proMovCierreOrden.proOrden = proOrden.proOrden
	INNER JOIN proOrdenStock ON
	proOrdenStock.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
	INNER JOIN stkMoviCabe ON
	stkMoviCabe.stkMoviCabe = proOrdenStock.stkMoviCabe
	INNER JOIN conAsientos ON 
	conAsientos.conAsientos= stkMoviCabe.stkMoviCabe
	INNER JOIN stkMoviCuerpo  on
	stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkProductos ON 
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	inner join stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	where
	conAsientos.Anulado = 0 and
	conAsientos.Posteado = 1  and 
	conAsientos.Fecha between @FechaDesde and  @FechaHasta and 
	proCentroProductivo.CtroProd_Id BETWEEN @CtroProdDesde And @CtroProdHasta AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	stkMoviCabe.Signo = case when @ConsOProd = 'C' Then -1 else 1 end
GROUP BY proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion ,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
		stkUnimed.Medida_Id
ORDER BY 1,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proPrograma.sql*/
-- EXEC inf_proPrograma 'PROG',' ',' ',' ',' ',1,0,0,0,1
DROP PROCEDURE inf_proPrograma
GO

CREATE PROCEDURE inf_proPrograma
(
	@Segmento_Id VarChar(10), 
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@Segmento1N INT,
	@Segmento2N INT,
	@Segmento3N INT,
	@Segmento4N INT,
	@Empresa_Id INT

)

AS

SELECT dbo.Segmento(proProgramasSegmento.Segmento_Id,
		proProgramasSegmento.Segmento1C, proProgramasSegmento.Segmento2C,
		proProgramasSegmento.Segmento3C, proProgramasSegmento.Segmento4C,
		proProgramasSegmento.Segmento1N, proProgramasSegmento.Segmento2N,
		proProgramasSegmento.Segmento3N, proProgramasSegmento.Segmento4N) as Programa,
		proProgramasCuerpo.FechaNecesidad, 
		stkProductos.Producto_Id, stkProductos.Descripcion, 
		proProgramasCuerpo.Cantidad, 	proProgramasCuerpo.Confirmado, 
		genSegmentos.Segmento_Id
from proProgramas INNER JOIN proProgramasSegmento ON
proProgramas.proProgramas = proProgramasSegmento.proProgramas
INNER JOIN proProgramasCuerpo ON
proProgramasCuerpo.proProgramas = proProgramas.proProgramas 
INNER JOIN stkProductos ON
stkProductos.stkProductos = proProgramasCuerpo.Producto_Id
INNER JOIN genSegmentos ON
genSegmentos.genSegmentos = proProgramasSegmento.Segmento_Id
WHERE
	genSegmentos.Segmento_Id = @Segmento_Id AND
	proProgramasSegmento.Segmento1C = @Segmento1C AND
	proProgramasSegmento.Segmento2C = @Segmento2C AND
	proProgramasSegmento.Segmento3C = @Segmento3C AND
	proProgramasSegmento.Segmento4C = @Segmento4C AND
	proProgramasSegmento.Segmento1N = @Segmento1N AND
	proProgramasSegmento.Segmento2N = @Segmento2N AND
	proProgramasSegmento.Segmento3N = @Segmento3N AND
	proProgramasSegmento.Segmento4N = @Segmento4N AND
	proProgramasSegmento.Empresa_Id = @Empresa_Id
ORDER BY 2, 3	

GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proRecetas.sql*/
-- inf_proRecetas ' ','ZZZ', 1,1,1,1
DROP PROCEDURE inf_proRecetas
GO
CREATE PROCEDURE inf_proRecetas
(
 @RecetaDesde VarChar(25),
 @RecetaHasta VarChar(25),
 @IncProductos bit,
 @IncTrabajos3 bit,
 @IncRecursos bit,
 @Empresa_Id int
)

as

SELECT proRecetas.Receta_Id, proRecetas.Descripcion, 
	1 as TIPO, 	 'Consumos' as DescripcionAgrupador, 
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProd, 
	proRecetasProd.Cantidad, stkUniMed.Medida_Id

from proRecetas inner join proRecetasProd ON 
proRecetas.proRecetas = proRecetasProd.Receta_Id
inner join stkProductos ON 
stkProductos.stkProductos = proRecetasProd.Producto_Id
INNER JOIN  stkUniMed ON
stkUniMed.stkUniMed = proRecetasProd.Medida_Id
Where
proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
ISNULL(proRecetas.Empresa_Id,@Empresa_Id) = @Empresa_Id and 
proRecetasProd.EntradaSalida= 'C'
UNION ALL
SELECT proRecetas.Receta_Id, proRecetas.Descripcion, 
	4 as TIPO, 	 'Prodcciones' as DescripcionAgrupador, 
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProd, 
	proRecetasProd.Cantidad, stkUniMed.Medida_Id

from proRecetas inner join proRecetasProd ON 
proRecetas.proRecetas = proRecetasProd.Receta_Id
inner join stkProductos ON 
stkProductos.stkProductos = proRecetasProd.Producto_Id
INNER JOIN  stkUniMed ON
stkUniMed.stkUniMed = proRecetasProd.Medida_Id
Where
proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
ISNULL(proRecetas.Empresa_Id,@Empresa_Id) = @Empresa_Id AND 
proRecetasProd.EntradaSalida= 'P'
union all
SELECT proRecetas.Receta_Id, proRecetas.Descripcion, 
	2 as TIPO, 	 'Trabajos_3' as DescripcionAgrupador, 
	proTrabajo3.Trabajo3_Id, proTrabajo3.Descripcion as DescripcionProd, 
	ISNULL(proTrabajo3Prov.Cantidad,0) AS Cantidad , ISNULL(stkUniMed.Medida_Id, '  ') as Medida_Id

from proRecetas inner join proRecetasTrabajo3 ON 
proRecetas.proRecetas = proRecetasTrabajo3.Receta_Id
inner join proTrabajo3 ON 
proTrabajo3.proTrabajo3 = proRecetasTrabajo3.Trabajo3_Id
left join proTrabajo3Prov ON
proTrabajo3Prov.Trabajo3_Id = proTrabajo3.proTrabajo3 AND 
proTrabajo3Prov.Predeterminado = 1
left join stkUniMed ON 
stkUniMed.stkUniMed = proTrabajo3Prov.Medida_Id
Where
proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
ISNULL(proRecetas.Empresa_Id,@Empresa_Id) = @Empresa_Id 
UNION ALL
SELECT proRecetas.Receta_Id, proRecetas.Descripcion, 
	3 as TIPO, 	 'Recursos' as DescripcionAgrupador, 
	proRecursos.Recurso_Id, proRecursos.Descripcion as DescripcionProd, 
	proRecetasRecursos.Cantidad Cantidad, '  '
From proRecetas inner join proRecetasRecursos ON 
proRecetas.proRecetas = proRecetasRecursos.proRecetas
inner join proRecursos ON 
proRecursos.proRecursos = proRecetasRecursos.Recurso_Id
Where
proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
ISNULL(proRecetas.Empresa_Id,@Empresa_Id) = @Empresa_Id 
Order By 1, 3
	


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proRecetasPrincipal.sql*/
DROP PROCEDURE [dbo].[inf_proRecetasPrincipal]
GO


create procedure [dbo].[inf_proRecetasPrincipal]
(
@RecetaDesde varchar(25),
@RecetaHasta varchar(25),
@Empresa_Id int
)
as

select proRecetas.Receta_Id, proRecetas.Descripcion, proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCtroProd,
'Productos' Tipo, stkProductos.Producto_Id, stkProductos.Descripcion, stkUniMed.Medida_Id,
stkUniMed.Descripcion as DescripcionUniMed,Cantidad
from proRecetasProd
inner join proRecetas on proRecetas=proRecetasProd.Receta_Id
left join stkProductos on stkProductos=proRecetasProd.Producto_Id
left join stkUniMed on stkUniMed=proRecetasProd.Medida_Id
left join proCentroProductivo on proCentroProductivo.proCentroProductivo=proRecetas.CtroProd_Id
where
	proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
	@Empresa_Id = isnull(proRecetas.Empresa_Id,@Empresa_Id)
union all
select proRecetas.Receta_Id,proRecetas.Descripcion, proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DesccripcionCtroProd,
'Recursos', proRecursos.Recurso_Id, proRecursos.Descripcion,'','',0
from proRecetasRecursos
inner join proRecetas on proRecetas.proRecetas=proRecetasRecursos.proRecetas
left join proRecursos on proRecursos.proRecursos=proRecetasRecursos.Recurso_Id
left join proCentroProductivo on proCentroProductivo.proCentroProductivo=proRecetas.CtroProd_Id
where
	proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
	@Empresa_Id = isnull(proRecetas.Empresa_Id,@Empresa_Id)
union all
select proRecetas.Receta_Id, proRecetas.Descripcion, proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DesccripcionCtroProd,
'Trabajos Terceros', proTrabajo3.Trabajo3_Id, proTrabajo3.Descripcion, stkUniMed.Medida_Id,stkUniMed.Descripcion,
	proTrabajo3Prov.Cantidad
from proRecetasTrabajo3
inner join proRecetas on proRecetas=proRecetasTrabajo3.Receta_Id
left join proTrabajo3 on proTrabajo3=proRecetasTrabajo3.Trabajo3_Id
left join proCentroProductivo on proCentroProductivo.proCentroProductivo=proRecetas.CtroProd_Id
left join proTrabajo3Prov ON
proTrabajo3Prov.Trabajo3_Id = proTrabajo3.proTrabajo3 AND 
proTrabajo3Prov.Predeterminado = 1
left join stkUniMed ON 
stkUniMed.stkUniMed = proTrabajo3Prov.Medida_Id
where 
proRecetas.Receta_Id between @RecetaDesde and @RecetaHasta and
@Empresa_Id = isnull(proRecetas.Empresa_Id,@Empresa_Id)
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proTrabajosCP.sql*/
---  Inf_proTrabajosCP '  ','zzzz', '20190801', '20190831', 1
DROP PROCEDURE Inf_proTrabajosCP
GO

CREATE PROCEDURE Inf_proTrabajosCP
(
	@CtroProdDesde_Id VarChar(8),
	@CtroProdHasta_Id VarChar(8),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id Int

)

AS

SELECT proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCentroProd, 
	dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	proOrden.CantidadIngresada , stkUniMed.Medida_Id,
	proOrden.FechaNecesidad , 
	Convert(Numeric(18,8),proOrden.CantidadTerminada / proOrden.Factor) as Terminados 
FROM proCentroProductivo INNER JOIN proRecetas ON
proRecetas.CtroProd_Id = proCentroProductivo.proCentroProductivo
INNER JOIN proOrden ON 
proOrden.Receta_Id = proRecetas.proRecetas
INNER JOIN stkProductos ON
stkProductos.stkProductos = proOrden.Producto_Id
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = proOrden.Medida_Id
INNER JOIN proOrdenSegmento ON 
proOrdenSegmento.proOrden = proOrden.proOrden
Where
	proOrdenSegmento.Empresa_Id = @Empresa_Id and
	proCentroProductivo.CtroProd_Id BETWEEN @CtroProdDesde_Id and @CtroProdHasta_Id and
	proOrden.FechaNecesidad between @FechaDesde And @FechaHasta
ORDER BY 1, 3
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proTrabajosCPDeta.sql*/
-- Inf_proTrabajosCPDeta ' ','ZZZZ','20190801','20190831', 1
DROP PROCEDURE Inf_proTrabajosCPDeta
GO

CREATE PROCEDURE Inf_proTrabajosCPDeta
(
	@CtroProdDesde_Id VarChar(8),
	@CtroProdHasta_Id VarChar(8),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id Int

)

AS

SELECT proCentroProductivo.CtroProd_Id, proCentroProductivo.Descripcion as DescripcionCentroProd, 
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
	proOrdenProd.Renglon,
	stkProductos.Producto_Id ProductoOrden, stkProductos.Descripcion DescripcionPOrden, 
	proOrden.CantidadIngresada , stkUniMed.Medida_Id MedidaPOrden,
	proOrden.FechaNecesidad , 
	Convert(Numeric(18,8),proOrden.CantidadTerminada / proOrden.Factor) as Terminados,
	 stkProductosc.Producto_Id , stkProductosc.Descripcion, 
	 proOrdenProd.Cantidad , stkUniMedc.Medida_Id,
	 proOrdenProd.EntradaSalida as ProduccioConsumo, 
	 ISNULL(stkExistencia.Cantidad,0) as Stock
FROM proCentroProductivo INNER JOIN proRecetas ON
proRecetas.CtroProd_Id = proCentroProductivo.proCentroProductivo
INNER JOIN proOrden ON 
proOrden.Receta_Id = proRecetas.proRecetas
INNER JOIN stkProductos ON
stkProductos.stkProductos = proOrden.Producto_Id
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = proOrden.Medida_Id
INNER JOIN proOrdenProd ON
proOrdenProd.proOrden = proOrden.proOrden
INNER JOIN proOrdenSegmento ON 
proOrdenSegmento.proOrden = proOrden.proOrden
INNER JOIN stkProductos stkProductosc ON
stkProductosc.stkProductos = proOrdenProd.Producto_Id
INNER JOIN stkUniMed stkUniMedc ON 
stkUniMedc.stkUniMed = proOrdenProd.Medida_Id
LEFT JOIN stkExistencia ON
stkExistencia.Deposito_Id = proOrdenProd.Deposito_Id and 
stkExistencia.Producto_Id =  proOrdenProd.Producto_Id
Where
	proOrdenSegmento.Empresa_Id = @Empresa_Id and
	proCentroProductivo.CtroProd_Id BETWEEN @CtroProdDesde_Id and @CtroProdHasta_Id and
	proOrden.FechaNecesidad between @FechaDesde And @FechaHasta
ORDER BY 1, 3,4
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proTrabajosProv.sql*/
-- EXEC  Inf_proTrabajosProv ' ','ZZZZ',' ','zzz', '20190801','20190831',1
DROP PROCEDURE Inf_proTrabajosProv
GO
CREATE PROCEDURE Inf_proTrabajosProv
(
	@ProveedorDesde VarChar(25),
	@ProveedorHasta VarChar(25),
	@Trabajo3Desde VarChar(25),
	@Trabajo3Hasta VarChar(25),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id INT
)

AS


SELECT ISNULL(comProveedores.Proveed_Id, ' ') AS Proveed_Id, 
	ISNULL(comProveedores.RazonSocial, 'NO_Asignado') as RazonSocial,
	proTrabajo3.Trabajo3_Id, proTrabajo3.Descripcion as DescripcionT2,
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,

		stkProductos.Producto_Id, stkProductos.Descripcion,
		proOrdenTrabajos3.Renglon , proOrden.Cantidad,
		proOrden.CantidadTerminada

from proOrdenTrabajos3 
INNER JOIN proOrden ON
proOrden.proOrden = proOrdenTrabajos3.proOrden
INNER JOIN proOrdenSegmento ON
proOrdenSegmento.proOrden = proOrden.proOrden
INNER JOIN stkProductos ON
stkProductos.stkProductos = proOrden.Producto_Id 
INNER JOIN proTrabajo3 ON
proTrabajo3.proTrabajo3 = proOrdenTrabajos3.proTrabajo3
LEFT JOIN comProveedores ON 
comProveedores.genEntidades = proOrdenTrabajos3.Proveed_Id
WHERE
	proTrabajo3.Trabajo3_Id BETWEEN @Trabajo3Desde AND @Trabajo3Hasta and 
	proOrden.FechaNecesidad BETWEEN @FechaDesde AND @FechaHasta and
	proOrdenSegmento.Empresa_Id = @Empresa_Id
ORDER BY 1, 3, 5
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_proTrabajosRecu.sql*/
-- EXEC  Inf_proTrabajosRecu ' ','ZZZZ','20190801','20190831',1
DROP PROCEDURE Inf_proTrabajosRecu
GO
CREATE PROCEDURE Inf_proTrabajosRecu
(
	@RecursoDesde VarChar(25),
	@RecursoHasta VarChar(25),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id INT
)

AS


SELECT proRecursos.Recurso_Id, proRecursos.Descripcion as DescripcionRecurso, 
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		'  ' as SubRecurso_Id, ' ' as DescripcionSubRecurso, 
		proOrdenRecursos.Renglon , 	proOrdenRecursos.Cantidad, 
		stkProductos.Producto_Id, stkProductos.Descripcion DescripcionProd

from proRecursos INNER JOIN proOrdenRecursos ON
proRecursos.proRecursos = proOrdenRecursos.Recurso_Id
INNER JOIN proOrden ON
proOrden.proOrden = proOrdenRecursos.proOrden
INNER JOIN proOrdenSegmento ON
proOrdenSegmento.proOrden = proOrden.proOrden
INNER JOIN stkProductos ON
stkProductos.stkProductos = proOrden.Producto_Id
WHERE
	NOT Exists(SELECT 1 FROM proOrdenSubRecurso WHERE
		proOrdenSubRecurso.proOrden = proOrdenRecursos.proOrden and 
		proOrdenSubRecurso.Renglon = proOrdenRecursos.Renglon) and 
	proRecursos.Recurso_Id BETWEEN @RecursoDesde AND @RecursoHasta and 
	proOrden.FechaNecesidad BETWEEN @FechaDesde AND @FechaHasta and
	proOrdenSegmento.Empresa_Id = @Empresa_Id
UNION ALL
SELECT proRecursos.Recurso_Id, proRecursos.Descripcion as DescripcionRecurso, 
dbo.Segmento(proOrdenSegmento.Segmento_Id, 
		proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C,
		proOrdenSegmento.Segmento3C, proOrdenSegmento.Segmento4C,
		proOrdenSegmento.Segmento1N, proOrdenSegmento.Segmento2N,
		proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) as Orden,
		proSubRecursos.SubRecurso_Id, proSubRecursos.Descripcion as DescripcionSubRecurso, 
		proOrdenRecursos.Renglon , 	proOrdenSubRecurso.Cantidad, 
		stkProductos.Producto_Id, stkProductos.Descripcion DescripcionProd
from proRecursos INNER JOIN proOrdenRecursos ON
proRecursos.proRecursos = proOrdenRecursos.Recurso_Id
INNER JOIN proOrden ON
proOrden.proOrden = proOrdenRecursos.proOrden
INNER JOIN proOrdenSegmento ON
proOrdenSegmento.proOrden = proOrden.proOrden
inner join proOrdenSubRecurso ON
		proOrdenSubRecurso.proOrden = proOrdenRecursos.proOrden and 
		proOrdenSubRecurso.Renglon = proOrdenRecursos.Renglon
INNER JOIN proSubRecursos ON 
		proSubRecursos.proSubRecursos = proOrdenSubRecurso.SubRecurso_Id
INNER JOIN stkProductos ON
stkProductos.stkProductos = proOrden.Producto_Id

Where
	proRecursos.Recurso_Id BETWEEN @RecursoDesde AND @RecursoHasta and 
	proOrden.FechaNecesidad BETWEEN @FechaDesde AND @FechaHasta and
	proOrdenSegmento.Empresa_Id = @Empresa_Id
ORDER BY 1, 3, 4
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_proUsoUnProducto.sql*/
--inf_proUsoUnProducto 'CH-105-100EP',1

DROP PROCEDURE inf_proUsoUnProducto
GO

CREATE PROCEDURE inf_proUsoUnProducto
(
	@Producto_Id VarChar(25),
	@Empresa_Id Int
)

as

SELECT proRecetas.Receta_Id, proRecetas.Descripcion as DescripcionReceta, 
	proRecetasProd.Cantidad, stkUniMed.Medida_Id, 
		proRecetasProd.EntradaSalida as ProduccionConsumo
from proRecetas INNER JOIN proRecetasProd ON
proRecetas.proRecetas =  proRecetasProd.Receta_Id
INNER JOIN stkProductos ON
stkProductos.stkProductos = proRecetasProd.Producto_Id 
INNER JOIN stkUniMed ON 
stkUniMed.stkUniMed = proRecetasProd.Medida_Id
WHERE
	stkProductos.Producto_Id = @Producto_Id AND
	isnull(proRecetas.Empresa_Id,@Empresa_Id) = @Empresa_Id
ORDER BY 1

GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_RankProv.sql*/
-- INF_RankProv '20180901','20180930',1
DROP PROCEDURE INF_RankProv 
GO
CREATE PROCEDURE INF_RankProv 
(
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@Empresa int, 
@TipoProvDesde VarChar(5),
@TipoProvHasta VarChar(5)
)
AS
SELECT comProveedores.Proveed_id, comProveedores.RazonSocial, 
	Convert(Numeric(18,2), -SUM((Proveedores.Importe - IsNull(Impuestos.Importe, 0)) * comMovTipos.Signo)) as Monto
FROm comMovProv 
INNER JOIN conAsientos ON comMovProv.comMovProv = conAsientos.conAsientos
Inner Join conMovCont Proveedores On Proveedores.conAsientos = conAsientos.conAsientos And Proveedores.Clase = 'PRO'
Left Join (Select conAsientos, Sum(Importe) Importe From conMovCont Where Clase = 'FPIMP' Group By conAsientos) Impuestos On Impuestos.conAsientos = conAsientos.conAsientos
INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id 
INNER JOIN comMovTipos ON comMovTipos.Tipomov = comMovProv.Tipomov
INNER JOIN comProvTipos ON  comProvTipos.comProvTipos = comProveedores.ProvTipo_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	comMovTipos.Tipomov NOT IN ('P','C','V','W','X','Y') and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	comProvTipos.ProvTipo_Id between @TipoProvDesde  and @TipoProvHasta
GROUP BY comProveedores.Proveed_id, comProveedores.RazonSocial
ORDER BY 3 DESC
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_RetencionesCFDI.sql*/
drop procedure Inf_ImpRetenciones
go
create procedure Inf_ImpRetenciones (@pFolio int, 
@pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)
SELECT impRetencionesCFDI.impRetencionesCFDI,
	impRetencionesCFDI.Folio, impRetencionesCFDI.Sello, impRetencionesCFDI.NumCert, impRetencionesCFDI.FechaExp,
	impRetencionesCFDI.CveRetenc, impRetencionesCFDI.DescRetenc, impRetencionesCFDI.Nacionalidad, impRetencionesCFDI.RFC,
	impRetencionesCFDI.RazonSocial, impRetencionesCFDI.CURP, impRetencionesCFDI.NroRegIdTrib, impRetencionesCFDI.Ejercicio,
	impRetencionesCFDI.MesIni, impRetencionesCFDI.MesFin, impRetencionesCFDI.montoTotOperacion, impRetencionesCFDI.montoTotGrav,
	impRetencionesCFDI.montoTotExent, impRetencionesCFDI.montoTotRet, impRetencionesCFDI.Cancelado, impRetencionesCFDI.FechaCancelacion,
	impRetencionesCFDI.FechaTimbre, impRetencionesCFDI.SelloSAT, impRetencionesCFDI.NoCertificadoSAT, impRetencionesCFDI.UUID,
	impRetencionesCFDI.RfcProvCertif, impRetencionesCFDI.Leyenda, impRetencionesCFDI.Xml
FROM impRetencionesCFDI 
WHERE (Folio = @pFolio)

go

drop procedure Inf_impRetCFDIDetalleDatos
go
create procedure Inf_impRetCFDIDetalleDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIDetalleDatos   @pidentity

go

drop procedure Inf_impRetCFDIArrendaDatos

go

create procedure Inf_impRetCFDIArrendaDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIArrendaDatos  @pidentity

go

drop procedure Inf_impRetCFDIDividendosDatos

go

create procedure Inf_impRetCFDIDividendosDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIDividendosDatos   @pidentity

go

drop procedure Inf_impRetCFDIEnajAccionDatos

go

create procedure Inf_impRetCFDIEnajAccionDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIEnajAccionDatos   @pidentity

go

drop procedure Inf_impRetCFDIFiedeEmprDatos

go

create procedure Inf_impRetCFDIFiedeEmprDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIFiedeEmprDatos   @pidentity

go

drop procedure Inf_impRetCFDIOperConDerivDatos

go

create procedure Inf_impRetCFDIOperConDerivDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIOperConDerivDatos   @pidentity

go

drop procedure Inf_impRetCFDIPagosExtrDatos

go

create procedure Inf_impRetCFDIPagosExtrDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIPagosExtrDatos   @pidentity

go

drop procedure Inf_impRetCFDIPlanesRetDatos

go

create procedure Inf_impRetCFDIPlanesRetDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIPlanesRetDatos   @pidentity

go

drop procedure Inf_impRetCFDIPremiosDatos

go

create procedure Inf_impRetCFDIPremiosDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDIPremiosDatos   @pidentity

go

drop procedure Inf_impRetCFDISecFinanDatos

go

create procedure Inf_impRetCFDISecFinanDatos (@pFolio int, @pEmpresa_Id Int)
as
SET NOCOUNT ON 
DECLARE @pidentity INT = isnull((select impRetencionesCFDI 
 from impRetencionesCFDI 
 Where
	Empresa_id = @pEmpresa_id and 
	Folio = @pFolio),0)

Exec impRetCFDISecFinanDatos   @pidentity

go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_SaldosClientes.sql*/
-- INF_SaldosClientes  '20171031', ' ','ZZZ','PES', 1,1

DROP procedure INF_SaldosClientes 
GO
create procedure INF_SaldosClientes
(
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Moneda_Id VarChar(5), 
	@SoloEstaMoneda Bit, 
	@Empresa Int
)
AS

SET NOCOUNT ON
Declare @MonedaBase int = (SELECT  Moneda_Id From genEmpresas where genEmpresas= @Empresa)

DECLARE @pMoneda_id AS INT
SET @pMoneda_id = dbo.FuncFKgenMonedas(@Moneda_Id)


IF (RTRIM(@Moneda_Id) = '')

	SELECT venClientes.Cliente_Id, venClientes.RazonSocial, GenMonedas.Moneda_Id, 
		SUM(venMovimientos.Importe * venTipoMov.Signo) as Monto
	From venMovimientos
	INNER JOIN conAsientos ON venMovimientos.venMovimientos = conAsientos.conAsientos
	inner join venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id
	inner join venSubTipoMov on venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	Inner Join venTipoMov On venTipoMov.venTipoMov = venMovimientos.venTipoMov
	inner join GenMonedas ON GenMonedas.GenMonedas = conAsientos.Moneda_id
	Where
	conAsientos.Anulado = 0 and  
	conAsientos.Empresa_Id = @Empresa and 
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	conAsientos.Fecha <= @FechaHasta 
	GROUP BY venClientes.Cliente_Id, venClientes.RazonSocial, GenMonedas.Moneda_Id
	Having SUM(venMovimientos.Importe * venTipoMov.Signo) <> 0
	Order by 3,2

ELSE
BEGIN

	Create Table #_TiposCambio
	(Moneda_Id int Not Null,
	Cambio Numeric(17,4) Not Null)


	Insert Into #_TiposCambio
	Select genMonedas, dbo.func_TipoCambioCompra(genMonedas, @FechaHasta, @Empresa) From genMonedas

	SELECT venClientes.Cliente_Id, venClientes.RazonSocial, GenMonedas.Moneda_Id, 
		SUM(venMovimientos.Importe * Cambio.Cambio / CambioMR.Cambio * venTipoMov.Signo) as Monto
	From venMovimientos
	INNER JOIN conAsientos ON venMovimientos.venMovimientos = conAsientos.conAsientos
	inner join venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id
	Inner Join venSubTipoMov On venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	Inner Join venTipoMov On venTipoMov.venTipoMov = venMovimientos.venTipoMov
	INNER JOIN #_TiposCambio AS CambioMR ON CambioMR.Moneda_id = @pMoneda_id
	inner join GenMonedas ON GenMonedas.GenMonedas = @pMoneda_id
	INNER JOIN #_TiposCambio AS Cambio ON Cambio.Moneda_id = conAsientos.Moneda_Id
	Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	conAsientos.Fecha <= @FechaHasta and 
	((GenMonedas.Moneda_id = @Moneda_id and @SoloEstaMoneda=1) OR
		(GenMonedas.Moneda_id = @Moneda_id and @SoloEstaMoneda=1) or (@SoloEstaMoneda=0))

	GROUP BY venClientes.Cliente_Id, venClientes.RazonSocial, GenMonedas.Moneda_Id
	order by 3,2
END
GO
			
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_SaldosProv.sql*/
-- INF_SaldosProv  '20200831', '0722','0722',' ', 0,1

DROP procedure INF_SaldosProv 
GO
create procedure INF_SaldosProv 
(
	@FechaHasta DateTime, 
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@Moneda_Id VarChar(5), 
	@SoloEstaMoneda Bit, 
	@Empresa Int
)
AS

SET NOCOUNT ON
Declare @MonedaBase int = (SELECT  Moneda_id from genEmpresas where genEmpresas= @Empresa)

DECLARE @pMoneda_id AS INT
SET @pMoneda_id = dbo.FuncFKgenMonedas(@Moneda_Id)


IF (RTRIM(@Moneda_Id) = '')

select Proveed_Id, RazonSocial, Moneda_Id, SUM(Monto) as Monto
from (

SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	GenMonedas.Moneda_Id, 
	SUM(commovprov.Importe * commovtipos.Signo) as Monto
From comMovprov 
INNER JOIN conAsientos ON comMovprov.comMovprov = conAsientos.conAsientos
inner join comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id
inner join commovtipos on commovtipos.TipoMov = comMovProv.Tipomov 
inner join GenMonedas ON GenMonedas.GenMonedas = conAsientos.Moneda_id
Left Join tesRengMovicomMovProv On tesRengMovicomMovProv.comMovProv = comMovProv.comMovProv
Where
commovprov.FacturaTesoreria = 0 and 
conAsientos.Anulado = 0 And 
conAsientos.Posteado = 1 and 
tesRengMovicomMovProv.tesMovimientos Is Null And
conAsientos.Empresa_Id = @Empresa and 
comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta and 
conAsientos.Fecha <= @FechaHasta 
GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial,		
	GenMonedas.Moneda_Id
Having SUM(commovprov.Importe * commovtipos.Signo) <> 0
UNION ALL -- APLICACION DE IMPORTACIONES
SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	GenMonedas.Moneda_Id, 
	SUM(-genCancMov.Importe_AP * commovtipos.Signo) as Monto 

FROM 
	genCancMov INNER JOIN comMovprov ON 
	genCancMov.Asiento_Id_Ap = comMovprov.comMovProv
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovProv.comMovProv
	INNER JOIN conAsientos conasientos1 ON conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap
	INNER JOIN GenMonedas ON GenMonedas.GenMonedas = conAsientos.Moneda_id
	inner join commovtipos on commovtipos.TipoMov = comMovProv.Tipomov 
	inner join comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id
	where 
			conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		conAsientos1.Anulado = 0 and 
		conAsientos1.Posteado = 1 and 
		genCancMov.Importacion = 1 AND
		genCancMov.Importacion = 1 AND
		conAsientos.Empresa_Id = @Empresa and 
		comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta and 
		conAsientos.Fecha <= @FechaHasta and 
		conAsientos1.Fecha   <= @FechaHasta AND
		genCancMov.FechaAplicacion <= @FechaHasta
GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial,		
	GenMonedas.Moneda_Id
Having SUM(-genCancMov.Importe * commovtipos.Signo) <> 0

UNION ALL -- APLICACION DE IMPORTACIONES
SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	GenMonedas.Moneda_Id, 
	SUM(-genCancMov.Importe * commovtipos.Signo) as Monto 

FROM 
	genCancMov INNER JOIN comMovprov ON 
	genCancMov.Asiento_Id = comMovprov.comMovProv
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovProv.comMovProv

	INNER JOIN conAsientos conasientos1 ON conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap
	INNER JOIN GenMonedas ON GenMonedas.GenMonedas = conAsientos.Moneda_id
	inner join commovtipos on commovtipos.TipoMov = comMovProv.Tipomov 
	inner join comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id
	where 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		conAsientos1.Anulado = 0 and 
		conAsientos1.Posteado = 1 and 
		genCancMov.Importacion = 1 AND
		conAsientos.Empresa_Id = @Empresa and 
		comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta and 
		conAsientos.Fecha <= @FechaHasta and 
		conAsientos1.Fecha   <= @FechaHasta AND
		genCancMov.FechaAplicacion <= @FechaHasta
GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial,		
	GenMonedas.Moneda_Id
Having SUM(-genCancMov.Importe * commovtipos.Signo) <> 0) as XXX
GROUP BY Proveed_Id, RazonSocial, Moneda_Id
having sum(Monto) <>0
Order by 3,2

ELSE
BEGIN

Create Table #_TiposCambio
(Moneda_Id int Not Null,
Cambio Numeric(17,4) Not Null)


Insert Into #_TiposCambio
Select genMonedas, dbo.func_TipoCambioCompra(genMonedas, @FechaHasta, @Empresa) From genMonedas
select Proveed_Id, RazonSocial, Moneda_Id, SUM(Monto) as Monto
from (
SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	GenMonedas.Moneda_Id, 
	SUM(commovprov.Importe * Cambio.Cambio / CambioMR.Cambio * commovtipos.Signo) as Monto
From comMovprov 
INNER JOIN conAsientos ON comMovprov.comMovprov = conAsientos.conAsientos
inner join comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id
inner join commovtipos on commovtipos.TipoMov = comMovProv.Tipomov 
INNER JOIN #_TiposCambio AS CambioMR ON CambioMR.Moneda_id = @pMoneda_id
inner join GenMonedas ON GenMonedas.GenMonedas = @pMoneda_id
inner join genMonedas genMonedas1 on genMonedas1.genMonedas = conAsientos.Moneda_Id
INNER JOIN #_TiposCambio AS Cambio ON Cambio.Moneda_id = conAsientos.Moneda_Id
Left Join tesRengMovicomMovProv On tesRengMovicomMovProv.comMovProv = comMovProv.comMovProv
Where
commovprov.FacturaTesoreria = 0 and 
conAsientos.Anulado = 0 And tesRengMovicomMovProv.tesMovimientos Is Null And
conAsientos.Empresa_Id = @Empresa and
comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta and 
conAsientos.Fecha <= @FechaHasta and 
(GenMonedas1.Moneda_id = @Moneda_id or @SoloEstaMoneda=0)

GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial,		
	GenMonedas.Moneda_Id
Having SUM(commovprov.Importe * commovtipos.Signo) <> 0
UNION ALL -- APLICACION DE IMPORTACIONES
SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	GenMonedas.Moneda_Id, 
	SUM(-genCancMov.Importe_AP * commovtipos.Signo *   Cambio.Cambio / CambioMR.Cambio) as Monto 

FROM 
	genCancMov INNER JOIN comMovprov ON 
	genCancMov.Asiento_Id_Ap = comMovprov.comMovProv
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovProv.comMovProv
	inner join GenMonedas ON GenMonedas.GenMonedas = @pMoneda_id
	INNER JOIN GenMonedas GenMonedas1 ON GenMonedas1.GenMonedas = conAsientos.Moneda_id
	inner join commovtipos on commovtipos.TipoMov = comMovProv.Tipomov 
	inner join comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id
	INNER JOIN #_TiposCambio AS CambioMR ON CambioMR.Moneda_id = @pMoneda_id
	INNER JOIN #_TiposCambio AS Cambio ON Cambio.Moneda_id = conAsientos.Moneda_Id
	where 
		genCancMov.Importacion = 1 AND
		(GenMonedas1.Moneda_id = @Moneda_id or @SoloEstaMoneda=0) and 
		conAsientos.Empresa_Id = @Empresa and 
		comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta and 
		conAsientos.Fecha <= @FechaHasta 
GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial,		
	GenMonedas.Moneda_Id
Having SUM(-genCancMov.Importe * commovtipos.Signo) <> 0
UNION ALL -- APLICACION DE IMPORTACIONES
SELECT comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	GenMonedas.Moneda_Id, 
	SUM(-genCancMov.Importe * commovtipos.Signo *   Cambio.Cambio / CambioMR.Cambio) as Monto 

FROM 
	genCancMov INNER JOIN comMovprov ON 
	genCancMov.Asiento_Id = comMovprov.comMovProv
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovProv.comMovProv
	INNER JOIN conAsientos conasientos1 ON conAsientos1.conAsientos = genCancMov.AsientoApli_Id
	inner join GenMonedas ON GenMonedas.GenMonedas = @pMoneda_id
	INNER JOIN GenMonedas GenMonedas1 ON GenMonedas1.GenMonedas = conAsientos.Moneda_id
	inner join commovtipos on commovtipos.TipoMov = comMovProv.Tipomov 
	inner join comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id
	INNER JOIN #_TiposCambio AS CambioMR ON CambioMR.Moneda_id = @pMoneda_id
	INNER JOIN #_TiposCambio AS Cambio ON Cambio.Moneda_id = conAsientos.Moneda_Id
	where 
		genCancMov.Importacion = 1 AND
		(GenMonedas1.Moneda_id = @Moneda_id or @SoloEstaMoneda=0) and 
		conAsientos.Empresa_Id = @Empresa and 
		comProveedores.Proveed_id Between @ProveedDesde and @ProveedHasta and 
		conAsientos.Fecha <= @FechaHasta and 
		conAsientos1.Fecha   <= @FechaHasta AND
		genCancMov.FechaAplicacion <= @FechaHasta
GROUP BY comProveedores.Proveed_Id, comProveedores.RazonSocial,		
	GenMonedas.Moneda_Id
Having SUM(-genCancMov.Importe * commovtipos.Signo) <> 0
) as XXX
GROUP BY Proveed_Id, RazonSocial, Moneda_Id
having round(sum(Monto),2) <>0
Order by 3,2


END
GO
			
	
			
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_SituPatri.sql*/
-- Inf_SituPatri '20170831','20160831', 1


DROP Procedure Inf_SituPatri
GO

Create Procedure Inf_SituPatri
 ( @FechaHasta DateTime,  @FechaHasta1 DateTime, @Empresa Int)
AS

DECLARE @FechaDesde DateTime
DECLARE @FechaDesde1 DateTime

SET @FechaDesde = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				@FechaHasta between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta))


SET @FechaDesde1 = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				@FechaHasta1 between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta))

SELECT vcuentasRango.Cuenta_Id, vcuentasRango.Descripcion, vcuentasRango.Nivel ,
	ISNULL(SUM(conMovCont.Importe * (-2*conMovCont.Tipomov+3) ),0) as Saldo , 
	ISNULL((SELECT SUM(conMovCont1.Importe * (-2*conMovCont1.Tipomov+3)) 
		FROM conMovCont conMovCont1 INNER JOIN conAsientos conAsientos1 ON
			conMovCont1.conAsientos = conAsientos1.conAsientos 
			INNER JOIN conCuentas conCuentas1 ON
			conCuentas1.conCuentas = conMovCont1.Cuenta_id and
			conCuentas1.Cuenta_id >= vcuentasRango.Cuenta_Id and
			conCuentas1.Cuenta_id < vcuentasRango.CuentaHasta
			Where
			conAsientos1.Fecha between @FechaDesde1 and  @FechaHasta1 ),0) as Saldo1 
FROM vcuentasRango  INNER JOIN conRubros ON
	conRubros.Rubro_id = vcuentasRango.Rubro_Id

LEFT OUTER JOIN 
	(conMovCont inner join conCuentas ON 
	conCuentas.conCuentas =conMovCont.Cuenta_Id 
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = conMovCont.conAsientos AND 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	conAsientos.Empresa_Id = @Empresa) ON
	conCuentas.Cuenta_id >= vcuentasRango.Cuenta_Id and
	conCuentas.Cuenta_id < vcuentasRango.CuentaHasta
Where
	conAsientos.Anulado = 0 and 
	ISNULL(vCuentasRango.Empresa_Id,@Empresa) = @Empresa AND 
		vCuentasRango.Nivel <= 3
GROUP BY vcuentasRango.Cuenta_Id, vcuentasRango.Descripcion, vcuentasRango.Nivel , vcuentasRango.Imputable,
	vcuentasRango.CuentaHasta
ORDER BY 1

GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_SituPatri3.sql*/
-- Inf_SituPatri3 '20181031','20181130', 1,'3310-101', 'es'
-- Inf_SituPatri3 '20181031','20181130', 1,'3310-101', 'en'


DROP Procedure Inf_SituPatri3
GO

Create Procedure Inf_SituPatri3
 ( 
   @FechaHasta DateTime,  
   @FechaHasta1 DateTime, 
   @Empresa Int, 
   @CtaResEjer VarChar(25),
   @Cultura VarChar(5)=null,
   @PorNaturaleza Bit =0)
as

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))

DECLARE @FechaDesde DateTime
DECLARE @FechaDesde1 DateTime


SET @FechaDesde = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Empresa_Id = @Empresa and
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				@FechaHasta between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta AND
				conPeriodos1.Empresa_Id = @Empresa))

SET @FechaDesde1 = (select min(Fecha_Desde) from conPeriodos WHERE
			conPeriodos.Empresa_Id = @Empresa and
			conPeriodos.Ejercicio = (select ejercicio from conPeriodos conPeriodos1 
			where
				@FechaHasta1 between conPeriodos1.Fecha_Desde and conPeriodos1.Fecha_Hasta and 
				conPeriodos1.Empresa_Id = @Empresa))

DECLARE @FechaDesdeMin DAteTime 
DECLARE @FechaHastaMax DAteTime 

set @FechaDesdeMin = @FechaDesde
IF @FechaDesde1 < @FechaDesde
	set @FechaDesdeMin = @FechaDesde1
set @FechaHastaMax = @FechaHasta
IF @FechaHasta1 > @FechaHasta
	set @FechaHastaMax = @FechaHasta1

SELECT *  into #tsp1 FROM vconMovContRes WHERE Fecha between @FechaDesdeMin and @FechaHastaMax AND 
	Empresa_Id = @Empresa


SELECT vcuentasRango.Cuenta_Id, 
	case when @EnOtro=1 then concuentas.Description else  vcuentasRango.Descripcion end Descripcion, 
		vcuentasRango.Nivel,
 (select MAX(Cuenta_Id)from conCuentas as C1 where C1.Cuenta_Id<=vcuentasRango.Cuenta_Id and C1.Nivel<=vcuentasRango.Nivel and c1.Nivel<3) as Grupo 
		--SUBSTRING(vcuentasRango.Cuenta_Id,0,3) as Grupo 
		, conRubros.Rubro_Id,
		ISNULL((SELECT SUM(tsp1.Monto)
		FROM #tsp1 tsp1
		WHERE
			(( @CtaResEjer  between vcuentasRango.Cuenta_Id and vcuentasRango.CuentaHasta and	tsp1.Cuenta_Id >='4') or
			(tsp1.Cuenta_id >= vcuentasRango.Cuenta_Id and tsp1.Cuenta_id < vcuentasRango.CuentaHasta )) and
			tsp1.Especial NOT IN('CIR','CCP')  and 
			tsp1.Fecha between @FechaDesde and  @FechaHasta ),0) as Saldo , 
	ISNULL((SELECT SUM(tsp1.Monto) 
		FROM #tsp1 tsp1 
			WHERE
			(( @CtaResEjer  between vcuentasRango.Cuenta_Id and vcuentasRango.CuentaHasta and	tsp1.Cuenta_Id >='4') or
			(tsp1.Cuenta_id >= vcuentasRango.Cuenta_Id and tsp1.Cuenta_id < vcuentasRango.CuentaHasta )) and
			tsp1.Especial NOT IN('CIR','CCP')  and 
			tsp1.Fecha between @FechaDesde1 and  @FechaHasta1 ),0) as Saldo1 , 
			vcuentasRango.Naturaleza
FROM vcuentasRango  INNER JOIN conRubros ON
	conRubros.Rubro_id = vcuentasRango.Rubro_Id
	inner join concuentas on
	concuentas.Cuenta_id = vcuentasRango.Cuenta_Id

	
Where
	ISNULL(vCuentasRango.Empresa_Id,@Empresa) = @Empresa AND 
		vCuentasRango.Nivel <= 3 and 
		conRubros.Tipo IN ('ACT','PAS','CAP')
GROUP BY vcuentasRango.Cuenta_Id, vcuentasRango.Descripcion, vcuentasRango.Nivel , vcuentasRango.Imputable,
	vcuentasRango.CuentaHasta, conRubros.Rubro_Id, concuentas.Description, vcuentasRango.Naturaleza
ORDER BY 1
drop table #tsp1

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkAFecha.sql*/
-- INF_stkAFecha '20290331',' ','ZZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',1,'N'

DROP PROCEDURE INF_stkAFecha 
GO
CREATE PROCEDURE INF_stkAFecha (
	@FechaHasta DateTime,
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa_Id int, 
	@Resumen Char(1)
)

AS

-- Resumen N sin resumir, F Familia G = Grupo

SELECT stkProductos.Producto_id, stkProductos.Descripcion, stkUniMed.Medida_Id, 
	stkProductos.CostoUltCompra as CostoProd, 
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, 
	ISNULL(stkFamilias.Descripcion,' ') as DescripcionFamilia, 
	ISNULL(stkGrupos.Grupo_Id,' ') as Grupo_Id, 
	ISNULL(stkGrupos.Descripcion,' ') as DescripcionGrupo, 
	SUM(case when stkDepositos.Deposito_Id BETWEEN @DepositoDesde and @DepositoHasta 
	then stkMoviCuerpo.Cantidad* stkMoviCabe.Signo else 0 end ) as Cantidad, 
	SUM(stkMoviCuerpo.Cantidad* stkMoviCabe.Signo) as CantidadTodos, 
	SUM(stkMoviCuerpo.Cantidad* stkMoviCabe.Signo* stkMoviCuerpo.CostoUnitario) + 
	ISNULL((SELECT  SUM(stkMoviCuerpoReva.ImporteAjuste)--+stkMoviCuerpoReva.ImporteAjusteCosto) 
		FROM stkMoviCuerpoReva INNER JOIN stkMoviCabe ON
			 stkMoviCuerpoReva.stkMoviCabe = stkMoviCabe.stkMoviCabe and
			 stkMoviCuerpoReva.Producto_Id = stkProductos.stkProductos
			 INNER JOIN conAsientos ON
			 conAsientos.conAsientos =stkMoviCabe.stkMoviCabe 
			 WHERE
			 conasientos.Anulado = 0 and 
			 conasientos.Posteado = 1 and 
			 conAsientos.Empresa_Id = @Empresa_Id and 
			 conAsientos.Fecha <= @FechaHasta),0) as CostoTodos
	INTO #COSTOS1
	/* Para averiguar el costo sumo t resto de todos los almacenes */
FROM
	stkMoviCabe INNER JOIN stkMoviCuerpo ON 
	stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
	INNER JOIN conAsientos ON
	conAsientos.conAsientos =stkMoviCabe.stkMoviCabe 
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER Join stkDepositos ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	LEFT JOIN stkFamilias ON  stkFamilias.stkFamilias = stkProductos.Familia_Id
	LEFT JOIN stkGrupos ON  stkGrupos.stkGrupos = stkProductos.Grupo_Id
	WHERE
		conAsientos.Anulado = 0 and 
		stkProductos.Clase IN ('E','-') and 
		conAsientos.Empresa_Id = @Empresa_Id and 
		conAsientos.Fecha <= @FechaHasta and 
		ISNULL(stkFamilias.Familia_id,' ') between @FamiliaDesde and @FamiliaHasta and 
		ISNULL(stkGrupos.Grupo_Id,' ') between @GrupoDesde and @GrupoHasta and 
		stkProductos.Producto_Id BETWEEN @ProductoDesde AND @ProductoHasta
	GROUP BY stkProductos.Producto_id, stkProductos.Descripcion, stkProductos.stkProductos, 
		stkUniMed.Medida_id, stkProductos.CostoUltCompra,
		stkFamilias.Familia_Id,stkFamilias.Descripcion , 
		stkGrupos.Grupo_Id,stkGrupos.Descripcion

if @Resumen = 'F'
BEGIN
SELECT Familia_Id, DescripcionFamilia, SUM(Cantidad) Cantidad, 
		sum(cONVERT(Numeric(18,2),Case when CantidadTodos=0 then CostoProd else 
		CostoTodos/CantidadTodos end * Cantidad)) as SubTotal
FROM #COSTOS1
Where 		Cantidad <> 0 
GROUP BY Familia_Id, DescripcionFamilia
ORDER BY 1


END
ELSE
IF @Resumen = 'G'
BEGIN
SELECT Familia_Id, DescripcionFamilia, 
	Grupo_Id, DescripcionGrupo,
		SUM(Cantidad) Cantidad, 
		sum(cONVERT(Numeric(18,2),Case when CantidadTodos=0 then CostoProd else 
		CostoTodos/CantidadTodos end * Cantidad)) as SubTotal
FROM #COSTOS1
Where 		Cantidad <> 0 
GROUP BY Familia_Id, DescripcionFamilia, Grupo_Id, DescripcionGrupo
ORDER BY 1
END
ELSE
BEGIN
SELECT Producto_Id, Descripcion, Cantidad,  Medida_Id, 
	Familia_Id, DescripcionFamilia, Grupo_Id, DescripcionGrupo,
	Case when CantidadTodos=0 then CostoProd else 
		CostoTodos/CantidadTodos end as Costo, 
		cONVERT(Numeric(18,2),Case when CantidadTodos=0 then CostoProd else 
		CostoTodos/CantidadTodos end * Cantidad) as SubTotal
FROM #COSTOS1
Where 		Cantidad <> 0 
ORDER BY 1


END
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkAnaInventario.sql*/
-- EXEC inf_stkAnaInventario '20210801', '20210816',1,'','ZZZZ','','ZZZZ','','ZZZZ','','ZZZZZ'
DROP PROCEDURE inf_stkAnaInventario
GO
CREATE PROCEDURE inf_stkAnaInventario
(
	@FechaDesde Datetime, 
	@FechaHasta Datetime, 
	@Empresa_Id Int,
	@DepositoDesde varchar(25),
	@DepositoHasta varchar(25),
	@FamiliaDesde varchar(25),
	@FamiliaHasta varchar(25),
	@GrupoDesde varchar(25),
	@GrupoHasta varchar(25),
	@ProductoDesde varchar(25),
	@ProductoHasta varchar(25)
)
as
SELECT Producto_Id, Descripcion, SaldoInicial, SaldoInicialCosto, Entradas, EntradasVal, 
	Salidas, SalidasVal, Ajustes, SaldoInicial + Entradas - Salidas as SaldoFinal, 
	SaldoInicialCosto + EntradasVal - SalidasVal + Ajustes as SaldoFinalCosto

FROM 
(

Select stkproductos.Producto_Id, stkProductos.Descripcion, 
	ISNULL((SELECT SUM(stkMoviCabe.Signo* stkMoviCuerpo.Cantidad * stkMoviCuerpo.CostoUnitario)
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			inner join stkDepositos on stkDepositos.stkDepositos=stkMoviCuerpo.Deposito_Id
	WHERE
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1  and

		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha < @FechaDesde and
		stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta),0) +
	ISNULL((SELECT SUM(stkMoviCuerpoReva.ImporteAjuste)
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpoReva ON stkMoviCabe.stkMoviCabe = stkMoviCuerpoReva.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			
	WHERE
		stkMoviCuerpoReva.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha < @FechaDesde and
		@DepositoDesde=''),0) as SaldoInicialCosto, 

ISNULL((SELECT SUM(stkMoviCabe.Signo* stkMoviCuerpo.Cantidad )
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			inner join stkDepositos on stkDepositos.stkDepositos=stkMoviCuerpo.Deposito_Id
	WHERE
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha < @FechaDesde and
		stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta),0 ) SaldoInicial,

 ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad * stkMoviCuerpo.CostoUnitario)
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			inner join stkDepositos on stkDepositos.stkDepositos=stkMoviCuerpo.Deposito_Id
	WHERE
		stkMoviCabe.Signo = 1 and 
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha between @FechaDesde and @FechaHasta and
		stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta),0)  EntradasVal,

		ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad )
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			inner join stkDepositos on stkDepositos.stkDepositos=stkMoviCuerpo.Deposito_Id
	WHERE
		stkMoviCabe.Signo = 1 and 
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha between @FechaDesde and @FechaHasta and
		stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta),0)  Entradas,

ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad * stkMoviCuerpo.CostoUnitario)
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			inner join stkDepositos on stkDepositos.stkDepositos=stkMoviCuerpo.Deposito_Id
	WHERE
		stkMoviCabe.Signo = -1 and 
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha between @FechaDesde and @FechaHasta and
		stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta),0)  SalidasVal,
	ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad )
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpo ON stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			inner join stkDepositos on stkDepositos.stkDepositos=stkMoviCuerpo.Deposito_Id
	WHERE
		stkMoviCabe.Signo = -1 and 
		stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha between @FechaDesde and @FechaHasta and
		stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta),0)  Salidas,
ISNULL((SELECT SUM(stkMoviCuerpoReva.ImporteAjuste)
		FROM stkMoviCabe 
			INNER JOIN stkMoviCuerpoReva ON stkMoviCabe.stkMoviCabe = stkMoviCuerpoReva.stkMoviCabe
			INNER JOIN conAsientos ON conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
	WHERE
		stkMoviCuerpoReva.Producto_Id = stkProductos.stkProductos and 
		conAsientos.Anulado = 0 AND
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_Id and
		conAsientos.Fecha between @FechaDesde and @FechaHasta and @DepositoDesde=''),0) Ajustes
from stkProductos 

			left join stkGrupos on stkGrupos.stkGrupos=stkProductos.Grupo_Id
			left join stkFamilias on stkFamilias.stkFamilias=stkProductos.Familia_Id
Where
	stkProductos.Clase IN ('E','-')  and
		stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and
		isnull(stkGrupos.Grupo_Id,'') between @GrupoDesde and @GrupoHasta and
		isnull(stkFamilias.Familia_Id,'') between @FamiliaDesde and @FamiliaHasta 
)AS XXX
	
WHERE
	(SaldoInicial <> 0 OR SaldoInicialCosto <> 0 OR
		Entradas <> 0 OR EntradasVal <> 0 OR 
		Salidas <> 0 OR SalidasVal <>0 OR 
		ajustes <> 0) 
ORDER BY 1
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkAnamoviStock.sql*/
-- AJ Filtro por Familia y Grupo
-- INF_stkAnamoviStock  1, '20211001','20211031', ' ','ZZZZ', ' ','ZZZZ', 1,' ',' ', 'ZZZ',' ','ZZZ'
-- FM 10/04/2020 Visto con Ariel. stkMoviCuerpoReva.ImporteAjuste es solo BC. stkMoviCuerpoReva.ImporteAjusteCosto se refiere al ajuste del costo --
drop PROCEDURE INF_stkAnamoviStock 
go
CREATE PROCEDURE INF_stkAnamoviStock (
	@Empresa_Id int, 
	@FechaDesde DateTime, 
	@FechaHasta  DateTime, 
	@ProductoDesde VarChar(25), 
	@ProductoHasta VarChar(25), 
	@DepositoDesde VarChar(5), 
	@DepositoHasta VarChar(5), 
	@ConSaldoIni bit, 
	@SubTipomov VarChar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15)
)
AS

SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	 stkUniMed.Medida_Id, 
	conAsientos.Fecha, conAsientos.FechaRegistro, stkmovicabe.stkMoviCabe,
	stkDepositos.Deposito_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,
		genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
		genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) as SegmentoStr,
		stkSubTipoMov.SubTipoMov_Id,
		stkSubTipoMov.Descripcion + ' '+
		CASE 
		WHEN  EmbSegmento.Asiento_Id IS NOT NULL THEN 
		dbo.Segmento(EmbSegmento.Segmento_Id, EmbSegmento.Segmento1C, 
		EmbSegmento.Segmento2C, EmbSegmento.Segmento3C,
		EmbSegmento.Segmento4C, EmbSegmento.Segmento1N,
		EmbSegmento.Segmento2N, EmbSegmento.Segmento3N,
		EmbSegmento.Segmento4N)
		WHEN comOCSegmentos.comOrdenComp IS NOT NULL THEN 
		dbo.Segmento(comOCSegmentos.Segmento_Id, comOCSegmentos.Segmento1C, 
		comOCSegmentos.Segmento2C, comOCSegmentos.Segmento3C,
		comOCSegmentos.Segmento4C, comOCSegmentos.Segmento1N,
		comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N,
		comOCSegmentos.Segmento4N) 
		WHEN FactSegmento.Asiento_Id IS NOT NULL THEN
		dbo.Segmento(FactSegmento.Segmento_Id, FactSegmento.Segmento1C, 
		FactSegmento.Segmento2C, FactSegmento.Segmento3C,
		FactSegmento.Segmento4C, FactSegmento.Segmento1N,
		FactSegmento.Segmento2N, FactSegmento.Segmento3N,
		FactSegmento.Segmento4N) 
		When stkInvenSegmentos.stkInventarios IS NOT NULL THEN
		dbo.Segmento(stkInvenSegmentos.Segmento_Id, stkInvenSegmentos.Segmento1C, 
		stkInvenSegmentos.Segmento2C, stkInvenSegmentos.Segmento3C,
		stkInvenSegmentos.Segmento4C, stkInvenSegmentos.Segmento1N,
		stkInvenSegmentos.Segmento2N, stkInvenSegmentos.Segmento3N,
		stkInvenSegmentos.Segmento4N) 
		ELSE
		 ' ' END Detalle,
		 ISNULL(venClientes.Cliente_Id, ISNULL(PROVOC.Proveed_id, ISNULL(comProveedores.Proveed_Id, isnull(STR(suePersonal.Legajo,8),ISNULL(venClientesR.Cliente_Id,' '))))) as Entidad, 
		ISNULL(venClientes.RazonSocial, ISNULL(PROVOC.RazonSocial, ISNULL(comProveedores.RazonSocial, ISNULL(suePersonal.Nombres+','+suePersonal.ApellidoPaterno, isnull(venClientesR.RazonSocial, ' '))))) as RazonSocial,
		Convert(Numeric(18,4), case When stkMoviCabe.Signo = 1 THEN stkMoviCuerpo.Cantidad ELSE 0 END ) AS CantEntrada,
		Convert(Numeric(18,4),case When stkMoviCabe.Signo = 1 THEN stkMoviCuerpo.CostoUnitario ELSE 0 END)  AS CostoUEntrada,
		Convert(Numeric(18,2),round(case When stkMoviCabe.Signo = 1 THEN 	stkMoviCuerpo.Cantidad*stkMoviCuerpo.CostoUnitario ELSE 0 END,2))  AS TotalEntrada,
		Convert(Numeric(18,4),case When stkMoviCabe.Signo = -1 THEN stkMoviCuerpo.Cantidad ELSE 0 END)  AS CantSalida,
		Convert(Numeric(18,4),case When stkMoviCabe.Signo = -1 THEN stkMoviCuerpo.CostoUnitario ELSE 0 END)  AS CostoUSalida,
		Convert(Numeric(18,2),round(case When stkMoviCabe.Signo = -1 THEN 	stkMoviCuerpo.Cantidad*stkMoviCuerpo.CostoUnitario ELSE 0 END,2))  AS TotalSalida, 
		Convert(Numeric(18,4),0) Cantidad, Convert(Numeric(18,4),0) Costo,  Convert(Numeric(18,2),0) Total,
		genUsuarios.Usuario_Id, conAsientos.Observaciones, disFormularios.Descripcion as Formulario,
		conAsientos.conAsientos, stkMoviCuerpo.Renglon
	into #temp1
from stkMoviCabe INNER JOIN conAsientos ON
	stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkProductos ON
	stkProductos.stkProductos =stkMoviCuerpo.Producto_Id
	INNER JOIN stkDepositos ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	inner join stkSubTipoMov ON
	stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id
	LEFT JOIN (stkMoviEmbarque inner join genAsiSegmentos as EmbSegmento  ON
			stkMoviEmbarque.comEmbarques = EmbSegmento.Asiento_Id) ON
			stkMoviEmbarque.stkMoviCabe = stkMoviCabe.stkMoviCabe
	LEFT JOIN (stkMoviOC inner join comOCSegmentos ON
		stkMoviOC.comOrdenComp = comOCSegmentos.comOrdenComp
		INNER JOIN comOrdenComp ON
		comOrdenComp.comOrdenComp =stkMoviOC.comOrdenComp 
		inner join comProveedores AS PROVOC ON
		PROVOC.genEntidades = comOrdenComp.Proveed_Id) ON
		stkMoviOC.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and
		stkMoviOC.Renglon = stkMoviCuerpo.Renglon
	LEFT JOIN (venMovStkHist INNER JOIN genAsiSegmentos as FactSegmento ON
		venMovStkHist.venMovimientos =FactSegmento.Asiento_Id
		INNER JOIN venMovimientos ON
		venMovimientos.venMovimientos = venMovStkHist.venMovimientos 
		INNER JOIN venClientes ON
		venClientes.genEntidades = venMovimientos.Cliente_Id
		INNER JOIn conAsientos conAsientosF ON conAsientosF.conAsientos = FactSegmento.Asiento_Id  and 
		conAsientosF.Anulado = 0 ) ON
		venMovStkHist.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND 
		venMovStkHist.Renglon = stkMoviCuerpo.Renglon
	LEFT JOIN (stkMoviProv INNER JOIN comProveedores ON
		stkMoviProv.Proveed_Id = comProveedores.genEntidades) ON
		stkMoviProv.stkMoviCabe = stkMoviCabe.stkMoviCabe
	LEFT JOIN (stkInvenSegmentos INNER JOIN stkInvMoviStk ON 
		stkInvenSegmentos.stkInventarios = stkInvMoviStk.stkInventarios) ON 
			stkInvMoviStk.stkMoviCabe = stkMoviCabe.stkMoviCabe

	LEFT JOIN (stkRemitos INNER JOIN venClientes venClientesR ON 
		stkRemitos.Cliente_Id = venClientesR.genEntidades) ON 
			stkRemitos.stkMoviCabe = stkMoviCabe.stkMoviCabe
		
	INNER JOIN genUsuarios on genUsuarios.genUsuarios = conAsientos.Usuario_Id
	INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
	Left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
	Left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
	left join (stkMoviLega INNER JOIN suePersonal ON stkMoviLega.Legajo = suePersonal.genEntidades) ON
	stkMoviLega.stkMoviCabe = stkMoviCabe.stkMoviCabe
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta	and 
	stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta and 
	(stkMoviCabe.SubTipoMov_Id = @SubTipomov or @SubTipoMov=' ') and 
	ISNULL(stkFamilias.Familia_Id, ' ') between @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id, ' ') between @GrupoDesde and @GrupoHasta 
UNION ALL
SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	 stkUniMed.Medida_Id, 
	conAsientos.Fecha, conAsientos.FechaRegistro, stkmovicabe.stkMoviCabe,
	' ' Deposito_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,
		genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
		genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) as SegmentoStr,
		stkSubTipoMov.SubTipoMov_Id,
		stkSubTipoMov.Descripcion  + 
		CASE 
		WHEN  EmbSegmento.Asiento_Id IS NOT NULL THEN 
		dbo.Segmento(EmbSegmento.Segmento_Id, EmbSegmento.Segmento1C, 
		EmbSegmento.Segmento2C, EmbSegmento.Segmento3C,
		EmbSegmento.Segmento4C, EmbSegmento.Segmento1N,
		EmbSegmento.Segmento2N, EmbSegmento.Segmento3N,
		EmbSegmento.Segmento4N) else ' ' end  	Detalle, ' ' AS Entidad, ' ' as RazonSocial,
		0 AS CantEntrada,
		Convert(Numeric(18,4),case When stkMoviCuerpoReva.ImporteAjuste > 0 
			THEN stkMoviCuerpoReva.ImporteAjuste ELSE 0 END ) AS CostoUEntrada,
		Convert(Numeric(18,2),case When stkMoviCuerpoReva.ImporteAjuste > 0 
			THEN round(stkMoviCuerpoReva.ImporteAjuste,2) ELSE 0 END )  AS TotalEntrada,
		0 AS CantSalida,
		case When stkMoviCuerpoReva.ImporteAjuste < 0 
			THEN -stkMoviCuerpoReva.ImporteAjuste ELSE 0 END   AS CostoUSalida,
		Convert(Numeric(18,2),case When stkMoviCuerpoReva.ImporteAjuste < 0 
			THEN round(-stkMoviCuerpoReva.ImporteAjuste,2) ELSE 0 END)  AS TotalSalida,
			Convert(Numeric(18,4),0) Cantidad, Convert(Numeric(18,4),0) Costo,  Convert(Numeric(18,2),0) Total,
		genUsuarios.Usuario_Id, conAsientos.Observaciones, disFormularios.Descripcion as Formulario,
				conAsientos.conAsientos, stkMoviCuerpoReva.Renglon
from stkMoviCabe INNER JOIN conAsientos ON
	stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
	INNER JOIN stkMoviCuerpoReva ON
	stkMoviCuerpoReva.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkProductos ON
	stkProductos.stkProductos =stkMoviCuerpoReva.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	inner join stkSubTipoMov ON
	stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id
	LEFT JOIN (comEmbAsiCierre INNER JOIN genAsiSegmentos AS EmbSegmento ON
	 comEmbAsiCierre.comEmbarques = EmbSegmento.Asiento_Id) ON
	 comEmbAsiCierre.stkMoviCabe = stkMoviCabe.stkMoviCabe
	 inner join genSucursalesEmpr ON
	 genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	 left join stkDepositos ON
	 stkDepositos.stkDepositos = genSucursalesEmpr.DepositoVentas
	INNER JOIN genUsuarios on genUsuarios.genUsuarios = conAsientos.Usuario_Id
	INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
	Left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
	Left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
Where
	stkMoviCuerpoReva.ImporteAjuste <> 0 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta	and 
	ISNULL(stkDepositos.Deposito_Id, ' ') between @DepositoDesde AND @DepositoHasta and 
	(stkMoviCabe.SubTipoMov_Id = @SubTipomov or @SubTipoMov=' ') and 
	ISNULL(stkFamilias.Familia_Id, ' ') between @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id, ' ') between @GrupoDesde and @GrupoHasta 
UNION ALL
SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	 stkUniMed.Medida_Id, 
	dateadd(dd,-1,@FechaDesde) as Fecha,  dateadd(dd,-1,@FechaDesde) FechaRegistro,  0,
	' ' Deposito_Id, 
	' ',
	'Saldo Inicial' as SegmentoStr,' ' Detalle, ' ' AS Entidad, ' ' as RazonSocial,
		Convert(Numeric(18,4),SUM(stkMoviCuerpo.Cantidad*stkMoviCabe.Signo )) AS CantEntrada,
		Convert(Numeric(18,4),case when SUM(stkMoviCuerpo.Cantidad* stkMoviCabe.Signo ) = 0 then 0 else 
		(SUM(stkMoviCuerpo.Cantidad* stkMoviCuerpo.CostoUnitario * stkMoviCabe.Signo) +
		ISNULL((SELECT SUM(round(stkMoviCuerpoReva.ImporteAjuste,2))--+stkMoviCuerpoReva.ImporteAjusteCosto) 
			from stkMoviCuerpoReva inner join conAsientos conAsientosA on
			stkMoviCuerpoReva.stkmovicabe =conAsientosA.conasientos and
			stkMoviCuerpoReva.Producto_Id = stkProductos.stkProductos 
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = conAsientosA.Sucursal 
			left join stkDepositos stkDepositosA ON 
			stkDepositosA.stkDepositos = genSucursalesEmpr.DepositoVentas
			Where
			ISNULL(stkDepositosA.Deposito_Id, ' ') between @DepositoDesde AND @DepositoHasta and 
			conAsientosA.Anulado = 0 and conAsientosA.Empresa_Id = @Empresa_Id And conAsientosA.Fecha < @FechaDesde And
			conAsientosA.Posteado = 1),0))
		/SUM(stkMoviCuerpo.Cantidad* stkMoviCabe.Signo ) end)  AS CostoUEntrada,
		Convert(Numeric(18,2),SUM(round(stkMoviCuerpo.Cantidad* stkMoviCuerpo.CostoUnitario * stkMoviCabe.Signo,2))+
		ISNULL((SELECT SUM(round(stkMoviCuerpoReva.ImporteAjuste,2))--+stkMoviCuerpoReva.ImporteAjusteCosto) 
			from stkMoviCuerpoReva inner join conAsientos conAsientosA on
			stkMoviCuerpoReva.stkmovicabe =conAsientosA.conasientos and
			stkMoviCuerpoReva.Producto_Id = stkProductos.stkProductos 
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = conAsientosA.Sucursal 
			left join stkDepositos stkDepositosA ON 
			stkDepositosA.stkDepositos = genSucursalesEmpr.DepositoVentas
			Where
			ISNULL(stkDepositosA.Deposito_Id, ' ') between @DepositoDesde AND @DepositoHasta and 
			conAsientosA.Anulado = 0 and conAsientosA.Empresa_Id = @Empresa_Id And conAsientosA.Fecha < @FechaDesde And
			conAsientosA.Posteado = 1),0)) AS TotalEntrada,
		0 AS CantSalida,
		0 AS CostoUSalida,
		0 AS TotalSalida,
		Convert(Numeric(18,4),0) Cantidad, Convert(Numeric(18,4),0) Costo,  Convert(Numeric(18,2),0) Total,
		' ' Usuario_Id, ' ' Observaciones, ' ' Formulario,
		0 conAsientos, 0 Renglon

from stkMoviCabe INNER JOIN conAsientos ON
	stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkProductos ON
	stkProductos.stkProductos =stkMoviCuerpo.Producto_Id
	INNER JOIN stkDepositos ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	Left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
	Left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
	
Where	
	@ConSaldoIni = 1 AND 
	conAsientos.Anulado = 0 and conAsientos.Posteado = 1 And
	conAsientos.Empresa_Id = @Empresa_Id and
	conAsientos.Fecha < @FechaDesde  and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta	and 
	stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta and 
	@SubTipoMov=' ' and 
	ISNULL(stkFamilias.Familia_Id, ' ') between @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id, ' ') between @GrupoDesde and @GrupoHasta 
	GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion,  stkUniMed.Medida_Id, 
	stkProductos.stkProductos
	HAVING SUM(stkMoviCuerpo.Cantidad * stkMoviCabe.Signo)  <> 0
ORDER BY 1,4, 5, 6
OPTION (RECOMPILE)

DECLARE @Producto_Id VarChar(25)
DECLARE @ProductoAct VarChar(25)
DECLARE @CantEntrada Numeric(18,4)
DECLARE @CantSalida Numeric(18,4)
DECLARE @CostoUEntrada Numeric(18,4)
DECLARE @CostoUSalida Numeric(18,4)
DECLARE @Cantidad Numeric(18,4)
DECLARE @Total Numeric(18,4)
DECLARE @conAsientos bigint
DECLARE @Renglon int
DECLARE @Fecha DateTime
DECLARE @FechaRegistro DateTime

DECLARE @IDX VARCHAR(15)  
SET @IDX = 'IDX'+ CONVERT(VARCHAR(10),CONVERT(INT,RAND()*100000))
DECLARE @SQL VARCHAR(MAX) 
SET @SQL = 'CREATE INDEX '+@IDX+' ON #Temp1 (conAsientos, Renglon, Producto_Id) '
exec sp_sqlexec @sql


DECLARE curStock CURSOR  FOR
select Producto_Id, Fecha, FechaRegistro, CantEntrada, CantSalida, CostoUEntrada, CostoUSalida, 
	conAsientos, Renglon
FROM #temp1
order by Producto_Id, Fecha, FechaRegistro

OPEN curStock

FETCH NEXT FROM curStock
INTO @Producto_Id, @Fecha, @FechaRegistro, @CantEntrada, @CantSalida, @CostoUEntrada, @CostoUSalida, 
	@conAsientos, @Renglon
  
WHILE @@FETCH_STATUS = 0  
BEGIN  

set @ProductoAct = @Producto_Id
set @Cantidad = 0
set @Total = 0
WHILE @@FETCH_STATUS = 0  and @ProductoAct = @Producto_Id
BEGIN  
set @Cantidad = @Cantidad + @CantEntrada - @CantSalida
set @Total = @Total + @CantEntrada * @CostoUEntrada - @CantSalida * @CostoUSalida

update #temp1 set Cantidad = @Cantidad , Total = @Total, Costo = CASE WHEN @Cantidad != 0 THEN  @Total / @Cantidad ELSE 0 END
	WHERE conAsientos = @conAsientos AND Renglon = @Renglon and Producto_Id = @Producto_Id

FETCH NEXT FROM curStock
INTO @Producto_Id, @Fecha, @FechaRegistro, @CantEntrada, @CantSalida, @CostoUEntrada, @CostoUSalida, 
	@conAsientos, @Renglon

end

end
CLOSE curStock
DEALLOCATE curStock

select * from #temp1 ORDER BY 1,4, 5, 6
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkCartaPorte.sql*/
drop procedure inf_stkCartaPorte
go
create procedure inf_stkCartaPorte
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

SELECT venCamiones.Patente_Id as Camion_Id,  venCamiones.ConfVehicular, venCamiones.Marca, venCamiones.Modelo, 
	venCamiones.NroPermisoSCT, venCamiones.NroPoliza, venCamiones.NombreAseg,
	ISNULL(Remolque1.Patente_Id,'') Remolque1, Remolque1.Marca MarcaR1, Remolque1.Modelo ModeloR1, Remolque1.ConfVehicular ConfVehicularR1,
	ISNULL(Remolque2.Patente_Id,'') Remolque2, Remolque2.Marca MarcaR2, Remolque2.Modelo ModeloR2, Remolque2.ConfVehicular ConfVehicularR2,
	venOperadores.Operador_Id, venOperadores.RfcOperador, venOperadores.NombreOperador, 
	venOperadores.NumLicencia, venOperadores.Calle, venOperadores.NumeroExterior, venOperadores.Numerointerior, 
	venOperadores.Colonia, venOperadores.Localidad, venOperadores.Municipio, venOperadores.Estado, genPaises.CodFiscal Pais
FROM venCompCartaPorte 
	inner join venCamiones ON  venCamiones.venCamiones = venCompCartaPorte.Camion_Id
	left join venCamiones Remolque1 ON  Remolque1.venCamiones = venCompCartaPorte.Remolque1
	left join venCamiones Remolque2 ON  Remolque2.venCamiones = venCompCartaPorte.Remolque2
	inner join venOperadores ON venOperadores.venOperadores =venCompCartaPorte.Operador_Id
	INNER JOIN genPaises ON genPaises.genPaises = venOperadores.Pais
WHERE 
	venCompCartaPorte.venmovimientos = @pstkMoviCabe


go



drop procedure inf_stkCartaPorteOrigenes
go
create procedure inf_stkCartaPorteOrigenes
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

select  venCompCartaPorteOrigen.venMovimientos, venCompCartaPorteOrigen.Ubicacion, venCompCartaPorteOrigen.idOrigen, 
venCompCartaPorteOrigen.RFCRemitente, venCompCartaPorteOrigen.NombreRemitente, 
venCompCartaPorteOrigen.NumRegIdTrib, genPaises.CodFiscal as ResidenciaFiscal, venCompCartaPorteOrigen.NumEstacion, 
venCompCartaPorteOrigen.FechaHoraSalida, venCompCartaPorteOrigen.Calle, venCompCartaPorteOrigen.NumeroExterior, 
venCompCartaPorteOrigen.Numerointerior, venCompCartaPorteOrigen.Colonia as c_Colonia, 
	isnull(genColonias.NombreAsentamiento,'') as NombreAsentamiento, 
	venCompCartaPorteOrigen.Localidad as c_Localidad, ISNULL(genlocalidades.Descripcion,'') AS Localidad, 
	venCompCartaPorteOrigen.Municipio as c_Municipio, ISNULL(genMunicipios.Descripcion,'')  as Municipio,
	venCompCartaPorteOrigen.Estado, venCompCartaPorteOrigen.CodigoPostal, 
	genPaisesD.Descripcion Pais
from venCompCartaPorteOrigen
	inner join  genPaises on  genPaises.genPaises = venCompCartaPorteOrigen.ResidenciaFiscal
	left join genColonias on  genColonias.c_Colonia = venCompCartaPorteOrigen.Colonia
	left join  genlocalidades ON  genlocalidades.c_Localidad = venCompCartaPorteOrigen.Localidad
	LEFT JOIN genMunicipios ON  genMunicipios.c_Municipio = venCompCartaPorteOrigen.Municipio
	inner join  genPaises genPaisesD ON genPaisesD.genPaises = venCompCartaPorteOrigen.Pais
where 
venCompCartaPorteOrigen.venMovimientos = @pstkMoviCabe


go


drop procedure inf_stkCartaPorteDestinos
go
create procedure inf_stkCartaPorteDestinos
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

select  venCompCartaPorteDestino.venMovimientos, venCompCartaPorteDestino.Ubicacion, venCompCartaPorteDestino.IdDestino, 
venCompCartaPorteDestino.RFCDestinatario, venCompCartaPorteDestino.NombreDestinatario, 
venCompCartaPorteDestino.NumRegIdTrib, genPaises.CodFiscal as ResidenciaFiscal, venCompCartaPorteDestino.NumEstacion, 
venCompCartaPorteDestino.FechaHoraProgLlegada, venCompCartaPorteDestino.Calle, venCompCartaPorteDestino.NumeroExterior, 
venCompCartaPorteDestino.Numerointerior, venCompCartaPorteDestino.Colonia as c_Colonia, 
	isnull(genColonias.NombreAsentamiento,'') as NombreAsentamiento, 
	venCompCartaPorteDestino.Localidad as c_Localidad, ISNULL(genlocalidades.Descripcion,'') AS Localidad, 
	venCompCartaPorteDestino.Municipio as c_Municipio, ISNULL(genMunicipios.Descripcion,'')  as Municipio,
	venCompCartaPorteDestino.Estado, venCompCartaPorteDestino.CodigoPostal, 
	genPaisesD.Descripcion Pais
from venCompCartaPorteDestino
	inner join  genPaises on  genPaises.genPaises = venCompCartaPorteDestino.ResidenciaFiscal
	left join genColonias on  genColonias.c_Colonia = venCompCartaPorteDestino.Colonia
	left join  genlocalidades ON  genlocalidades.c_Localidad = venCompCartaPorteDestino.Localidad
	LEFT JOIN genMunicipios ON  genMunicipios.c_Municipio = venCompCartaPorteDestino.Municipio
	inner join  genPaises genPaisesD ON genPaisesD.genPaises = venCompCartaPorteDestino.Pais
where 
venCompCartaPorteDestino.venMovimientos = @pstkMoviCabe

go

drop procedure inf_stkCartaPorteCFDI
go
create procedure inf_stkCartaPorteCFDI
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

select ClaveFiscal, Fecha, SelloDigital, FechaString AS FechaTimbrado, SelloFiscal, NoCertificadoFiscal, NoCertificadoPropio, RfcProvCertif 
from  venMovimientosFiscal 
where
	venMovimientos = @pStkMovicabe

go


drop procedure inf_stkCartaPorteCFDIR
go
create procedure inf_stkCartaPorteCFDIR
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

select venMovimientosFiscal.ClaveFiscal, venMovimientosCFDIR.TipoRelacion
from  venMovimientosCFDIR
INNER JOIN  venMovimientosFiscal ON venMovimientosFiscal.venMovimientos =venMovimientosCFDIR.venMovimientosR
where
	venMovimientosCFDIR.venMovimientos = @pStkMovicabe

go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkEmbarque.sql*/
DROP procedure inf_stkEmbarque
GO
create procedure inf_stkEmbarque
(
@pEmpresa_Id int, 
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (Select Asiento_id
 From genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_Id = @pEmpresa_Id and 
	genAsiSegmentos.Segmento_Id = dbo.FuncFKgenSegmentos(@pSegmento_Id) and 
	genAsiSegmentos.Segmento1N = @pSegmento1N and 
	genAsiSegmentos.Segmento2N = @pSegmento2N and 
	genAsiSegmentos.Segmento3N = @pSegmento3N and 
	genAsiSegmentos.Segmento4N = @pSegmento4N and 
	genAsiSegmentos.Segmento1C = @pSegmento1C and 
	genAsiSegmentos.Segmento2C = @pSegmento2C and 
	genAsiSegmentos.Segmento3C = @pSegmento3C and 
	genAsiSegmentos.Segmento4C = @pSegmento4C )
Select genAsiSegmentos.Empresa_Id, dbo.Segmento(genSegmentos.genSegmentos, 
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
	genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N)as SegmentoSTREMB, comProveedores.Proveed_Id, comProveedores.RazonSocial,
	stkMoviEmbarque.RemitoProv, comDespachos.Despacho_Id
From stkMoviEmbarque
Inner Join genAsiSegmentos On genAsiSegmentos.Asiento_Id = stkMoviEmbarque.comEmbarques
Inner Join genSegmentos On genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
Inner Join comProveedores On comProveedores.genEntidades = stkMoviEmbarque.Proveed_Id
Inner Join comDespachos On comDespachos.comDespachos = stkMoviEmbarque.Despacho_Id
Where stkMoviEmbarque.stkMoviCabe = @pstkMoviCabe
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkEnsambles.sql*/
-- Inf_stkEnsambles ' ','zzz',1
DROP PROCEDURE Inf_stkEnsambles
GO
CREATE PROCEDURE Inf_stkEnsambles(
	@EnsambleDesde VarChar(25),
	@EnsambleHasta VarChar(25),
	@Empresa_Id Int
)
AS
SELECT Ensables.Producto_Id Ensamble , Ensables.Descripcion as DescripcionEnsamble,
stkProductos.Producto_Id, stkProductos.Descripcion, stkProductosCombo.Cantidad, 
	isnull(stkProductosCostos.CostoUltCompra, stkProductos.CostoUltCompra) as CostoUltCompra, 
	isnull(stkProductosCostos.CostoPromPond, stkProductos.CostoPromPond) as CostoReposicion
FROM stkProductos as Ensables 
INNER JOIN stkProductosCombo ON stkProductosCombo.Combo_Id = Ensables.stkProductos
INNER JOIN stkProductos ON  stkProductosCombo.Producto_Id = stkProductos.stkProductos
LEFT JOIN stkProductosCostos ON stkProductosCostos.Producto_Id =stkProductos.stkProductos
WHERE
	Ensables.Producto_Id Between @EnsambleDesde and @EnsambleHasta and 
	@Empresa_Id = ISNULL(Ensables.Empresa_Id,@Empresa_Id)
order by 1,3
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkEnTransito.sql*/
drop procedure inf_stkEnTransito
go
create procedure inf_stkEnTransito
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

Exec stkEnTransitoDatos @pstkMoviCabe
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkExceso.sql*/
-- INF_stkExceso ' ','ZZZ',' ','ZZZZ', 1
DROP PROCEDURE INF_stkExceso
GO
CREATE PROCEDURE INF_stkExceso
(
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa Int
)
AS

SELECT stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepo, 
	stkProductos.Producto_Id, stkProductos.Descripcion AS DescripcionProducto, 
	ISNULL(stkExistencia.Cantidad,0) as Stock, stkMaxMin.Maximo, 
	ISNULL(stkExistencia.Cantidad,0) - stkMaxMin.Maximo as Exceso
FROM stkProductos inner join stkMaxMin ON
stkProductos.stkProductos = stkMaxMin.Producto_Id and 
stkMaxMin.Empresa_Id = @Empresa
inner join stkDepositos ON
stkDepositos.stkDepositos = stkMaxMin.Deposito_Id
left join stkExistencia ON
stkExistencia.Producto_Id = stkProductos.stkProductos and
stkExistencia.Deposito_Id = stkDepositos.stkDepositos and 
stkExistencia.Empresa_Id = @Empresa
WHERE
	ISNULL(stkProductos.Empresa_Id , @Empresa) = @Empresa and
	stkProductos.Producto_Id between @ProductoDesde And @ProductoHasta AND
	stkDepositos.Deposito_Id between @DepositoDesde And @DepositoHasta and 
	stkProductos.Inactivo = 0 and 
	stkProductos.Posteado = 1 AND 
	stkDepositos.Inactivo = 0 and 
	stkDepositos.Posteado = 1 and 
	stkMaxMin.Maximo < ISNULL(stkExistencia.Cantidad,0)
ORDER BY 1, 3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkExistLoteSerie.sql*/
-- inf_stkExistLoteSerie ' ','zzz',' ','zzz',' ','zzz',' ','zzz',' ','zzz',1
DROP PROCEDURE inf_stkExistLoteSerie
GO
CREATE PROCEDURE inf_stkExistLoteSerie
(

@pProductoDesde varchar(25),
@pProductoHasta varchar(25),
@pDepositoDesde varchar(5),
@pDepositoHasta varchar(5),
@pLoteDesde varchar(25),
@pLoteHasta varchar(25),
@pFamiliaDesde varchar(15),
@pFamiliaHasta varchar(15),
@pGrupoDesde varchar(15),
@pGrupoHasta varchar(15),
@Empresa_Id Int

)

as

SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepo, 
	stkExistenciaSerie.Serie, stkExistenciaSerie.Cantidad, 
	ISNULL(Convert(Char(10),stkSerieVencimiento.Vencimiento,103), ' ') as Vencimiento
	FROM stkProductos 
		INNER JOIN stkExistenciaSerie ON stkProductos.stkProductos = stkExistenciaSerie.Producto_Id
		INNER JOIN stkDepositos ON stkDepositos.stkDepositos=stkExistenciaSerie.Deposito_Id
		LEFT JOIN stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id 
		LEFT JOIN stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
		LEFT JOIN stkSerieVencimiento ON stkSerieVencimiento.Empresa_Id = stkExistenciaSerie.Empresa_Id and 
			stkSerieVencimiento.Serie = stkExistenciaSerie.Serie and
			stkSerieVencimiento.Producto_Id = stkExistenciaSerie.Producto_Id
WHERE
	stkExistenciaSerie.Cantidad > 0 AND
	stkDepositos.Deposito_Id BETWEEN @pDepositoDesde and @pDepositoHasta  and 
	stkProductos.Producto_Id BETWEEN @pProductoDesde and @pProductoHasta and 
	stkExistenciaSerie.Serie BETWEEN @pLoteDesde and @pLoteHasta and 
	ISNULL(stkFamilias.Familia_Id, ' ') BETWEEN @pFamiliaDesde and @pFamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') Between @pGrupoDesde and @pGrupoHasta and  
	stkExistenciaSerie.Empresa_Id = @Empresa_Id 
ORDER BY 1,3,5
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkHojaDeRuta.sql*/
-- Inf_stkHojaDeRuta 1,'HOJADERUTA',1,0,0,0,'CCG',' ',' ',' '
--SELECT * FROM stkRemitos WHERE HojaRuta_Id IS NOT NULL
DROP Procedure Inf_stkHojaDeRuta
GO
Create Procedure Inf_stkHojaDeRuta
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)

AS

SELECT 
dbo.Segmento(stkHojaSegmentos.Segmento_Id, stkHojaSegmentos.Segmento1C, 
stkHojaSegmentos.Segmento2C, stkHojaSegmentos.Segmento3C, stkHojaSegmentos.Segmento4C, 
stkHojaSegmentos.Segmento1N, stkHojaSegmentos.Segmento2N, stkHojaSegmentos.Segmento3N, 
stkHojaSegmentos.Segmento4N) AS HojaDeRuta, 
venClieHabitual.CodPostal_Entr as CodigoPostal, 
venClientes.Cliente_Id, venClientes.RazonSocial, venClieHabitual.NombreFantasia, 
venClieHabitual.Direccion1_Entr as Calle, venClieHabitual.NroExterior_Entr AS NroExterior, 
venClieHabitual.NroInterior_Entr AS NroInterior, venClieHabitual.Direccion2_Entr as Colonia, 
venClieHabitual.Localidad_Entr AS Localidad, genProvincias.Descripcion as Estado, 
genPaises.Descripcion AS Pais,
'Remito' as Tipo, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
genAsiSegmentos.Segmento4N) AS Comprobante, 
conAsientos.Fecha, venCamiones.Patente_Id, venCamiones.Descripcion as DescripcionCamion, 
Acoplado.Patente_Id PatenteAcoplado , Acoplado.Descripcion as DescripcionAcoplado, 
venFormaEntrega.FormaEntrega_Id , venFormaEntrega.RazonSocial as DescripcionFormaEntrega
, stkHojaDeRuta.FechaRegistro, stkHojaDeRuta.Chofer
from stkHojaSegmentos 
	INNER JOIN stkHojaDeRuta ON stkHojaDeRuta.stkHojaDeRuta = stkHojaSegmentos.stkHojaDeRuta
	INNER JOIN stkRemitos ON  stkRemitos.HojaRuta_Id = stkHojaDeRuta.stkHojaDeRuta
	INNER JOIN genSegmentos ON  genSegmentos.genSegmentos = stkHojaSegmentos.Segmento_Id
	INNER JOIN conAsientos ON conAsientos.conAsientos = stkRemitos.stkMoviCabe 
	INNER JOIN genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = stkRemitos.Cliente_Id AND 
								  venClieHabitual.Sucursal =  stkRemitos.Sucursal
	INNER JOIN venClientes ON  venClientes.genEntidades = venClieHabitual.genEntidades
	INNER JOIN genProvincias ON genProvincias.genProvincias = venClieHabitual.Provincia_Id_Entr
	INNER JOIN genPaises ON genPaises.genPaises = venClieHabitual.Pais_Id_Entr
	LEFT JOIN venCamiones ON venCamiones.venCamiones = stkHojaDeRuta.Patente_Id
	LEFT JOIN venCamiones as Acoplado ON Acoplado.venCamiones = stkHojaDeRuta.PatenteAcoplado
	LEFT JOIN venFormaEntrega ON venFormaEntrega.venFormaEntrega = stkHojaDeRuta.FormaEntrega_Id
WHERE
	genSegmentos.Segmento_Id = @pSegmento_Id AND 
	stkHojaSegmentos.Segmento1C = @pSegmento1C AND
	stkHojaSegmentos.Segmento2C = @pSegmento2C AND
	stkHojaSegmentos.Segmento3C = @pSegmento3C AND
	stkHojaSegmentos.Segmento4C = @pSegmento4C AND
	stkHojaSegmentos.Segmento1N = @pSegmento1N AND
	stkHojaSegmentos.Segmento2N = @pSegmento2N AND
	stkHojaSegmentos.Segmento3N = @pSegmento3N AND
	stkHojaSegmentos.Segmento4N = @pSegmento4N AND
	stkHojaSegmentos.Empresa_Id = @pEmpresa_Id
UNION ALL
SELECT 
dbo.Segmento(stkHojaSegmentos.Segmento_Id, stkHojaSegmentos.Segmento1C, 
stkHojaSegmentos.Segmento2C, stkHojaSegmentos.Segmento3C, stkHojaSegmentos.Segmento4C, 
stkHojaSegmentos.Segmento1N, stkHojaSegmentos.Segmento2N, stkHojaSegmentos.Segmento3N, 
stkHojaSegmentos.Segmento4N) AS HojaDeRuta, 
venClieHabitual.CodPostal_Entr as CodigoPostal, 
venClientes.Cliente_Id, venClientes.RazonSocial, venClieHabitual.NombreFantasia, 
venClieHabitual.Direccion1_Entr as Calle, venClieHabitual.NroExterior_Entr AS NroExterior, 
venClieHabitual.NroInterior_Entr AS NroInterior, venClieHabitual.Direccion2_Entr as Colonia, 
venClieHabitual.Localidad_Entr AS Localidad, genProvincias.Descripcion as Estado, 
genPaises.Descripcion AS Pais,
'Factura' as Tipo, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
genAsiSegmentos.Segmento4N) AS Comprobante, 
conAsientos.Fecha, venCamiones.Patente_Id, venCamiones.Descripcion as DescripcionCamion, 
Acoplado.Patente_Id PatenteAcoplado , Acoplado.Descripcion as DescripcionAcoplado, 
venFormaEntrega.FormaEntrega_Id , venFormaEntrega.RazonSocial as DescripcionFormaEntrega
, stkHojaDeRuta.FechaRegistro, stkHojaDeRuta.Chofer
from stkHojaSegmentos 
	INNER JOIN stkHojaDeRuta ON stkHojaDeRuta.stkHojaDeRuta = stkHojaSegmentos.stkHojaDeRuta
	INNER JOIN stkHojaDeRutaCuerpo ON stkHojaDeRuta.stkHojaDeRuta = stkHojaDeRutaCuerpo.stkHojaDeRuta
	INNER JOIN venMovimientos ON  venMovimientos.venMovimientos = stkHojaDeRutaCuerpo.conAsientos
	INNER JOIN genSegmentos ON  genSegmentos.genSegmentos = stkHojaSegmentos.Segmento_Id
	INNER JOIN conAsientos ON conAsientos.conAsientos = venMovimientos.venMovimientos
	INNER JOIN genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id AND 
								  venClieHabitual.Sucursal =  venMovimientos.Sucursal
	INNER JOIN venClientes ON  venClientes.genEntidades = venClieHabitual.genEntidades
	INNER JOIN genProvincias ON genProvincias.genProvincias = venClieHabitual.Provincia_Id_Entr
	INNER JOIN genPaises ON genPaises.genPaises = venClieHabitual.Pais_Id_Entr
	LEFT JOIN venCamiones ON venCamiones.venCamiones = stkHojaDeRuta.Patente_Id
	LEFT JOIN venCamiones as Acoplado ON Acoplado.venCamiones = stkHojaDeRuta.PatenteAcoplado
	LEFT JOIN venFormaEntrega ON venFormaEntrega.venFormaEntrega = venMovimientos.FormaEntrega_Id
WHERE
	genSegmentos.Segmento_Id = @pSegmento_Id AND 
	stkHojaSegmentos.Segmento1C = @pSegmento1C AND
	stkHojaSegmentos.Segmento2C = @pSegmento2C AND
	stkHojaSegmentos.Segmento3C = @pSegmento3C AND
	stkHojaSegmentos.Segmento4C = @pSegmento4C AND
	stkHojaSegmentos.Segmento1N = @pSegmento1N AND
	stkHojaSegmentos.Segmento2N = @pSegmento2N AND
	stkHojaSegmentos.Segmento3N = @pSegmento3N AND
	stkHojaSegmentos.Segmento4N = @pSegmento4N AND
	stkHojaSegmentos.Empresa_Id = @pEmpresa_Id
ORDER BY 2,6,7

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkHojaDeRutaDeta.sql*/
DROP Procedure Inf_stkHojaDeRutaDeta
GO
Create Procedure Inf_stkHojaDeRutaDeta
(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

)

AS

SELECT 
dbo.Segmento(stkHojaSegmentos.Segmento_Id, stkHojaSegmentos.Segmento1C, 
stkHojaSegmentos.Segmento2C, stkHojaSegmentos.Segmento3C, stkHojaSegmentos.Segmento4C, 
stkHojaSegmentos.Segmento1N, stkHojaSegmentos.Segmento2N, stkHojaSegmentos.Segmento3N, 
stkHojaSegmentos.Segmento4N) AS HojaDeRuta, 
venClieHabitual.CodPostal_Entr as CodigoPostal, 
venClientes.Cliente_Id, venClientes.RazonSocial, venClieHabitual.NombreFantasia, 
venClieHabitual.Direccion1_Entr as Calle, venClieHabitual.NroExterior_Entr AS NroExterior, 
venClieHabitual.NroInterior_Entr AS NroInterior, venClieHabitual.Direccion2_Entr as Colonia, 
venClieHabitual.Localidad_Entr AS Localidad, genProvincias.Descripcion as Estado, 
genPaises.Descripcion AS Pais,
'Remito' as Tipo, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
genAsiSegmentos.Segmento4N) AS Comprobante, 
conAsientos.Fecha, venCamiones.Patente_Id, venCamiones.Descripcion as DescripcionCamion, 
Acoplado.Patente_Id PatenteAcoplado , Acoplado.Descripcion as DescripcionAcoplado, 
venFormaEntrega.FormaEntrega_Id , venFormaEntrega.RazonSocial as DescripcionFormaEntrega
, stkHojaDeRuta.FechaRegistro, 
stkMoviCuerpo.Renglon,  stkProductos.Producto_Id, stkProductos.Descripcion, stkMoviCuerpo.CantidadForm, 
stkUniMed.Medida_Id, stkDepositos.Deposito_Id
from stkHojaSegmentos 
	INNER JOIN stkHojaDeRuta ON stkHojaDeRuta.stkHojaDeRuta = stkHojaSegmentos.stkHojaDeRuta
	INNER JOIN stkRemitos ON  stkRemitos.HojaRuta_Id = stkHojaDeRuta.stkHojaDeRuta
	INNER JOIN genSegmentos ON  genSegmentos.genSegmentos = stkHojaSegmentos.Segmento_Id
	INNER JOIN conAsientos ON conAsientos.conAsientos = stkRemitos.stkMoviCabe 
	INNER JOIN genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = stkRemitos.Cliente_Id AND 
								  venClieHabitual.Sucursal =  stkRemitos.Sucursal
	INNER JOIN venClientes ON  venClientes.genEntidades = venClieHabitual.genEntidades
	INNER JOIN genProvincias ON genProvincias.genProvincias = venClieHabitual.Provincia_Id_Entr
	INNER JOIN genPaises ON genPaises.genPaises = venClieHabitual.Pais_Id_Entr
	LEFT JOIN venCamiones ON venCamiones.venCamiones = stkHojaDeRuta.Patente_Id
	LEFT JOIN venCamiones as Acoplado ON Acoplado.venCamiones = stkHojaDeRuta.PatenteAcoplado
	LEFT JOIN venFormaEntrega ON venFormaEntrega.venFormaEntrega = stkHojaDeRuta.FormaEntrega_Id
	INNER JOIN stkMoviCuerpo ON  stkMoviCuerpo.stkMoviCabe = stkRemitos.stkMoviCabe
	INNER JOIN stkProductos ON  stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON  stkUniMed.stkUniMed = stkMoviCuerpo.Medida_Id
	INNER JOIN stkDepositos ON  stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
WHERE
	genSegmentos.Segmento_Id = @pSegmento_Id AND 
	stkHojaSegmentos.Segmento1C = @pSegmento1C AND
	stkHojaSegmentos.Segmento2C = @pSegmento2C AND
	stkHojaSegmentos.Segmento3C = @pSegmento3C AND
	stkHojaSegmentos.Segmento4C = @pSegmento4C AND
	stkHojaSegmentos.Segmento1N = @pSegmento1N AND
	stkHojaSegmentos.Segmento2N = @pSegmento2N AND
	stkHojaSegmentos.Segmento3N = @pSegmento3N AND
	stkHojaSegmentos.Segmento4N = @pSegmento4N AND
	stkHojaSegmentos.Empresa_Id = @pEmpresa_Id
UNION ALL
SELECT 
dbo.Segmento(stkHojaSegmentos.Segmento_Id, stkHojaSegmentos.Segmento1C, 
stkHojaSegmentos.Segmento2C, stkHojaSegmentos.Segmento3C, stkHojaSegmentos.Segmento4C, 
stkHojaSegmentos.Segmento1N, stkHojaSegmentos.Segmento2N, stkHojaSegmentos.Segmento3N, 
stkHojaSegmentos.Segmento4N) AS HojaDeRuta, 
venClieHabitual.CodPostal_Entr as CodigoPostal, 
venClientes.Cliente_Id, venClientes.RazonSocial, venClieHabitual.NombreFantasia, 
venClieHabitual.Direccion1_Entr as Calle, venClieHabitual.NroExterior_Entr AS NroExterior, 
venClieHabitual.NroInterior_Entr AS NroInterior, venClieHabitual.Direccion2_Entr as Colonia, 
venClieHabitual.Localidad_Entr AS Localidad, genProvincias.Descripcion as Estado, 
genPaises.Descripcion AS Pais,
'Factura' as Tipo, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
genAsiSegmentos.Segmento4N) AS Comprobante, 
conAsientos.Fecha, venCamiones.Patente_Id, venCamiones.Descripcion as DescripcionCamion, 
Acoplado.Patente_Id PatenteAcoplado , Acoplado.Descripcion as DescripcionAcoplado, 
venFormaEntrega.FormaEntrega_Id , venFormaEntrega.RazonSocial as DescripcionFormaEntrega
, stkHojaDeRuta.FechaRegistro, 
venMovConStockCr.RenglonCuerpo,  stkProductos.Producto_Id, stkProductos.Descripcion, venMovConStockCr.CantOriginal, 
stkUniMed.Medida_Id, stkDepositos.Deposito_Id
from stkHojaSegmentos 
	INNER JOIN stkHojaDeRuta ON stkHojaDeRuta.stkHojaDeRuta = stkHojaSegmentos.stkHojaDeRuta
	INNER JOIN stkHojaDeRutaCuerpo ON stkHojaDeRuta.stkHojaDeRuta = stkHojaDeRutaCuerpo.stkHojaDeRuta
	INNER JOIN venMovimientos ON  venMovimientos.venMovimientos = stkHojaDeRutaCuerpo.conAsientos
	INNER JOIN genSegmentos ON  genSegmentos.genSegmentos = stkHojaSegmentos.Segmento_Id
	INNER JOIN conAsientos ON conAsientos.conAsientos = venMovimientos.venMovimientos
	INNER JOIN genAsiSegmentos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id AND 
								  venClieHabitual.Sucursal =  venMovimientos.Sucursal
	INNER JOIN venClientes ON  venClientes.genEntidades = venClieHabitual.genEntidades
	INNER JOIN genProvincias ON genProvincias.genProvincias = venClieHabitual.Provincia_Id_Entr
	INNER JOIN genPaises ON genPaises.genPaises = venClieHabitual.Pais_Id_Entr
	LEFT JOIN venCamiones ON venCamiones.venCamiones = stkHojaDeRuta.Patente_Id
	LEFT JOIN venCamiones as Acoplado ON Acoplado.venCamiones = stkHojaDeRuta.PatenteAcoplado
	LEFT JOIN venFormaEntrega ON venFormaEntrega.venFormaEntrega = venMovimientos.FormaEntrega_Id
	INNER JOIN venMovConStockCr ON  venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
	INNER JOIN stkProductos ON  stkProductos.stkProductos = venMovConStockCr.Producto_Id
	INNER JOIN stkUniMed ON  stkUniMed.stkUniMed = venMovConStockCr.Medida_Id
	INNER JOIN stkDepositos ON  stkDepositos.stkDepositos = venMovConStockCr.Deposito_Id
WHERE
	genSegmentos.Segmento_Id = @pSegmento_Id AND 
	stkHojaSegmentos.Segmento1C = @pSegmento1C AND
	stkHojaSegmentos.Segmento2C = @pSegmento2C AND
	stkHojaSegmentos.Segmento3C = @pSegmento3C AND
	stkHojaSegmentos.Segmento4C = @pSegmento4C AND
	stkHojaSegmentos.Segmento1N = @pSegmento1N AND
	stkHojaSegmentos.Segmento2N = @pSegmento2N AND
	stkHojaSegmentos.Segmento3N = @pSegmento3N AND
	stkHojaSegmentos.Segmento4N = @pSegmento4N AND
	stkHojaSegmentos.Empresa_Id = @pEmpresa_Id

ORDER BY 2,6,7

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkInvAjustes.sql*/
DROP PROCEDURE INF_stkInvAjustes
GO
CREATE PROCEDURE INF_stkInvAjustes(
@Empresa Int, 
@Segmento_Id VarChar(10),
@Segmento1N INT,
@Segmento2N INT,
@Segmento3N INT,
@Segmento4N INT,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)

as
SELECT XXX.InventarioSeg, XXX.FechaInventario, XXX.UsuarioRespozable, 
	XXX.Producto_Id, XXX.Descripcion, xxx.Medida_Id, xxx.Cantidad, xxx.Stock, 
		xxx.Cantidad - xxx.Stock as Diferencia

FROM (

select dbo.Segmento(stkInvenSegmentos.Segmento_Id, 
	stkInvenSegmentos.Segmento1C, stkInvenSegmentos.Segmento2C, 
	stkInvenSegmentos.Segmento3C, stkInvenSegmentos.Segmento4C,
	stkInvenSegmentos.Segmento1N, stkInvenSegmentos.Segmento2N, 
	stkInvenSegmentos.Segmento3N, stkInvenSegmentos.Segmento4N) AS InventarioSeg, 
	stkInventarios.FechaInventario, genUsuarios.Apellido_y_Nombres as UsuarioRespozable, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkInventCuerpo.Cantidad, 
	ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad*stkMoviCabe.Signo) 
			FROM  stkMoviCuerpo INNER JOIN stkMoviCabe ON
			stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
			INNER JOIN conAsientos ON
			conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
			INNER JOIN genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			where
				conAsientos.Fecha <= stkInventarios.FechaInventario and 
				conAsientos.Anulado = 0 and 
				genAsiSegmentos.Empresa_Id = @Empresa and 
				stkMoviCuerpo.Producto_Id = stkProductos.stkProductos and 
				stkMoviCuerpo.Deposito_Id = stkInventarios.Deposito_Id),0) as Stock

 from 
	stkInvenSegmentos inner join stkInventarios ON
	stkInvenSegmentos.stkInventarios = stkInventarios.stkInventarios
	INNER JOIN genUsuarios ON 
	genUsuarios.genUsuarios =stkInventarios.UsuRespo_Id
	INNER JOIN stkInventCuerpo on
	stkInventCuerpo.stkInventarios = stkInventarios.stkInventarios
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkInventCuerpo.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = stkInvenSegmentos.Segmento_Id
	LEFT JOIN stkUniMed as stkUmAlterna ON
	stkUmAlterna.stkUniMed = stkProductos.Medida_Id
	Where
		genSegmentos.Segmento_Id = @Segmento_id and
		stkInvenSegmentos.Segmento1N = @Segmento1N and
		stkInvenSegmentos.Segmento2N = @Segmento2N and
		stkInvenSegmentos.Segmento3N = @Segmento3N and
		stkInvenSegmentos.Segmento4N = @Segmento4N and
		stkInvenSegmentos.Segmento1C = @Segmento1C and
		stkInvenSegmentos.Segmento2C = @Segmento2C and
		stkInvenSegmentos.Segmento3C = @Segmento3C and
		stkInvenSegmentos.Segmento4C = @Segmento4C and
		stkInvenSegmentos.Empresa_Id = @Empresa) AS XXX
		
order by 4
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkInvIngresado.sql*/
--INF_stkInvIngresado 1, 'INV',1,0,0,0,'0001',' ',' ',' '


DROP PROCEDURE INF_stkInvIngresado
GO
CREATE PROCEDURE INF_stkInvIngresado(
@Empresa Int, 
@Segmento_Id VarChar(10),
@Segmento1N INT,
@Segmento2N INT,
@Segmento3N INT,
@Segmento4N INT,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)

as

select dbo.Segmento(stkInvenSegmentos.Segmento_Id, 
	stkInvenSegmentos.Segmento1C, stkInvenSegmentos.Segmento2C, 
	stkInvenSegmentos.Segmento3C, stkInvenSegmentos.Segmento4C,
	stkInvenSegmentos.Segmento1N, stkInvenSegmentos.Segmento2N, 
	stkInvenSegmentos.Segmento3N, stkInvenSegmentos.Segmento4N) AS InventarioSeg, 
	stkInventarios.FechaInventario, genUsuarios.Apellido_y_Nombres as UsuarioRespozable, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkInventCuerpo.Cantidad, 
	stkProductos.ClaseAlterna, stkInventCuerpo.CantidadAlterna, 
	isnull(stkUmAlterna.Medida_Id,  ' ') as MedidaAlterna
	

 from 
	stkInvenSegmentos inner join stkInventarios ON
	stkInvenSegmentos.stkInventarios = stkInventarios.stkInventarios
	INNER JOIN genUsuarios ON 
	genUsuarios.genUsuarios =stkInventarios.UsuRespo_Id
	INNER JOIN stkInventCuerpo on
	stkInventCuerpo.stkInventarios = stkInventarios.stkInventarios
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkInventCuerpo.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = stkInvenSegmentos.Segmento_Id
	LEFT JOIN stkUniMed as stkUmAlterna ON
	stkUmAlterna.stkUniMed = stkProductos.Medida_Id
	Where
		genSegmentos.Segmento_Id = @Segmento_Id and
		stkInvenSegmentos.Segmento1N = @Segmento1N and
		stkInvenSegmentos.Segmento2N = @Segmento2N and
		stkInvenSegmentos.Segmento3N = @Segmento3N and
		stkInvenSegmentos.Segmento4N = @Segmento4N and
		stkInvenSegmentos.Segmento1C = @Segmento1C and
		stkInvenSegmentos.Segmento2C = @Segmento2C and
		stkInvenSegmentos.Segmento3C = @Segmento3C and
		stkInvenSegmentos.Segmento4C = @Segmento4C and
		stkInvenSegmentos.Empresa_Id = @Empresa
		
order by 4
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkMaterialEnPers.sql*/
-- exec inf_stkMaterialEnPers 0,99999,' ','zzz',1
DROP PROCEDURE inf_stkMaterialEnPers
GO

CREATE PROCEDURE inf_stkMaterialEnPers
(
	@LegajoDesde Int, 
	@LegajoHasta Int, 
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa_Id int
)
AS

SELECT suePersonal.Legajo, suePersonal.Nombres +', '+suePersonal.ApellidoPaterno +
	CASE WHEN suePersonal.ApellidoPaterno = ' ' THEN '' ELSE ', ' end +suePersonal.ApellidoMaterno as Nombre,
stkProductos.Producto_Id, stkProductos.Descripcion, 
SUM(stkMoviCuerpo.Cantidad* stkMoviCabe.Signo) as Cantidad , stkUniMed.Medida_Id
FROM  stkMoviCabe 
	INNER JOIN stkMoviCuerpo ON stkMoviCuerpo.stkMoviCabe =stkMoviCabe.stkMoviCabe
	INNER JOIN stkMoviLega ON  stkMoviLega.stkMoviCabe =stkMoviCabe.stkMoviCabe
	INNER JOIN conAsientos ON  conAsientos.conAsientos =stkMoviCabe.stkMoviCabe
	INNER JOIN suePersonal ON suePersonal.genEntidades = stkMoviLega.Legajo 
	INNER JOIN stkProductos ON  stkProductos.stkProductos = stkMoviCuerpo.Producto_Id 
	INNER JOIN stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
WHERE
	conAsientos.Anulado = 0 and
	conAsientos.Posteado = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and 
	suePersonal.Legajo bETWEEN @LegajoDesde AND @LegajoHasta AND 
	stkProductos.Producto_Id Between @ProductoDesde AND @ProductoHasta
GROUP BY suePersonal.Legajo, suePersonal.Nombres ,suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno ,
stkProductos.Producto_Id, stkProductos.Descripcion, stkUniMed.Medida_Id
HAVING SUM(stkMoviCuerpo.Cantidad* stkMoviCabe.Signo) > 0
order by 1,3
GO
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkMaxMin.sql*/
-- INF_stkMaxMin ' ','ZZZ',' ','ZZZZZ', 1,' ','ZZZ',' ','ZZZ'

DROP PROCEDURE INF_stkMaxMin
GO
CREATE PROCEDURE INF_stkMaxMin
(
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa Int,
	@FamiliaDesde varchar(15),
	@FamiliaHasta varchar(15),
	@GrupoDesde varchar(15),
	@GrupoHasta varchar(15)
)

as

SELECT stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepo,
		stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, 
		stkMaxMin.Minimo, stkMaxMin.Maximo
FROM stkMaxMin INNER JOIN stkDepositos ON
	stkMaxMin.Deposito_Id = stkDepositos.stkDepositos
		INNER JOIN stkProductos ON	stkMaxMin.Producto_Id = stkProductos.stkProductos
		left join stkFamilias on stkProductos.Familia_Id= stkFamilias.stkFamilias
		left join stkGrupos on stkProductos.Grupo_Id=stkGrupos.stkGrupos
	WHERE
		stkMaxMin.Empresa_Id = @Empresa and 
		stkProductos.Producto_Id between @ProductoDesde And @ProductoHasta and
		stkDepositos.Deposito_Id between @DepositoDesde And @DepositoHasta AND 
		isnull(stkFamilias.Familia_Id,'') between @FamiliaDesde and @FamiliaHasta and
		isnull(stkGrupos.Grupo_Id,'') between @GrupoDesde and @GrupoHasta and
		stkProductos.Inactivo = 0 and stkProductos.Posteado = 1 and 
		stkDepositos.Inactivo = 0 and stkDepositos.Posteado = 1 and 
		ISNULL(stkProductos.Empresa_Id,@Empresa) =  @Empresa and 
		ISNULL(stkDepositos.Empresa_Id,@Empresa) =  @Empresa 
ORDER BY 1, 3
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkMercTransImp.sql*/
-- INF_stkMercTransImp '20180531',1


DROP PROCEDURE INF_stkMercTransImp
GO
CREATE PROCEDURE INF_stkMercTransImp (
	@FechaHasta DateTime,
	@Empresa int
)

AS



SELECT 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	conAsientos.Fecha, comEmbarques.comEmbarques,
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	comEmbCuerpo.Cantidad - ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad * stkMoviCabe.Signo)
		FROM stkMoviCabe INNER JOIN stkMoviOC on
		stkMoviCabe.stkMoviCabe = stkMoviOC.stkMoviCabe and
		stkmovioc.comOrdenComp = comEmbCuerpo.comOrdenComp and 
		stkmovioc.Renglon_OC =comEmbCuerpo.Renglon_OC
		INNER JOIN stkMoviCuerpo ON
		stkMoviCuerpo.stkMoviCabe = stkMoviOC.stkMoviCabe AND
		stkMoviCuerpo.Renglon =stkMoviOC.Renglon
		INNER JOIN conAsientos ON
		conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Empresa_Id = @Empresa and 
			conAsientos.Fecha <= @FechaHasta),0) AS Cantidad ,
	Convert(numeric(18,4),comOCCuerpo.Precio*conAsientos.Cambio) PrecioMonBase, 
	comOCCuerpo.Precio,
	stkUniMed.Medida_Id , Convert(numeric(18,2),
	(comEmbCuerpo.Cantidad - ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad * stkMoviCabe.Signo)
		FROM stkMoviCabe INNER JOIN stkMoviOC on
		stkMoviCabe.stkMoviCabe = stkMoviOC.stkMoviCabe and
		stkmovioc.comOrdenComp = comEmbCuerpo.comOrdenComp and 
		stkmovioc.Renglon_OC =comEmbCuerpo.Renglon_OC
		INNER JOIN stkMoviCuerpo ON
		stkMoviCuerpo.stkMoviCabe = stkMoviOC.stkMoviCabe AND
		stkMoviCuerpo.Renglon =stkMoviOC.Renglon
		INNER JOIN conAsientos ON
		conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Empresa_Id = @Empresa and 
			conAsientos.Fecha <= @FechaHasta),0)) * 	comOCCuerpo.Precio*conAsientos.Cambio) as Monto
FROM
	comEmbarques INNER JOIN comEmbCuerpo ON
	comEmbarques.comEmbarques = comEmbCuerpo.comEmbarques
	INNER JOIN conAsientos ON
	conAsientos.conAsientos =comEmbarques.comEmbarques
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = comEmbarques.comEmbarques
	INNER JOIN comOCArticulo ON
	comOCArticulo.comOrdenComp = comEmbCuerpo.comOrdenComp AND 
	comOCArticulo.Renglon_OC = comEmbCuerpo.Renglon_OC
	INNER JOIN comOCCuerpo ON
	comOCArticulo.comOrdenComp = comOCCuerpo.comOrdenComp AND 
	comOCArticulo.Renglon_OC = comOCCuerpo.Renglon_OC
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = comOCArticulo.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	WHERE
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa and 
		conAsientos.Fecha <= @FechaHasta  and 

			comEmbCuerpo.Cantidad - ISNULL((SELECT SUM(stkMoviCuerpo.Cantidad * stkMoviCabe.Signo)
		FROM stkMoviCabe INNER JOIN stkMoviOC on
		stkMoviCabe.stkMoviCabe = stkMoviOC.stkMoviCabe and
		stkmovioc.comOrdenComp = comEmbCuerpo.comOrdenComp and 
		stkmovioc.Renglon_OC =comEmbCuerpo.Renglon_OC
		INNER JOIN stkMoviCuerpo ON
		stkMoviCuerpo.stkMoviCabe = stkMoviOC.stkMoviCabe AND
		stkMoviCuerpo.Renglon =stkMoviOC.Renglon
		INNER JOIN conAsientos ON
		conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
		Where
			conAsientos.Anulado = 0 and 
			conAsientos.Empresa_Id = @Empresa and 
			conAsientos.Fecha <= @FechaHasta),0) <> 0
	ORDER BY 1,2,3

go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkMercTransLoc.sql*/
-- INF_stkMercTransLoc '20170831',1
DROP PROCEDURE INF_stkMercTransLoc 
GO

CREATE PROCEDURE INF_stkMercTransLoc (
	@FechaHasta DateTime,
	@Empresa int
)

AS



SELECT 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	conAsientos.Fecha, stkMoviCabe.StkMoviCabe,
	stkDepositos.Deposito_Id as Deposito, stkDepositos.Descripcion  as DescripcionDepo,
	stkDepositosD.Deposito_Id as DepositoDestino, stkDepositosD.Descripcion  as DescripcionDepoDestino,
	stkProductos.Producto_Id, stkProductos.Descripcion, stkMoviCuerpo.Cantidad,  stkUniMed.Medida_Id, 
	Convert(Numeric(18,2), stkMoviCuerpo.Cantidad*stkMoviCuerpo.CostoUnitario) as Monto

FROM
	stkEnTransito INNER JOIN stkMoviCabe ON
	stkEnTransito.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkMoviCuerpo ON 
	stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe
	INNER JOIN conAsientos ON
	conAsientos.conAsientos =stkMoviCabe.stkMoviCabe 
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = stkMoviCabe.stkMoviCabe 
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	LEFT OUTER JOIN (stkMoviCabe stkMoviCabeEntr INNER JOIN conAsientos conAsientosEntr ON
		stkMoviCabeEntr.stkMoviCabe =conAsientosEntr.conAsientos) ON
	stkMoviCabeEntr.stkMoviCabe = stkEnTransito.stkMoviCabeEntr and
	conAsientosEntr.Fecha <= @FechaHasta 
	inner join stkDepositos  as stkDepositosD ON
	stkDepositosD.stkDepositos = stkEnTransito.Deposito_Id
	inner join stkDepositos  ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	WHERE
		conAsientos.Anulado = 0 and 
		conAsientosEntr.Fecha IS NULL and 
		conAsientos.Empresa_Id = @Empresa and 
		conAsientos.Fecha <= @FechaHasta 
	ORDER BY 1,2,3

go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkMoviCabeH.sql*/
drop procedure inf_stkMoviCabeH
go
create procedure inf_stkMoviCabeH
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )
	
SELECT stkMoviCabe.stkMoviCabe,dbo.Segmento(genSegmentos.genSegmentos, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N) as SegmentoSTR, Cast(0 As Bit) DistribuyeContrapartida,
	conAsientos.Posteado, conAsientos.Fecha, conAsientos.FechaRegistro, 
	conAsientos.Cambio,conAsientos.CambioMonedaOriginal, 
	conAsientos.Anulado, conAsientos.Observaciones,  disFormularios.Formulario_Id Formulario,
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMonedas,
	stkSubTipoMov.SubTipoMov_Id, stkSubTipoMov.Descripcion as DescripcionSubTipoMov, 
	stkMoviCabe.ModificaCosto, 	stkMoviCabe.Signo, stkSubTipoMov.Tipomov, ' ' as Proveed_Id, ' ' Cliente_Id,
	disFormularios.Descripcion as DescripcionFormulario, genUsuarios.Apellido_y_Nombres as Usuario
FROM stkMoviCabe 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = stkMoviCabe.stkMoviCabe)
INNER JOIN stkSubTipoMov  ON (stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_id
Inner Join disFormularios On disFormularios.disFormularios = conAsientos.Formulario_Id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = stkMoviCabe.stkMoviCabe
INNER JOIN genSegmentos ON genAsiSegmentos.Segmento_id = genSegmentos.genSegmentos
inner join genUsuarios on genUsuarios.genUsuarios=conAsientos.Usuario_Id
WHERE (stkMoviCabe = @pstkMoviCabe)



go

drop procedure inf_stkMoviCuerpoH
go
create procedure inf_stkMoviCuerpoH
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

	Exec inf_stkMoviCuerpoDatos @pstkMoviCabe
go
drop procedure inf_stkMoviSerieH
go
create procedure inf_stkMoviSerieH
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


	Exec stkMoviSerieDatos @pstkMoviCabe
go
drop procedure inf_stkMoviDespaH
go
create procedure inf_stkMoviDespaH
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

	

Exec stkMoviDespaDatos @pstkMoviCabe
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkMoviCausa.sql*/
DROP PROCEDURE inf_stkMoviCausa
GO
CREATE PROCEDURE inf_stkMoviCausa
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

SELECT stkMoviCausa.stkMoviCabe, stkCausasMovi.Causa_Id, stkCausasMovi.Descripcion as DescripcionCausasMovi,
conCentro1.Centro1_Id, conCentro1.Descripcion DescripcionCentro1,
conCentro2.Centro2_Id, conCentro2.Descripcion DescripcionCentro2
FROM stkMoviCausa 
INNER JOIN stkCausasMovi  ON (stkCausasMovi.stkCausasMovi = stkMoviCausa.Causa_Id)
Inner Join conCentro1 On stkMoviCausa.Centro1_Id = conCentro1.conCentro1
Inner Join conCentro2 On stkMoviCausa.Centro2_Id = conCentro2.conCentro2
WHERE (stkMoviCausa.stkMoviCabe = @pstkMoviCabe)
 
 RETURN @@Error 

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_stkMoviCuerpoDatos.sql*/
DROP PROCEDURE Inf_stkMoviCuerpoDatos
GO

CREATE PROCEDURE Inf_stkMoviCuerpoDatos
(
@pstkMoviCabe bigint,
@pRenglon int = NULL
)
AS
SET NOCOUNT ON 

Declare @lItemsXRemito int
Set @lItemsXRemito = isNull((Select nValor From genGlobales Where Nombre_Var = 'StkItemsXRemito'), 0)

SELECT qryinterno.*,
	isnull(stkMoviserie.Serie,'') Serie, isnull(stkMoviserie.Cantidad,0) CantidadSerie, isnull(stkSerieVencimiento.Vencimiento,'') FVencimiento,
	qryinterno.RenglonRenum as Renglon		
FROM (
		Select Case When @lItemsXRemito = 0 Then 1 Else 
		((Row_Number() Over (Order by RenglonRenum))-1)/@lItemsXRemito + 1 End Remito ,* From (
		/** query Original **/
		SELECT ROW_NUMBER() OVER( ORDER BY stkMoviCuerpo.stkMoviCabe, stkMoviCuerpo.Renglon) as RenglonRenum /*Agregado */, conAsientos.Empresa_Id,
		    stkMoviCuerpo.stkMoviCabe, stkMoviCuerpo.Renglon as Renglon_Orig /*Renombrado para join externo*/ , 0 RenglonReferencia, stkMoviCuerpo.Fecha,
			stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepositos, 
			stkProductos.stkProductos /*agregado para join externo*/, stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProductos,
			stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionUniMed, stkMoviCuerpo.Factor, stkMoviCuerpo.Cantidad,
			stkMoviCuerpo.CantidadForm, stkMoviCuerpo.CostoUnitario, stkMoviCuerpo.PrecioOriginal,
			stkMedidaAlterna.Medida_Id MedidaAlterna, stkMedidaAlterna.Descripcion as DescripcionMedidaAlterna,
			stkMoviCuerpo.CantidadAlternaForm,
			stkMoviCuerpo.Observaciones, 0.00 AS Descuento, stkMoviCuerpo.conRenglonDebe, 
			conCuentasDebe.Cuenta_Id as CuentaDebe, conCuentasDebe.Descripcion as DescripcionCuentaDebe,
			conCentro1Debe.Centro1_id as Centro1Debe, conCentro1Debe.Descripcion as DescripcionCentro1Debe,
			conCentro2Debe.Centro2_id as Centro2Debe, conCentro2Debe.Descripcion as DescripcionCentro2Debe,
			conMovContDebe.Clase as ClaseDebe, 
			IsNull(venPediRemitidos.Precio, conMovContDebe.Importe) as ImporteContableDebe, 
			stkMoviCuerpo.conRenglonHaber, 
			conCuentasHaber.Cuenta_id as CuentaHaber, conCuentasHaber.Descripcion as DescripcionCuentaHaber,
			conCentro1Haber.Centro1_id as Centro1Haber, conCentro1Haber.Descripcion as DescripcionCentro1Haber,
			conCentro2Haber.Centro2_id as Centro2Haber, conCentro2Haber.Descripcion as DescripcionCentro2Haber,
			conMovContHaber.Clase as ClaseHaber, conMovContDebe.Importe as ImporteContableHaber, '' Despacho_Id, --comDespachos.Despacho_Id,
				stuff((
			SELECT ''+ A FROM (SELECT DISTINCT ';'+ltrim(rtrim(COMDESPACHOS.Despacho_id))+'/'+ltrim(rtrim(COMDESPACHOS.Origen)) + convert(char(10),comDespachos.Fecha,103) a FROM COMDESPACHOS 
			INNER JOIN STKMOVIDESPA ON COMDESPACHOS.COMDESPACHOS = STKMOVIDESPA.DESPACHO_ID 
			WHERE STKMOVIDESPA.STKMOVICABE = @pstkMoviCabe) B 
			FOR XML PATH ('')),1,1,'') DESPACHOS,
			--comDespachos.Fecha Fechadespacho,comDespachos.Aduana, comDespachos.Origen
			GETDATE() Fechadespacho, '' Aduana, '' Origen, 
				stkProductos.MaterialPeligroso, stkProductos.CveMaterialPeligroso, 
					stkProductos.Embalaje
		FROM stkMoviCuerpo 
		Inner Join conAsientos On conAsientos.conAsientos = stkMoviCuerpo.stkMoviCabe
		INNER JOIN stkMoviCabe  ON (stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe)
		LEFT JOIN stkDepositos  ON (stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id)
		LEFT JOIN stkProductos  ON (stkProductos.stkProductos = stkMoviCuerpo.Producto_Id)
		LEFT JOIN stkUniMed  ON (stkUniMed.stkUniMed = stkMoviCuerpo.Medida_Id)
		INNER JOIN conMovCont  ON (conMovCont.conAsientos = stkMoviCuerpo.stkMoviCabe) AND (conMovCont.Renglon = stkMoviCuerpo.conRenglonDebe)
		INNER JOIN conMovCont conMovCont2 ON (conMovCont2.conAsientos = stkMoviCuerpo.stkMoviCabe) AND (conMovCont2.Renglon = stkMoviCuerpo.conRenglonHaber)
		INNER JOIN conMovCont as conMovContDebe ON conMovContDebe.conAsientos = stkMoviCuerpo.stkMoviCabe And
			conMovContDebe.Renglon = stkMoviCuerpo.conRenglonDebe
		INNER JOIN conCuentas as conCuentasDebe ON conCuentasDebe.conCuentas = conMovContDebe.cuenta_id 
		LEFT JOIN conCentro1 as conCentro1Debe ON conCentro1Debe.conCentro1 = conMovContDebe.Centro1_id
		LEFT  JOIN conCentro2  as conCentro2Debe ON conCentro2Debe.conCentro2 = conMovContDebe.Centro2_id
		INNER JOIN conMovCont as conMovContHaber ON conMovContHaber.conAsientos = stkMoviCuerpo.stkMoviCabe And
			conMovContHaber.Renglon = stkMoviCuerpo.conRenglonHaber
		INNER JOIN conCuentas as conCuentasHaber ON conCuentasHaber.conCuentas = conMovContHaber.cuenta_id 
		LEFT JOIN conCentro1 as conCentro1Haber ON conCentro1Haber.conCentro1 = conMovContHaber.Centro1_id
		LEFT JOIN conCentro2  as conCentro2Haber ON conCentro2Haber.conCentro2 = conMovContHaber.Centro2_id
		LEFT JOIN stkUniMed stkMedidaAlterna ON stkMedidaAlterna.stkUniMed = stkMoviCuerpo.MedidaAlterna
		Left Join (Select stkMoviCabe, Renglon, venPediCuerpo.venPedidos, venPediCuerpo.Renglon_Pe, PrecioForm * venPediCuerpo.CantidadOriginal Precio
			From venPediCuerpo 
			Inner Join venPediRemitidos On venPediCuerpo.venPedidos = venPediRemitidos.venPedidos And venPediCuerpo.Renglon_Pe = venPediRemitidos.Renglon_Pe) venPediRemitidos
			On venPediRemitidos.stkMoviCabe = stkMoviCuerpo.stkMoviCabe And venPediRemitidos.Renglon = stkMoviCuerpo.Renglon

		--Left Join stkMoviDespa On stkMoviDespa.stkMoviCabe = stkMoviCuerpo.stkMoviCabe And stkMoviDespa.Renglon = stkMoviCuerpo.Renglon
		--Left Join comDespachos On comDespachos.comDespachos = stkMoviDespa.Despacho_Id
		/** Se puso fuera de este query interno. Se hacen los joins despues de haber renumerado los renglones
		left outer join stkMoviSerie on stkMoviCuerpo.stkMoviCabe = stkMoviSerie.stkMoviCabe and stkMoviCuerpo.Renglon = stkMoviSerie.Renglon
		left join stkSerieVencimiento on stkSerieVencimiento.Serie = stkmoviserie.Serie and stkSerieVencimiento.Producto_Id = stkmovicuerpo.Producto_Id
		**/
		WHERE (stkMoviCuerpo.stkMoviCabe = @pstkMoviCabe)
		AND (stkMoviCuerpo.Renglon = ISNULL(@pRenglon, stkMoviCuerpo.Renglon))
		) subqryinterno
  ) qryinterno
  left outer join stkMoviSerie on qryinterno.stkMoviCabe = stkMoviSerie.stkMoviCabe and qryinterno.Renglon_Orig = stkMoviSerie.Renglon
left join stkSerieVencimiento on stkSerieVencimiento.Serie = stkmoviserie.Serie and stkSerieVencimiento.Producto_Id = qryinterno.stkProductos And
	stkSerieVencimiento.Empresa_Id = qryinterno.Empresa_Id
ORDER BY 2 
RETURN @@Error 

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_StkMoviEmple.sql*/
DROP PROCEDURE inf_stkMoviEmple
GO
CREATE PROCEDURE inf_stkMoviEmple
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

select suePersonal.Legajo,
suePersonal.Nombres +', '+suePersonal.ApellidoPaterno +
	CASE WHEN suePersonal.ApellidoPaterno = ' ' THEN '' ELSE ', ' end +suePersonal.ApellidoMaterno as Nombre
FROM stkMoviLega
	INNER JOIN suePersonal ON stkMoviLega.Legajo = suePersonal.genEntidades
WHERE (stkMoviLega.stkMoviCabe = @pstkMoviCabe)
 
RETURN @@Error 

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkMoviOC.sql*/
DROP PROCEDURE inf_stkMoviOC
GO
CREATE PROCEDURE inf_stkMoviOC
(
@Empresa_Id int, 
@Segmento_Id VarChar(10), 
@Segmento1N int,
@Segmento2N int,
@Segmento3N int,
@Segmento4N int,
@Segmento1C VarChar(20),
@Segmento2C VarChar(20),
@Segmento3C VarChar(20),
@Segmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (select Asiento_id
 from genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_id = @Empresa_id and 
	genAsiSegmentos.Segmento_id = dbo.FuncFKgenSegmentos(@Segmento_id) and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

SELECT dbo.Segmento(comOCSegmentos.Segmento_Id, comOCSegmentos.Segmento1C, 
	comOCSegmentos.Segmento2C, comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C,
	comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N, 
	comOCSegmentos.Segmento4N) AS SegmentoOC, 
	comProveedores.Proveed_Id, comProveedores.RazonSocial
FROM stkMoviOC inner join comOrdenComp on
stkMoviOC.comOrdenComp =  comOrdenComp.comOrdenComp
INNER JOIN comOCSegmentos ON
comOCSegmentos.comOrdenComp = comOrdenComp.comOrdenComp
inner join comProveedores on
comProveedores.genEntidades = comOrdenComp.Proveed_Id
WHERE (stkMoviOC.stkMoviCabe = @pstkMoviCabe)
 
 RETURN @@Error 

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkOrdenComp.sql*/
drop procedure inf_stkOrdenComp
go
create procedure inf_stkOrdenComp
(
@pEmpresa_Id int, 
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

DECLARE @pstkMoviCabe bigint

SET @pstkMoviCabe = (
SELECT Asiento_id from genAsiSegmentos where
	Empresa_Id = @pEmpresa_id and 
	Segmento_Id = dbo.FuncFKgenSegmentos(@pSegmento_id) and
	Segmento1N =@pSegmento1N and
	Segmento2N = @pSegmento2N and
	Segmento3N = @pSegmento3N and
	Segmento4N = @pSegmento4N and
	Segmento1C = @pSegmento1C and
	Segmento2C = @pSegmento2C and 
	Segmento3C = @pSegmento3C and 
	Segmento4C = @pSegmento4C )
SELECT  comOCSegmentos.Empresa_Id, dbo.Segmento(genSegmentos.genSegmentos, 
	comOCSegmentos.Segmento1N, comOCSegmentos.Segmento2N,
	comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N,
	comOCSegmentos.Segmento1C, comOCSegmentos.Segmento2C,
	comOCSegmentos.Segmento3C, comOCSegmentos.Segmento4C) as SegmentoSTROC,
	comOrdenComp.Fecha, comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	genMonedas.Moneda_Id

From comOCSegmentos 
INNER JOIN comOrdenComp on comOCSegmentos.comOrdenComp = comOrdenComp.comOrdenComp
INNER JOIN comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_id
INNER JOIN genMonedas ON genMonedas.genMonedas = comOrdenComp.Moneda_Id
INNER JOIN genSegmentos	ON genSegmentos.genSegmentos = comOCSegmentos.Segmento_Id


WHERE 
	Exists(select 1 from stkmovioc where
		stkmovioc.stkMoviCabe = @pstkMoviCabe and 
		stkmovioc.comOrdenComp =	comOrdenComp.comOrdenComp)
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkOtrosMovimientos.sql*/
-- INF_stkOtrosMovimientos '20180101','20181231', ' ','ZZZZZ',1
DROP PROCEDURE INF_stkOtrosMovimientos
GO
CREATE PROCEDURE INF_stkOtrosMovimientos
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@CausaDesde VarChar(5),
	@CausaHasta VarChar(5),
	@Empresa Int

)
AS

SELECT stkCausasMovi.Causa_Id, stkCausasMovi.Descripcion as DescripcionCausa, 
	conAsientos.Fecha,  stkMoviCabe.stkMoviCabe, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, 
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Comprobante, 
	conAsientos.Observaciones, 
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, 
	stkUniMed.Medida_Id, stkMoviCuerpo.Cantidad * stkMoviCabe.Signo as Cantidad, 
	stkMoviCuerpo.CostoUnitario, 
	Convert(numeric(18,2), stkMoviCuerpo.Cantidad * stkMoviCuerpo.CostoUnitario * stkMoviCabe.Signo) as Monto 
	FROM stkMoviCabe INNER JOIN conAsientos ON
	stkMoviCabe.stkMoviCabe = conAsientos.conAsientos 
	INNER JOIn genAsiSegmentos ON 
	conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN stkMoviCausa ON
	stkMoviCausa.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkCausasMovi ON 
	stkCausasMovi.stkCausasMovi = stkMoviCausa.Causa_Id
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id 
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
Where
	conAsientos.Anulado = 0 and 
	genAsiSegmentos.Empresa_Id = @Empresa and 
	stkCausasMovi.Causa_Id BETWEEN @CausaDesde And @CausaHasta AND 
	conAsientos.Fecha between @FechaDesde and @FechaHasta
ORDER BY 1, 3
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_StkProdSinMovimientos.sql*/
-- INF_StkProdSinMovimientos  '20170701','20170822', ' ','ZZZ', 1
DROP PROCEDURE INF_StkProdSinMovimientos 
GO
CREATE PROCEDURE INF_StkProdSinMovimientos (
@FechaDesde DateTime,
@FechaHasta DateTime,
@ProductoDesde VarChar(25),
@ProductoHasta VarChar(25),
@Empresa Int,
@FamiliaDesde varchar(15),
@FamiliaHasta varchar(15),
@GrupoDesde varchar(15),
@GrupoHasta varchar(15)
)

AS

SELECT DISTINCT stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto
	from stkProductos inner join stkExistencia ON
	stkExistencia.Producto_Id = stkProductos.stkProductos AND
	stkExistencia.Empresa_Id = @Empresa
	left join stkFamilias on stkProductos.Familia_Id= stkFamilias.stkFamilias
	left join stkGrupos on stkProductos.Grupo_Id=stkGrupos.stkGrupos
WHERE
stkProductos.Producto_Id between @ProductoDesde AND @ProductoHasta AND 
ISNULL(stkProductos.Empresa_id,@Empresa) = @Empresa and
isnull(stkFamilias.Familia_Id,'') between @FamiliaDesde and @FamiliaHasta and
isnull(stkGrupos.Grupo_Id,'') between @GrupoDesde and @GrupoHasta and

stkProductos.Clase IN ('E','-') AND
Not Exists(SELECT 1 FROM stkMoviCabe INNER JOIN stkMoviCuerpo ON 
	stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe And
	stkMoviCuerpo.Producto_id = stkProductos.stkProductos
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = stkMoviCabe.stkMoviCabe 
	Where
		conAsientos.Anulado = 0 and 
		conAsientos.Fecha between @FechaDesde and @FechaHasta and 
		conAsientos.Empresa_Id = @Empresa)
ORDER BY 1
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkProductos.sql*/
-- inf_stkProductos ' ','zzz',1
DROP PROCEDURE inf_stkProductos
GO

CREATE PROCEDURE inf_stkProductos

(
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15),
	@Empresa_Id Int
)

as
select stkProductos,Producto_Id,Empresa_Id,Descripcion,DescripcionDetallada,Description,Medida_Id,MedidaAlterna,FactorAlterna,Clase,ClaseAlterna,
CodigoBarra,Tipo_Id,Familia_Id,Grupo_Id,
TrabajaPorLotes,conVencimiento,Serializable,UsaDespachoImportacion,UmVenta,CostoPromPond,CostoUltCompra,CostoStandard,CostoReposicion,CostoUltimoCierre,
MonedaUltCompra,PrecioUltCompra,UMCompra,CtaCompra,CtaAjuInventario,CtaVenta,CtaCredito,CtaDescuento,CtaCosto,CtaVentaExt,CtaCreditoExt,CtaDescuentoExt,
CtaCostoExt,Fcha_Ult_Compra,MargenExceso,TiempoEntrega,Acepta_Ventas,CFVenta_Id,Acepta_Compras,CFComp_Id,Acepta_Comis_Vta,
DiasGarantia,FechaUltModif,Inactivo,Posteado,CtaConsumo ,Usuario_Id,CodigoFiscal,FraccionArancelaria
from vstkProductos
where Producto_Id between @ProductoDesde and @ProductoHasta and
	isnull(Empresa_Id,@Empresa_Id) = @Empresa_Id and 
	isnull(Familia_Id,'') Between @FamiliaDesde and @FamiliaHasta and 
	isnull(Grupo_Id,'') Between @GrupoDesde and @GrupoHasta
GO






Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_StkRankConsumo.sql*/
-- INF_StkRankConsumo '20170601','20170831', ' ','ZZZ', ' ','ZZZ', 1
DROP PROCEDURE INF_StkRankConsumo
GO
CREATE PROCEDURE INF_StkRankConsumo (
@FechaDesde DateTime,
@FechaHasta DateTime,
@ProductoDesde VarChar(25),
@ProductoHasta VarChar(25),
@DepositoDesde VarChar(5),
@DepositoHasta VarChar(5),
@Empresa Int)

AS
	SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
			stkProductos.Medida_id,
			SUM(stkMoviCuerpo.Cantidad) as Cantidad,
			ISNULL(UniAlt.Medida_id,'') MedidaAlt,
			SUM(ISNULL(stkMoviCuerpo.CantidadAlternaForm,0)) as CantidadAlt
			FROM stkMoviCabe INNER JOIN stkMoviCuerpo ON 
			stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe 
			INNER JOIN conAsientos ON
			conAsientos.conAsientos = stkMoviCabe.stkMoviCabe 
			INNER JOIN stkDepositos ON
			stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
			INNER JOIN stkSubTipoMov ON
			stkSubTipoMov.SubTipomov_id = stkMoviCabe.SubTipoMov_id
			INNER JOIN stkProductos ON
			stkProductos.stkProductos = stkMoviCuerpo.Producto_id
			INNER JOIN stkUniMed ON
			stkUniMed.stkUniMed = stkProductos.Medida_id
			LEFT JOIN stkUniMed UniAlt ON
			UniAlt.stkUniMed = stkProductos.MedidaAlterna
			WHERE
			conAsientos.Anulado = 0 and 
			stkSubTipoMov.Consumo = 1 and
			stkMoviCabe.Signo = -1 and 
			stkProductos.Producto_Id between @ProductoDesde and  @ProductoHasta and 
			conAsientos.Fecha between @FechaDesde And @FechaHasta and 
			conAsientos.Empresa_Id = @Empresa and 
			stkDepositos.Deposito_Id BETWEEN @DepositoDesde and @DepositoHasta
			GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, 
			stkProductos.Medida_id, UniAlt.Medida_id
			ORDER BY 3 Desc
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkRemiClie.sql*/
DROP PROCEDURE inf_stkRemiClie
go
CREATE PROCEDURE inf_stkRemiClie
(
@pEmpresa_Id int,
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (Select Asiento_id
 From genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_Id = @pEmpresa_Id and 
	genAsiSegmentos.Segmento_Id = dbo.FuncFKgenSegmentos(@pSegmento_Id) and 
	genAsiSegmentos.Segmento1N = @pSegmento1N and 
	genAsiSegmentos.Segmento2N = @pSegmento2N and 
	genAsiSegmentos.Segmento3N = @pSegmento3N and 
	genAsiSegmentos.Segmento4N = @pSegmento4N and 
	genAsiSegmentos.Segmento1C = @pSegmento1C and 
	genAsiSegmentos.Segmento2C = @pSegmento2C and 
	genAsiSegmentos.Segmento3C = @pSegmento3C and 
	genAsiSegmentos.Segmento4C = @pSegmento4C )
SELECT stkRemitos.stkMoviCabe, venClientes.Cliente_Id, stkRemitos.Sucursal, 
venClientes.RazonSocial, venClieHabitual.Direccion1_Entr,venClieHabitual.Direccion2_Entr, 
PaisClie.Descripcion as PaisClie,ProvClie.Descripcion as ProvClie, genEntidades.Cuit,
venClieHabitual.Localidad_Entr,venClieHabitual.NroExterior_Entr,venClieHabitual.NroInterior_Entr,
venClieHabitual.CodPostal_Entr, venClieHabitual.Telefonos, IsNull(gensegmentos.Segmento_Id, '') Segmento_Id,
venListasPrecios.ListaPrecio_Id, venListasPrecios.Descripcion DescripcionListasPrecios,
genMonedas.Moneda_Id, genMonedas.Descripcion DescripcionMoneda, stkRemitos.HojaRuta_Id,
dbo.Segmento(stkHojaSegmentos.Segmento_Id, stkHojaSegmentos.Segmento1C, stkHojaSegmentos.Segmento2C,
stkHojaSegmentos.Segmento3C, stkHojaSegmentos.Segmento4C, stkHojaSegmentos.Segmento1N, stkHojaSegmentos.Segmento2N, 
stkHojaSegmentos.Segmento3N, stkHojaSegmentos.Segmento4N) HojaRuta, venCondfiscal.Descripcion Condfiscal, 
isnull(stkpedidos.Sucursal_pe,'') Sucursal_pe, isnull(stkpedidos.numero_pe,'') Numero_pe, 
ISNULL(stkPedidos.Transportista,' ') Transportista, ISNULL(stkPedidos.DireccionTrans,'') DireccionTrans
FROM stkRemitos
INNER JOIN venClieHabitual On stkRemitos.Cliente_Id = venClieHabitual.genEntidades And
	stkRemitos.Sucursal = venClieHabitual.Sucursal
INNER JOIN venClientes On venClientes.genEntidades = stkRemitos.Cliente_Id
INNER JOIN genSegmentos On stkRemitos.Segmento_Id = genSegmentos.genSegmentos
LEFT JOIN venListasPrecios On venListasPrecios.venListasPrecios = stkRemitos.ListaPrecio_Id
LEFT JOIN genMonedas On genMonedas.genMonedas = venListasPrecios.Moneda_Id
LEFT JOIN stkHojaSegmentos On stkHojaSegmentos.stkHojaDeRuta = stkRemitos.HojaRuta_Id
INNER JOIN genPaises PaisClie on PaisClie.genPaises=venClieHabitual.Pais_Id_Entr
INNER JOIN genProvincias ProvClie on ProvClie.genProvincias=venClieHabitual.Provincia_Id_Entr
INNER JOIN genEntidades on venClieHabitual.genEntidades=genEntidades.genEntidades
INNER JOIN venCondfiscal on 
venCondfiscal.venCondfiscal = venClientes.CondFisc_Id 
LEFT JOIN (SELECT venPediSegmentos.Empresa_id,segmento1c Sucursal_pe,segmento1n Numero_pe, 
stkmovicabe Movicabe, count(*) total, venFormaEntrega.RazonSocial Transportista, 
venFormaEntrega.Direccion DireccionTrans
FROM venPediRemitidos
INNER JOIN venPediSegmentos ON venPediRemitidos.venpedidos = venPediSegmentos.venPedidos
INNER JOIN venPedidos ON venPediSegmentos.venPedidos = venPedidos.venPedidos
INNER JOIN venFormaEntrega ON venPedidos.FormaEntrega_Id = venFormaEntrega.venFormaEntrega
WHERE venPediSegmentos.Empresa_Id = @pEmpresa_Id
GROUP BY venPediSegmentos.Empresa_id, segmento1c,segmento1n, stkmovicabe, 
venFormaEntrega.RazonSocial, venFormaEntrega.Direccion) AS  stkPedidos ON
stkpedidos.MoviCabe = stkremitos.stkmovicabe
WHERE (stkmovicabe = @pstkMoviCabe)
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkRemiPendFact.sql*/
-- INF_stkRemiPendFact '20180731', 1
DROP PROCEDURE INF_stkRemiPendFact
GO
CREATE PROCEDURE INF_stkRemiPendFact
(
	@FechaHasta DateTime, 
	@Empresa_Id Int
)
AS

SELECT  genAsiSegmentos.Asiento_Id, conAsientos.Fecha, stkMoviCuerpo.Renglon, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) as Comprobante, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkMoviCuerpo.Cantidad,
	stkRemiPendFact.CantidadPendiente -
	ISNULL((select  Cantidad FROM venMovStkHist, conAsientos as Factura	
		WHERE
			venMovStkHist.stkMoviCabe = stkRemiPendFact.stkMoviCabe and 
			venMovStkHist.Renglon =stkRemiPendFact.Renglon and 
			Factura.conAsientos = venMovStkHist.venMovimientos AND 
			Factura.Anulado = 0 AND 
			Factura.Fecha > @FechaHasta),0) as CantidadPendiente,
	
	stkMoviCuerpo.CostoUnitario, 
	Convert(numeric(18,2), 	(stkRemiPendFact.CantidadPendiente -
		ISNULL((select Cantidad FROM venMovStkHist, conAsientos as Factura	
		WHERE
			venMovStkHist.stkMoviCabe = stkRemiPendFact.stkMoviCabe and 
			venMovStkHist.Renglon =stkRemiPendFact.Renglon and 
			Factura.conAsientos = venMovStkHist.venMovimientos AND 
			Factura.Anulado = 0 AND 
			Factura.Fecha > @FechaHasta),0))  *stkMoviCuerpo.CostoUnitario) AS Total
	FROM genAsiSegmentos 
	inner join conAsientos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN stkRemitos ON stkRemitos.stkMoviCabe = conAsientos.conAsientos
	INNER JOIN stkMoviCuerpo ON stkMoviCuerpo.stkMoviCabe = stkRemitos.stkMoviCabe 
	INNER JOIN stkRemiPendFact ON stkRemiPendFact.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
		stkRemiPendFact.Renglon =stkMoviCuerpo.Renglon
	INNER JOIN stkProductos ON stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN venClientes ON venClientes.genEntidades = stkRemitos.Cliente_Id
	INNER JOIN genSucursalesEmpr ON 
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	where
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa_Id AND 
		conAsientos.Fecha <= @FechaHasta AND 
		stkRemiPendFact.CantidadPendiente -
		ISNULL((select  Cantidad FROM venMovStkHist, conAsientos as Factura	
		WHERE
			venMovStkHist.stkMoviCabe = stkRemiPendFact.stkMoviCabe and 
			venMovStkHist.Renglon =stkRemiPendFact.Renglon and 
			Factura.conAsientos = venMovStkHist.venMovimientos AND 
			Factura.Anulado = 0 AND 
			Factura.Fecha > @FechaHasta),0) > 0
		
order by 2,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkRemiProv.sql*/
DROP procedure inf_stkRemitos
GO
create procedure inf_stkRemitos
(
@pEmpresa_Id int,
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS
Declare @pstkMoviCabe bigint = (Select Asiento_id
 From genAsiSegmentos
 Where
	genAsiSegmentos.Empresa_Id = @pEmpresa_Id and 
	genAsiSegmentos.Segmento_Id = dbo.FuncFKgenSegmentos(@pSegmento_Id) and 
	genAsiSegmentos.Segmento1N = @pSegmento1N and 
	genAsiSegmentos.Segmento2N = @pSegmento2N and 
	genAsiSegmentos.Segmento3N = @pSegmento3N and 
	genAsiSegmentos.Segmento4N = @pSegmento4N and 
	genAsiSegmentos.Segmento1C = @pSegmento1C and 
	genAsiSegmentos.Segmento2C = @pSegmento2C and 
	genAsiSegmentos.Segmento3C = @pSegmento3C and 
	genAsiSegmentos.Segmento4C = @pSegmento4C )
SELECT stkMoviProv.stkMoviCabe, comProveedores.Proveed_Id, 
	comProveedores.RazonSocial as DescripcionProveedores,
	stkMoviProv.RemitoProv, stkMoviProv.FechaRemito
FROM stkMoviProv 
INNER JOIN stkMoviCabe  ON (stkMoviCabe.stkMoviCabe = stkMoviProv.stkMoviCabe)
INNER JOIN comProveedores  ON (comProveedores.genEntidades = stkMoviProv.Proveed_Id)
WHERE (stkMoviProv.stkMoviCabe = @pstkMoviCabe)
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkReposicion.sql*/
-- INF_stkReposicion ' ','ZZZ',' ','ZZZZ', 1, '', 'zzzz', '', 'zzzzz'
DROP PROCEDURE INF_stkReposicion
GO
CREATE PROCEDURE INF_stkReposicion
(
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa Int,
	@GrupoDesde varchar(15),
	@GrupoHasta varchar(15),
	@FamiliaDesde varchar(15),
	@FamiliaHasta varchar(15)
)
AS

SELECT stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDepo, 
	stkProductos.Producto_Id, stkProductos.Descripcion AS DescripcionProducto, 
	ISNULL(stkExistencia.Cantidad,0) as Stock, stkMaxMin.Minimo, 
	stkMaxMin.Minimo - ISNULL(stkExistencia.Cantidad,0) as Faltante, IsNull(stkGrupos.Grupo_Id, '') Grupo_Id, 
	IsNull(stkGrupos.Descripcion, '') as DescripcionGrupo, IsNull(stkFamilias.Familia_Id, '') Familia_Id,
	IsNull(stkFamilias.Descripcion, '') as DescripcionFamilia
FROM stkProductos inner join stkMaxMin ON
stkProductos.stkProductos = stkMaxMin.Producto_Id and 
stkMaxMin.Empresa_Id = @Empresa
inner join stkDepositos ON
stkDepositos.stkDepositos = stkMaxMin.Deposito_Id
left join stkExistencia ON
stkExistencia.Producto_Id = stkProductos.stkProductos and
stkExistencia.Deposito_Id = stkDepositos.stkDepositos and 
stkExistencia.Empresa_Id = @Empresa
left join stkGrupos on stkGrupos.stkGrupos=stkProductos.Grupo_Id
left join stkFamilias on stkFamilias.stkFamilias=stkProductos.Familia_Id
WHERE
	ISNULL(stkProductos.Empresa_Id , @Empresa) = @Empresa and
	stkProductos.Producto_Id between @ProductoDesde And @ProductoHasta AND
	stkDepositos.Deposito_Id between @DepositoDesde And @DepositoHasta and 
	stkProductos.Inactivo = 0 and 
	stkProductos.Posteado = 1 AND 
	stkDepositos.Inactivo = 0 and 
	stkDepositos.Posteado = 1 and 
	stkMaxMin.Minimo > ISNULL(stkExistencia.Cantidad,0) and
	IsNull(stkGrupos.Grupo_Id, '') between @GrupoDesde and @GrupoHasta AND
	IsNull(stkFamilias.Familia_Id, '') between @FamiliaDesde and @FamiliaHasta

ORDER BY 1, 3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_StkRotacion.sql*/
-- INF_StkRotacion '20170701','20170831', ' ','ZZZ', ' ','ZZZ', 1,' ','ZZZ',' ','ZZZ',1

DROP PROCEDURE INF_StkRotacion 
GO
CREATE PROCEDURE INF_StkRotacion (
@FechaDesde DateTime,
@FechaHasta DateTime,
@ProductoDesde VarChar(25),
@ProductoHasta VarChar(25),
@DepositoDesde VarChar(5),
@DepositoHasta VarChar(5),
@Empresa Int,
@FamiliaDesde varchar(15),
@FamiliaHasta varchar(15),
@GrupoDesde varchar(15),
@GrupoHasta varchar(15),
@SoloEnExistencia bit
)

AS

CREATE TABLE #Rotacion (
	Producto_Id VarChar(25), 
	Descripcion VarChar(80),
	Rotacion Numeric(18,4),
	Periodos Int, 
	SumaExistencias Numeric(18,4),
	Salidas Numeric(18,4),
	Primary Key(Producto_Id))

DECLARE @Producto_Id VarChar(25)
DECLARE @Descripcion VarChar(80)
DECLARE @stkProductos Int	
DECLARE @Fecha DateTime
DECLARE @Periodos int
DECLARE @ExistenciaFinal NUMERIC(18,4)
DECLARE @Salidas NUMERIC(18,4)



	DECLARE curProductos CURSOR  FOR Select stkProductos.Producto_id, stkProductos.Descripcion , stkProductos
		from stkProductos
		left join stkFamilias on stkProductos.Familia_Id= stkFamilias.stkFamilias
		left join stkGrupos on stkProductos.Grupo_Id=stkGrupos.stkGrupos
	--	left join Existencia on stkProductos.stkProductos=Existencia.Producto_Id 
	Where 

	stkProductos.Producto_id between @ProductoDesde and @ProductoHasta AND 
	isnull(stkFamilias.Familia_Id,'') between @FamiliaDesde and @FamiliaHasta and
	isnull(stkGrupos.Grupo_Id,'') between @GrupoDesde and @GrupoHasta and
	ISNULL(stkProductos.Empresa_Id,@Empresa) = @Empresa and 
	--( @SoloEnExistencia =0 or Exists(select 1 from stkExistencia where	
	--	stkExistencia.Producto_Id = stkProductos.stkProductos and 
	--	stkExistencia.Cantidad > 0)) 
	--	and
	Clase IN ('E','-')


OPEN curProductos

FETCH NEXT FROM curProductos INTO @Producto_id, @Descripcion, @stkProductos;  

WHILE @@FETCH_STATUS=0
BEGIN
	SET @Fecha= @FechaDesde
	SET @Periodos = 0
	
	SET @ExistenciaFinal=0
	WHILE @Fecha <= @FechaHasta
	BEGIN

		SET @Periodos = @Periodos +1
		set @ExistenciaFinal = @ExistenciaFinal+ ISNULL((
			SELECT SUM(stkMoviCuerpo.Cantidad*stkMoviCabe.Signo) as Cantidad
			FROM stkMoviCabe INNER JOIN stkMoviCuerpo ON 
			stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe 
			INNER JOIN conAsientos ON
			conAsientos.conAsientos = stkMoviCabe.stkMoviCabe 
			INNER JOIN stkDepositos ON
			stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
			WHERE
			conAsientos.Anulado = 0 and 
			stkMoviCuerpo.Producto_Id = @stkProductos and 
			conAsientos.Fecha <= @Fecha and 
			conAsientos.Empresa_Id = @Empresa and 
			stkDepositos.Deposito_Id BETWEEN @DepositoDesde and @DepositoHasta),0)

			SET @Fecha = DATEADD(month,1,@Fecha)
       END

	    
		set @Salidas = ISNULL((
			SELECT SUM(stkMoviCuerpo.Cantidad) as Cantidad
			FROM stkMoviCabe INNER JOIN stkMoviCuerpo ON 
			stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe 
			INNER JOIN conAsientos ON
			conAsientos.conAsientos = stkMoviCabe.stkMoviCabe 
			INNER JOIN stkDepositos ON
			stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
			INNER JOIN stkSubTipoMov ON
			stkSubTipoMov.SubTipomov_id = stkMoviCabe.SubTipoMov_id
			WHERE
			conAsientos.Anulado = 0 and 
			stkSubTipoMov.Consumo = 1 and
			stkMoviCabe.Signo = -1 and 
			stkMoviCuerpo.Producto_Id = @stkProductos and 
			conAsientos.Fecha <= @Fecha and 
			conAsientos.Empresa_Id = @Empresa and 
			stkDepositos.Deposito_Id BETWEEN @DepositoDesde and @DepositoHasta),0)


		INSERT INTO #Rotacion (Producto_Id,Descripcion, Rotacion, Periodos,SumaExistencias , Salidas) 
			Values(@Producto_id,  @Descripcion, case when @ExistenciaFinal=0 then 0 else
				@Salidas / (@ExistenciaFinal/@Periodos) end , @Periodos, @ExistenciaFinal, @Salidas)

		FETCH NEXT FROM curProductos INTO @Producto_id, @Descripcion, @stkProductos;  

END

close curProductos
deallocate curProductos

SELECT * FROM #Rotacion where (@SoloEnExistencia =0 or SumaExistencias!=0) ORDER BY Producto_Id 
DROP TABLE #Rotacion

GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkSeguimientoDespa.sql*/
-- INF_stkSeguimientoDespa ' ' ,'ZZZZ', '20180101','20181231',1
DROP PROCEDURE INF_stkSeguimientoDespa
GO
CREATE PROCEDURE INF_stkSeguimientoDespa
(
	@DespachoDesde VarChar(20),
	@DespachoHasta VarChar(20),
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@Empresa Int

)
as
SELECT comDespachos.Despacho_Id, 	conAsientos.Fecha,
	comDespachos.Origen, comDespachos.Aduana, 
	comDespachos.Patente, comDespachos.Aduana_Id, comDespachos.Fecha as FechaDesp, 
	comDespachos.Cambio , genMonedas.Moneda_Id,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, 
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) AS SegmentoStr, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkMoviCuerpo.Cantidad* stkMoviCabe.Signo as Cantidad, 
	stkDepositos.Deposito_Id, stkMoviCuerpo.CostoUnitario, 
	Convert(nUMERIC(18,2),stkMoviCuerpo.CostoUnitario*stkMoviCuerpo.Cantidad* stkMoviCabe.Signo) as Total
	from comDespachos inner join genMonedas ON
	comDespachos.Moneda_Id = genMonedas.genMonedas
	inner join stkMoviDespa ON
	stkMoviDespa.Despacho_Id = comDespachos.comDespachos
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkMoviDespa.stkMoviCabe AND 
	stkMoviCuerpo.Renglon =stkMoviDespa.Renglon
	inner join stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN stkMoviCabe ON 
	stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe 
	inner join stkDepositos ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	inner join conAsientos ON
	conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	Where
		comDespachos.Despacho_Id between @DespachoDesde And @DespachoHasta and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		genAsiSegmentos.Empresa_Id = @Empresa
Order by 1,2
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkSeguimientoSerie.sql*/
-- INF_stkSeguimientoSerie ' ' ,'ZZZZ', '20180101','20191231',1
DROP PROCEDURE INF_stkSeguimientoSerie
GO
CREATE PROCEDURE INF_stkSeguimientoSerie
(
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@SerieDesde VarChar(20),
	@SerieHasta VarChar(20),
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@Empresa Int

)
as
SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
stkMoviSerie.Serie, stkFamilias.Familia_Id, stkFamilias.Descripcion as DescripcionFamilia, 
		stkGrupos.Grupo_Id, stkGrupos.Descripcion as DescripcionGrupo,
		ISNULL(CONVERT(Char(10),stkSerieVencimiento.Vencimiento,103),' ') as Vencimiento,
	conAsientos.Fecha, dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, 
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) AS SegmentoStr, 
	case when comOCSegmentos.Segmento_Id IS NOT NULL THEN
	dbo.Segmento(comOCSegmentos.Segmento_Id, comOCSegmentos.Segmento1C,comOCSegmentos.Segmento2C, 
	comOCSegmentos.Segmento3C,comOCSegmentos.Segmento4C, 	comOCSegmentos.Segmento1N,
	comOCSegmentos.Segmento2N, comOCSegmentos.Segmento3N, comOCSegmentos.Segmento4N
	) 
	When genAsiSegmentosV.Segmento_Id IS NOT NULL THEN
	dbo.Segmento(genAsiSegmentosV.Segmento_Id, genAsiSegmentosV.Segmento1C,genAsiSegmentosV.Segmento2C, 
	genAsiSegmentosV.Segmento3C,genAsiSegmentosV.Segmento4C, 	genAsiSegmentosV.Segmento1N,
	genAsiSegmentosV.Segmento2N, genAsiSegmentosV.Segmento3N, genAsiSegmentosV.Segmento4N) 
	ELSE
		dbo.Segmento(proOrdenSegmento.Segmento_Id, proOrdenSegmento.Segmento1C,proOrdenSegmento.Segmento2C, 
		proOrdenSegmento.Segmento3C,proOrdenSegmento.Segmento4C, 	proOrdenSegmento.Segmento1N,
		proOrdenSegmento.Segmento2N, proOrdenSegmento.Segmento3N, proOrdenSegmento.Segmento4N) 
	END
	 AS Segmento2,
	isnull(ISNULL(ISNULL(comProveedores.Proveed_id, venclientes.Cliente_id), stkCausasMovi.Causa_Id), ' ') as Entidad, 
	isnull(ISNULL(ISNULL(comProveedores.RazonSocial, venClientes.RazonSocial),  stkCausasMovi.Descripcion), ' ') as DescripcionEntidad,
	stkSubTipoMov.SubTipoMov_Id, stkSubTipoMov.Descripcion as DescripcionSTM,
	
	stkUniMed.Medida_Id, stkMoviSerie.Cantidad* stkMoviCabe.Signo as Cantidad, 
	stkDepositos.Deposito_Id, stkMoviCuerpo.CostoUnitario, 
	Convert(nUMERIC(18,2),stkMoviCuerpo.CostoUnitario*stkMoviSerie.Cantidad* stkMoviCabe.Signo) as Total
	from stkMoviSerie INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkMoviSerie.stkMoviCabe AND 
	stkMoviCuerpo.Renglon =stkMoviSerie.Renglon
	inner join stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN stkMoviCabe ON 
	stkMoviCabe.stkMoviCabe = stkMoviCuerpo.stkMoviCabe 
	inner join stkDepositos ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	inner join conAsientos ON
	conAsientos.conAsientos = stkMoviCabe.stkMoviCabe
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	LEFT JOIN stkSerieVencimiento ON 
	stkSerieVencimiento.Serie = stkMoviSerie.Serie and 
	stkSerieVencimiento.Empresa_Id = @Empresa and 
	stkSerieVencimiento.Producto_Id = stkProductos.stkProductos
	LEFT JOIN (stkMoviOC INNER JOIN comOrdenComp ON 
		stkMoviOC.comOrdenComp = comOrdenComp.comOrdenComp
		inner join comProveedores ON comProveedores.genEntidades = comOrdenComp.Proveed_Id
		INNER JOIN comOCSegmentos ON  comOCSegmentos.comOrdenComp = comOrdenComp.comOrdenComp	) ON 
		stkMoviOC.stkMoviCabe = stkMoviCuerpo.stkmovicabe and 
		stkMoviOC.Renglon = stkMoviCuerpo.Renglon
	LEFT JOIN (venMovStkHist INNER JOIN venMovimientos ON 
		venMovStkHist.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON 
			venClientes.genEntidades = venMovimientos.Cliente_Id
		INNER JOIN genAsiSegmentos genAsiSegmentosv ON 
		genAsiSegmentosv.Asiento_Id = venMovimientos.venMovimientos) ON
		venMovStkHist.stkMoviCabe = stkmovicuerpo.stkMoviCabe AND
		venMovStkHist.Renglon = stkmovicuerpo.Renglon
		INNER JOIN stkSubTipoMov ON 
		stkSubTipoMov.SubTipoMov_Id = stkMoviCabe.SubTipoMov_Id
	LEFT JOIN (stkMoviCausa INNER JOIN stkCausasMovi ON 
		stkMoviCausa.Causa_Id = stkCausasMovi.stkCausasMovi) ON 
		stkMoviCausa.stkMoviCabe = stkMoviCabe.stkMoviCabe
	LEFT JOIN (proOrdenStock inner join proMovCierreOrden on 
		proOrdenStock.proMovCierreOrden = proMovCierreOrden.proMovCierreOrden
		INNER JOIN 	proOrdenSegmento ON
		proMovCierreOrden.proOrden = proOrdenSegmento.proOrden	) ON
		proOrdenStock.stkMoviCabe = stkMoviCabe.stkMoviCabe
	LEFT JOIN stkFamilias ON  stkFamilias.stkFamilias = stkProductos.Familia_Id
	LEFT JOIN stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
	Where
		conAsientos.Anulado= 0 AND 
		conAsientos.Posteado = 1 AND 
		isnull(stkFamilias.Familia_Id,' ') Between @FamiliaDesde and @FamiliaHasta and 
		isnull(stkGrupos.Grupo_Id,' ') Between @GrupoDesde and @GrupoHasta and 
		stkProductos.Producto_Id Between @ProductoDesde AND @ProductoHasta AND 
		stkMoviSerie.Serie between @serieDesde And @serieHasta and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta AND 
		genAsiSegmentos.Empresa_Id = @Empresa
Order by 1,3
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_stkSolicitudCD.sql*/
drop procedure inf_stkSolicitudCDPrincipal
go
create procedure inf_stkSolicitudCDPrincipal
(
    @Empresa_Id int,
    @Segmento_Id varchar(25),
    @Segmento1N int,
    @Segmento2N int,
    @Segmento3N int,
    @Segmento4N int,
    @Segmento1C varchar(20),
    @Segmento2C varchar(20),
    @Segmento3C varchar(20),
    @Segmento4C varchar(20)
)
as
select dbo.Segmento(stkSolicitudCDSegmento.Segmento_Id, Segmento1C, Segmento2C, Segmento3C, Segmento4C, Segmento1N, Segmento2N, Segmento3N, Segmento4N) as SegmentoSTR, 
stkDepositos.Deposito_Id, stkDepositos.Descripcion as DescripcionDeposito, stkSolicitudCD.Fecha, genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres, Observaciones from stkSolicitudCD
inner join stkSolicitudCDSegmento on stkSolicitudCD.stkSolicitudCD=stkSolicitudCDSegmento.stkSolicitudCD
inner join stkDepositos on stkDepositos.stkDepositos=DepositoDestino
inner join genSegmentos on genSegmentos.genSegmentos=stkSolicitudCDSegmento.Segmento_Id
inner join genusuarios on genusuarios.genUsuarios=stkSolicitudCD.Usuario_Id
WHERE
genSegmentos.Segmento_Id=@Segmento_Id and Segmento1N=@Segmento1N and Segmento2N=@Segmento2N and Segmento3N = @Segmento3N and Segmento4N=@Segmento4N AND
Segmento1C=@Segmento1C and Segmento2C=@Segmento2C and Segmento3C=@Segmento3C and Segmento4C=@Segmento4C
GO

drop procedure inf_stkSolicitudCDCuerpo
go
create procedure inf_stkSolicitudCDCuerpo
(
    @Empresa_Id int,
    @Segmento_Id varchar(25),
    @Segmento1N int,
    @Segmento2N int,
    @Segmento3N int,
    @Segmento4N int,
    @Segmento1C varchar(20),
    @Segmento2C varchar(20),
    @Segmento3C varchar(20),
    @Segmento4C varchar(20)
)
as
select stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, stkSolicitudCDCuerpo.Observaciones, Cantidad, CantidadPendiente, 
stkUniMed.Medida_Id, stkUniMed.Descripcion as DescripcionMedida from stkSolicitudCDCuerpo
inner join stkProductos on stkProductos.stkProductos = stkSolicitudCDCuerpo.Producto_Id
inner join stkUniMed on stkUniMed.stkUniMed=stkSolicitudCDCuerpo.Medida_Id
inner join stkSolicitudCDSegmento on stkSolicitudCDSegmento.stkSolicitudCD=stkSolicitudCDCuerpo.stkSolicitudCD
inner join genSegmentos on genSegmentos.genSegmentos=stkSolicitudCDSegmento.Segmento_Id
WHERE
genSegmentos.Segmento_Id=@Segmento_Id and Segmento1N=@Segmento1N and Segmento2N=@Segmento2N and Segmento3N = @Segmento3N and Segmento4N=@Segmento4N AND
Segmento1C=@Segmento1C and Segmento2C=@Segmento2C and Segmento3C=@Segmento3C and Segmento4C=@Segmento4C
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_StkSubDiarior.sql*/
-- Inf_StkSubDiario '20170101','20170831',1
DROP PROCEDURE Inf_StkSubDiario
GO
CREATE PROCEDURE Inf_StkSubDiario @FechaDesde DateTime, @FechaHasta DateTime,
	@Empresa int
AS
SELECT conAsientos.Fecha,conAsientos.conAsientos, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	conMovCont.Renglon,  stkSubTipoMov.Descripcion, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm stkMoviCabe INNER JOIN conAsientos ON
stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN stkSubTipoMov ON
stkSubTipoMov.SubTipomov_id = stkMoviCabe.SubTipomov_id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  
ORDER BY 1,2,4
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_StkSubMayor.sql*/
-- Inf_StkSubMayor '20170101','20170831',' ','ZZZ',' ','ZZZ',' ','ZZZ',1
DROP PROCEDURE Inf_StkSubMayor
GO
CREATE PROCEDURE Inf_StkSubMayor @FechaDesde DateTime, @FechaHasta DateTime, 
	@CuentaDesde VarChar(25),@CuentaHasta VarChar(25),
	@Centro1Desde VarChar(8),@Centro1Hasta VarChar(8),
	@Centro2Desde VarChar(8),@Centro2Hasta VarChar(8),
	@Empresa int
AS
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	stkSubTipoMov.Descripcion, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm stkMoviCabe INNER JOIN conAsientos ON
stkMoviCabe.stkMoviCabe = conAsientos.conAsientos
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN stkSubTipoMov ON
stkSubTipoMov.SubTipomov_id = stkMoviCabe.SubTipomov_id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta 
ORDER BY 1,3,4,5
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_stkTraspasosPend.sql*/

--  INF_stkTraspasosPend 1
DROP PROCEDURE INF_stkTraspasosPend
GO
CREATE PROCEDURE INF_stkTraspasosPend
(
	@Empresa int
)

AS

SELECT conAsientos.Fecha,stkMoviCabe.stkMoviCabe, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, 
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N)  as Segmento, 
	stkDepositosD.Deposito_Id as DepositoDestino, stkDepositosD.Descripcion  as DescripcionDepoDestino,
	ISNULL(conAsientos.Observaciones,' ') AS Observaciones, 
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, 
	stkUniMed.Medida_Id, stkMoviCuerpo.Cantidad as Cantidad, 
	stkMoviCuerpo.CostoUnitario, 
	stkDepositos.Deposito_Id as Deposito, stkDepositos.Descripcion  as DescripcionDepo,
	Convert(numeric(18,2), stkMoviCuerpo.Cantidad * stkMoviCuerpo.CostoUnitario ) as Monto 
FROM stkEnTransito inner join stkMoviCabe ON
	stkEnTransito.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN conAsientos ON
	stkMoviCabe.stkMoviCabe = conAsientos.conAsientos 
	INNER JOIn genAsiSegmentos ON 
	conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkMoviCabe.stkMoviCabe
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id 
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	inner join stkDepositos  ON
	stkDepositos.stkDepositos = stkMoviCuerpo.Deposito_Id
	inner join stkDepositos  as stkDepositosD ON
	stkDepositosD.stkDepositos = stkEnTransito.Deposito_Id
	WHERE
	conAsientos.Anulado = 0 and 
	genAsiSegmentos.Empresa_Id = @Empresa and
	stkEnTransito.stkMoviCabeEntr IS NULL
ORDER BY 1, 3, 2

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_StockNegativo.sql*/
-- inf_Stocknegativo ' ','ZZZZZ', 1

DROP PROCEDURE INF_StockNegativo 
GO
CREATE PROCEDURE INF_StockNegativo (
@DepositoDesde VarChar(5),
@DepositoHasta VarChar(5),
@Empresa Int)

AS

SELECT stkDepositos.Deposito_id, stkDepositos.Descripcion as DescripcionDeposito,
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, 
	stkExistencia.Cantidad
from stkProductos INNER JOIN stkExistencia ON
stkProductos.stkProductos = stkExistencia.Producto_id
INNER JOIN stkDepositos ON
stkDepositos.stkDepositos = stkExistencia.Deposito_id
WHERE
stkDepositos.Deposito_Id between @DepositoDesde and @DepositoHasta and 
stkExistencia.Empresa_Id = @Empresa 
and stkExistencia.Cantidad < 0

ORDER BY 1,3

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_StockxAlmacen.sql*/
-- INF_StockxAlmacen ' ','zzz',1
Drop Procedure INF_StockxAlmacen
GO
CREATE Procedure INF_StockxAlmacen
(
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5), 
	@Empresa int
)

AS

SELECT stkProductos.Producto_id, stkProductos.Descripcion, 
	stkDepositos.Deposito_id, stkDepositos.Descripcion as DescripcionDeposito,
	SUM(stkExistencia.Cantidad) as Cantidad, stkUniMed.Medida_Id, ISNULL(stkUbiAlmacenDefecto.Ubicacion_Id,'') Ubicacion_Id
From stkProductos inner join stkExistencia ON
stkProductos.stkProductos = stkExistencia.Producto_Id
inner join stkDepositos ON
stkDepositos.stkDepositos = stkExistencia.Deposito_Id
inner join stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
LEFT JOIN stkUbiAlmacenDefecto on stkUbiAlmacenDefecto.Producto_Id = stkProductos.stkProductos AND 
			stkUbiAlmacenDefecto.Deposito_Id = stkDepositos.stkDepositos
WHERE
stkDepositos.Deposito_id between @DepositoDesde and @DepositoHasta AND 
stkExistencia.Cantidad <> 0 and 
stkExistencia.Empresa_id = @Empresa
GROUP BY stkProductos.Producto_id, stkProductos.Descripcion, 
stkDepositos.Deposito_id, stkDepositos.Descripcion , stkUbiAlmacenDefecto.Ubicacion_Id, 
stkUniMed.Medida_Id
ORDER BY 3,1

GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_StockxUbicacion.sql*/
-- INF_StockxUbicacion ' ','zzz',' ','zzz',1
Drop Procedure INF_StockxUbicacion
GO
CREATE Procedure INF_StockxUbicacion
(
	@DepositoDesde VarChar(5),
	@DepositoHasta VarChar(5),
    @UbicacionDesde VarChar(25),
	@UbicacionHasta VarChar(25), 
	@Empresa int
)

AS

SELECT stkProductos.Producto_id, stkProductos.Descripcion, 
	stkDepositos.Deposito_id, stkDepositos.Descripcion as DescripcionDeposito,
	SUM(stkExistencia.Cantidad) as Cantidad, stkUbicaciones.Ubicacion_Id
From stkProductos inner join stkExistencia ON
stkProductos.stkProductos = stkExistencia.Producto_Id
inner join stkDepositos ON
stkDepositos.stkDepositos = stkExistencia.Deposito_Id
inner join  stkExistenciaUbi on stkExistencia.Producto_Id=stkExistenciaUbi.Producto_Id and stkExistencia.Deposito_Id=stkExistenciaUbi.Deposito_Id
inner join stkUbicaciones on stkExistenciaUbi.Ubicacion_Id=stkUbicaciones.stkUbicaciones
WHERE
stkDepositos.Deposito_id between @DepositoDesde and @DepositoHasta AND 
stkExistencia.Cantidad <> 0 and 
stkExistencia.Empresa_id = @Empresa and
stkUbicaciones.Ubicacion_Id BETWEEN @UbicacionDesde and @UbicacionHasta
GROUP BY stkProductos.Producto_id, stkProductos.Descripcion, 
stkDepositos.Deposito_id, stkDepositos.Descripcion ,stkUbicaciones.Ubicacion_Id
ORDER BY 3,1

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_SUBDIARIO.sql*/
-- INF_SUBDIARIO '20190801','20190831', 1, 'es'
-- INF_SUBDIARIO '20190801','20190831', 1, 'en'
DROP PROCEDURE INF_SUBDIARIO 
GO
CREATE PROCEDURE INF_SUBDIARIO (
@FechaDesde DATETIME, 
@FechaHasta DATETIME, 
@Empresa int ,@Cultura VarChar(5)=null)
as

Declare @EnOtro bit 
set @EnOtro = (Select dbo.EnOtroLenguaje(@Cultura))

 
SELECT  conAsientos.conAsientos, 
 dbo.Segmento(genAsiSegmentos.Segmento_Id,
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, 
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N,  
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,   
	genAsiSegmentos.Segmento4N) as Segmento,
	conAsientos.Fecha, conAsientos.Posteado, conAsientos.Observaciones, 
	genMonedas.Moneda_id, genMonedas.Descripcion as DescripcionMoneda,
	genUsuarios.Usuario_id, conAsientos.FechaRegistro, 
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario, 
	conCuentas.Cuenta_Id, 
	CASE WHEN @EnOtro=1 THEN conCuentas.Description ELSE conCuentas.Descripcion END as DescripcionCuenta,
	conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1,
	conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2,
	conMovCont.LeyendaLibroMayor, 
	case when conMovCont.Tipomov = 1 then conMovCont.Importe else 0 end as Debe,
	case when conMovCont.Tipomov = 2 then conMovCont.Importe else 0 end as Haber,
	case when conMovCont.Tipomov = 1 then conMovCont.ImporteMonedaOriginal else 0 end as DebeOriginal,
	case when conMovCont.Tipomov = 2 then conMovCont.ImporteMonedaOriginal else 0 end as HaberOriginal
	
FROM genAsiSegmentos INNER JOIN conAsientos ON	
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	left outer JOIN disFormularios ON 
	disFormularios.disFormularios = conAsientos.Formulario_Id
	LEFT OUTER JOIN genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_id
	INNER JOIN genUsuarios ON
	genUsuarios.genUsuarios= conAsientos.Usuario_Id
	INNER JOIN conMovCont ON
	conMovCont.conAsientos = conAsientos.conAsientos
	INNER JOIN conCuentas ON
	conCuentas.conCuentas = conMovCont.Cuenta_id
	LEFT OUTER JOIN conCentro1 ON
	conCentro1.conCentro1 = conMovCont.Centro1_Id
	LEFT OUTER JOIN conCentro2 ON
	conCentro2.conCentro2 = conMovCont.Centro2_Id
	inner join genEmpresas ON  genEmpresas.genEmpresas = conAsientos.Empresa_Id
	left join conAsientosCon ON conAsientosCon.conAsientos = conAsientos.conAsientos
WHERE
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado =1 and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta AND 
	conAsientos.Empresa_Id = @Empresa and 
	(conAsientos.Fecha >= genEmpresas.FechaInicioSumma or conAsientosCon.conAsientos IS Not NULL)
ORDER BY 1	



GO		


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_SubDiarioImp.sql*/
DROP PROCEDURE Inf_SubDiarioImp
GO

CREATE PROCEDURE Inf_SubDiarioImp
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ImpuestoDesde VarChar(5),
	@ImpuestoHasta VarChar(5),
	@Empresa_Id Int
)
AS

SELECT conAsientos.Fecha, conAsientos.conAsientos,
dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Comprobante, 
	impImpuestos.Impuesto_Id, 
	impImpuestos.Descripcion as DescripcionImp, conCuentas.Cuenta_Id, 
		conCuentas.Descripcion DescripcionCta, 
		ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, 
		ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id,
	CASE WHEN conMovCont.TipoMov = 1 then conMovCont.Importe else 0  end as Debe, 
	CASE WHEN conMovCont.TipoMov = 2 then conMovCont.Importe else 0  end as Haber
from impLiquidacion 
INNER JOIN conAsientos ON conAsientos.conAsientos = impLiquidacion.conAsientos 
INNER JOIN genAsiSegmentos ON  genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN impImpuestos ON impImpuestos.impImpuestos = impLiquidacion.Impuesto_Id
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos 
INNER JOIN conCuentas ON  conCuentas.conCuentas  = conMovCont.Cuenta_Id
LEFT JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
WHERE
	conAsientos.Posteado = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Fecha Between @FechaDesde and @FechaHasta and 
	impImpuestos.Impuesto_Id Between @ImpuestoDesde and @ImpuestoHasta
ORDER BY 1,2	
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_SubMayorImp.sql*/
DROP PROCEDURE Inf_SubMayorImp
GO

CREATE PROCEDURE Inf_SubMayorImp
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@CuentaDesde VarChar(15),
	@CuentaHasta VarChar(15),
	@Centro1Desde VarChar(8),
	@Centro1Hasta VarChar(8),
	@Centro2Desde VarChar(8),
	@Centro2Hasta VarChar(8),
	@Empresa_Id Int
)
AS

SELECT conCuentas.Cuenta_Id, conAsientos.Fecha, conAsientos.conAsientos,
dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Comprobante, 
	impImpuestos.Impuesto_Id, 
	impImpuestos.Descripcion as DescripcionImp, 
		conCuentas.Descripcion DescripcionCta, 
		ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, 
		ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id,
	CASE WHEN conMovCont.TipoMov = 1 then conMovCont.Importe else 0  end as Debe, 
	CASE WHEN conMovCont.TipoMov = 2 then conMovCont.Importe else 0  end as Haber
from impLiquidacion 
INNER JOIN conAsientos ON conAsientos.conAsientos = impLiquidacion.conAsientos 
INNER JOIN genAsiSegmentos ON  genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN impImpuestos ON impImpuestos.impImpuestos = impLiquidacion.Impuesto_Id
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos 
INNER JOIN conCuentas ON  conCuentas.conCuentas  = conMovCont.Cuenta_Id
LEFT JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
WHERE
	conAsientos.Posteado = 1 and 
	conAsientos.Anulado = 0 and 
	conAsientos.Fecha Between @FechaDesde and @FechaHasta and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and 
	ISNULL(conCentro1.Centro1_Id,'') BETWEEN @Centro1Desde and @Centro1Hasta and 
	ISNULL(conCentro2.Centro2_Id,'') BETWEEN @Centro2Desde and @Centro2Hasta 
ORDER BY 1,2,3	
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueAcumAnual.sql*/
-- Inf_sueAcumAnual 2020,1,999999, 1,1,1,0
DROP PROCEDURE Inf_sueAcumAnual
GO
-- Inf_sueAcumAnual 2020,0,9999999,1,1,1,0
CREATE PROCEDURE Inf_sueAcumAnual
(
	@Anio Int, 
	@LegajoDesde Int, 
	@LegajoHasta Int,
	@Empresa_Id Int, 
	@Percepciones Bit,
	@Deducciones Bit,
	@Aportes Bit
)
AS


SELECT suePersonal.Legajo, suePersonal.ApellidoPaterno +','+ suePersonal.ApellidoMaterno+',' + 
	suePersonal.Nombres as ApellidoNombre, 
	CASE sueConceptos.Signo When 1 THEN '1 Percepciones'  
	WHEN -1 THEN '2 Deducciones'  
	ELSE 'Aportes'  end as Tipo, sueConceptos.Signo,
	sueConceptos.Concepto_Id, sueConceptos.Descripcion , 
	SUM(CASE WHEN sueLiquidacion.mes = 1 then sueTerminada.Importe else 0 end) as Ene, 
	SUM(CASE WHEN sueLiquidacion.mes = 2 then sueTerminada.Importe else 0 end) as Feb,
	SUM(CASE WHEN sueLiquidacion.mes = 3 then sueTerminada.Importe else 0 end) as Mar,
	SUM(CASE WHEN sueLiquidacion.mes = 4 then sueTerminada.Importe else 0 end) as Abr,
	SUM(CASE WHEN sueLiquidacion.mes = 5 then sueTerminada.Importe else 0 end) as May,
	SUM(CASE WHEN sueLiquidacion.mes = 6 then sueTerminada.Importe else 0 end) as Jun,
	SUM(CASE WHEN sueLiquidacion.mes = 7 then sueTerminada.Importe else 0 end) as Jul,
	SUM(CASE WHEN sueLiquidacion.mes = 8 then sueTerminada.Importe else 0 end) as Ago,
	SUM(CASE WHEN sueLiquidacion.mes = 9 then sueTerminada.Importe else 0 end) as Sep,
	SUM(CASE WHEN sueLiquidacion.mes = 10 then sueTerminada.Importe else 0 end) as Oct,
	SUM(CASE WHEN sueLiquidacion.mes = 11 then sueTerminada.Importe else 0 end) as Nov,
	SUM(CASE WHEN sueLiquidacion.mes = 12 then sueTerminada.Importe else 0 end) as Dic,
	SUM(sueTerminada.Importe) as Total

from suePersonal 
INNER JOIN sueTerminada ON sueTerminada.Legajo = suePersonal.genEntidades 
INNER JOIN sueLiquidacion ON sueLiquidacion.sueLiquidacion = sueTerminada.sueLiquidacion
INNER JOIN conAsientos ON  conAsientos.conAsientos = sueLiquidacion.sueLiquidacion
INNER JOIN sueConceptos ON  sueConceptos.sueConceptos = sueTerminada.Concepto_Id
WHERE
	sueLiquidacion.Anio = @Anio and 
	suePersonal.Legajo  Between @LegajoDesde AND @LegajoHasta AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	((@Percepciones= 1 AND sueConceptos.Signo = 1) or
	(@Deducciones= 1 AND sueConceptos.Signo = -1) or
	(@Aportes= 1 AND sueConceptos.Signo = 0))
GROUP BY suePersonal.Legajo, suePersonal.ApellidoPaterno , suePersonal.ApellidoMaterno,
	suePersonal.Nombres ,  	sueConceptos.Signo , sueConceptos.Concepto_Id, 
	sueConceptos.Descripcion
ORDER BY 1,3,5

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueConceptos.sql*/
-- Inf_sueConceptos  0,9999,1
drop PROCEDURE Inf_sueConceptos 
go
CREATE PROCEDURE Inf_sueConceptos
(
	@ConceptoDesde Int,
	@ConceptoHasta Int,
	@Empresa_Id int

)

as

SELECT sueConceptos.Concepto_Id, sueConceptos.Descripcion, Formula, 
	ColumnaRecibo, Signo,
	TipoPercepcion, TipoDeduccion, TipoOtro, TipoHora, TipoIncapacidad, 
	conCuentasDebe.Cuenta_Id as CuentaDebe, conCuentasDebe.Descripcion as DescripcionCtaDebe,
	conCuentasHaber.Cuenta_Id as CuentaHaber, conCuentasHaber.Descripcion as DescripcionCtaHaber, 
	conSubcuentasDebe.SubCuenta_Id SubCuentaDebe, conSubcuentasDebe.Descripcion as DescripcionSubcuentasDebe,
	conSubcuentasHaber.SubCuenta_Id SubCuentaHaber, conSubcuentasHaber.Descripcion as DescripcionSubcuentasHaber
From sueConceptos
	left join conCuentas conCuentasDebe ON
		conCuentasDebe.concuentas = sueConceptos.CuentaDebe
	left join conCuentas conCuentasHaber ON
		conCuentasHaber.concuentas = sueConceptos.CuentaHaber
	left join conSubcuentas conSubcuentasDebe ON
		conSubcuentasDebe.consubcuentas = sueConceptos.SubCuentaDebe
	left join conSubcuentas conSubcuentasHaber ON
		conSubcuentasHaber.consubcuentas = sueConceptos.SubCuentaHaber
Where
	sueConceptos.Concepto_Id BETWEEN @ConceptoDesde and @ConceptoHasta 
order by 1
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueConceptosLiqDet.sql*/
-- Inf_sueConceptosLiqDet 'SLIQ',2020,6,0,0,' ',' ',' ',' ',0,9999,' ','ZZZ',0,100,1

DROP PROCEDURE Inf_sueConceptosLiqDet
GO
CREATE PROCEDURE Inf_sueConceptosLiqDet
(
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@ConceptoDesde int,
	@ConceptoHasta int,
	@Empresa_Id Int
)

as

SELECT 
		dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) AS Nomina,
		sueLiquidacion.Descripcion AS DescripcionN, 
		sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, 
		suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
			suePersonal.Nombres as Nombre,
		SUM(sueTerminada.Dato) as Cantidad,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo >0 then
			sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Percepciones,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo <0 then
			-sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Deducciones,
		SUM(Case when sueTerminada.Signo =0 then
			sueTerminada.Importe else 0 end ) as Aportes,
			genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion as DescripcionSuc 
		From sueLiquidacion INNER JOIN sueTerminada ON
			sueLiquidacion.sueLiquidacion = sueTerminada.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			INNER JOIN genSegmentos ON
			genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id 
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueTerminada.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueTerminada.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				sueConceptos.Concepto_Id between @ConceptoDesde and @ConceptoHasta and
				genSegmentos.Segmento_Id = @Segmento_Id and 
				genAsiSegmentos.Segmento1N = case when @Segmento1N=0 then genAsiSegmentos.Segmento1N else @Segmento1N end and
				genAsiSegmentos.Segmento2N = case when @Segmento2N=0 then genAsiSegmentos.Segmento2N else @Segmento2N end and
				genAsiSegmentos.Segmento3N = case when @Segmento3N=0 then genAsiSegmentos.Segmento3N else @Segmento3N end and
				genAsiSegmentos.Segmento4N = case when @Segmento4N=0 then genAsiSegmentos.Segmento4N else @Segmento4N end and 
				genAsiSegmentos.Segmento1C = @Segmento1C and
				genAsiSegmentos.Segmento2C = @Segmento2C and
				genAsiSegmentos.Segmento3C = @Segmento3C and
				genAsiSegmentos.Segmento4C = @Segmento4C and
				genAsiSegmentos.Empresa_Id = @Empresa_Id
		GROUP BY genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion , 
				sueConceptos.Concepto_Id, sueConceptos.Descripcion , sueLiquidacion.sueLiquidacion, 
				sueLiquidacion.FechaFinal, genSucursalesEmpr.genSucursalesEmpr, 
				suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
				suePersonal.Nombres ,
				genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N, sueLiquidacion.Descripcion 
				
		ORDER BY 1,3,5

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueConceptosLiqRes.sql*/
-- Inf_sueConceptosLiqRes 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,0,9999,' ','ZZZ',1
-- Inf_sueConceptosLiqRes 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,0,9999,' ','ZZZ',0
DROP PROCEDURE Inf_sueConceptosLiqRes
GO
CREATE PROCEDURE Inf_sueConceptosLiqRes
(
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@PorSuc Bit,
	@Empresa_Id Int
)

as


if @PorSuc = 1
	SELECT  dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) AS Nomina,
		sueLiquidacion.Descripcion AS DescripcionN, 
		genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion as DescripcionSuc , 
		sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, 
		SUM(sueTerminada.Dato) as Cantidad,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo >0 then
			sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Percepciones,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo <0 then
			-sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Deducciones,
		SUM(Case when sueTerminada.Signo =0 then
			sueTerminada.Importe else 0 end ) as Aportes,
			(SELECT COUNT(1) FROM 
						(SELECT Distinct sueTerminada1.legajo from sueTerminada sueTerminada1, 
							suePersSucursal	suePersSucursal1 
						 where
							suePersSucursal1.Legajo = sueTerminada1.Legajo and 
							sueLiquidacion.FechaFinal between suePersSucursal1.FechaDesde and suePersSucursal1.FechaHasta and 
							suePersSucursal1.Sucursal = genSucursalesEmpr.genSucursalesEmpr and 
							sueTerminada1.sueLiquidacion = sueLiquidacion.sueLiquidacion) as Empelados) as Empleados
				
		From sueLiquidacion INNER JOIN sueTerminada ON
			sueLiquidacion.sueLiquidacion = sueTerminada.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			INNER JOIN genSegmentos ON
			genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id 
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueTerminada.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueTerminada.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genSegmentos.Segmento_Id = @Segmento_Id and 
				genAsiSegmentos.Segmento1N = case when @Segmento1N=0 then genAsiSegmentos.Segmento1N else @Segmento1N end and
				genAsiSegmentos.Segmento2N = case when @Segmento2N=0 then genAsiSegmentos.Segmento2N else @Segmento2N end and
				genAsiSegmentos.Segmento3N = case when @Segmento3N=0 then genAsiSegmentos.Segmento3N else @Segmento3N end and
				genAsiSegmentos.Segmento4N = case when @Segmento4N=0 then genAsiSegmentos.Segmento4N else @Segmento4N end and 
				genAsiSegmentos.Segmento1C = @Segmento1C and
				genAsiSegmentos.Segmento2C = @Segmento2C and
				genAsiSegmentos.Segmento3C = @Segmento3C and
				genAsiSegmentos.Segmento4C = @Segmento4C and
				genAsiSegmentos.Empresa_Id = @Empresa_Id
		GROUP BY genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion , 
				sueConceptos.Concepto_Id, sueConceptos.Descripcion , sueLiquidacion.sueLiquidacion, 
				sueLiquidacion.FechaFinal, genSucursalesEmpr.genSucursalesEmpr,
				genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N, sueLiquidacion.Descripcion 
				
		ORDER BY 3,5,1
ELSE

SELECT 	dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) AS Nomina,
		sueLiquidacion.Descripcion AS DescripcionN, 
		' ' Sucursal, ' ' as DescripcionSuc , 
		sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, 
		SUM(sueTerminada.Dato) as Cantidad,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo >0 then
			sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Percepciones,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo <0 then
			-sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Deducciones,
		SUM(Case when sueTerminada.Signo =0 then
			sueTerminada.Importe else 0 end ) as Aportes, 
			(SELECT COUNT(1) FROM 
			(SELECT Distinct legajo from sueTerminada sueTerminada1
				 where
				sueTerminada1.sueLiquidacion = sueLiquidacion.sueLiquidacion) as Empelados) as Empleados
		From sueLiquidacion INNER JOIN sueTerminada ON
			sueLiquidacion.sueLiquidacion = sueTerminada.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			INNER JOIN genSegmentos ON
			genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id 
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueTerminada.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueTerminada.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genSegmentos.Segmento_Id = @Segmento_Id and 
				genAsiSegmentos.Segmento1N = case when @Segmento1N=0 then genAsiSegmentos.Segmento1N else @Segmento1N end and
				genAsiSegmentos.Segmento2N = case when @Segmento2N=0 then genAsiSegmentos.Segmento2N else @Segmento2N end and
				genAsiSegmentos.Segmento3N = case when @Segmento3N=0 then genAsiSegmentos.Segmento3N else @Segmento3N end and
				genAsiSegmentos.Segmento4N = case when @Segmento4N=0 then genAsiSegmentos.Segmento4N else @Segmento4N end and 
				genAsiSegmentos.Segmento1C = @Segmento1C and
				genAsiSegmentos.Segmento2C = @Segmento2C and
				genAsiSegmentos.Segmento3C = @Segmento3C and
				genAsiSegmentos.Segmento4C = @Segmento4C and
				genAsiSegmentos.Empresa_Id = @Empresa_Id
		GROUP BY 	sueConceptos.Concepto_Id, sueConceptos.Descripcion , 
			sueLiquidacion.sueLiquidacion, 
			genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N, sueLiquidacion.Descripcion 
		ORDER BY 5,1
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueDescTope.sql*/
-- Inf_sueDescTope  0,9999,0,99999,'20190930',' ','zzzz',1
drop PROCEDURE Inf_sueDescTope 
go
CREATE PROCEDURE Inf_sueDescTope 
(
	@LegajoDesde Int,
	@LegajoHasta Int,
	@ConceptoDesde Int,
	@ConceptoHasta Int,
	@Fecha DateTime, 
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@Empresa_Id int

)

as


SELECT Concepto_Id, Descripcion, Fecha,Comprobamte, 
	Legajo, Nombre, MontoTope, Descuento, 
	MontoTope-Descuento as Saldo
FROM (

SELECT sueConceptos.Concepto_Id, sueConceptos.Descripcion, 
	sueConcAcum.Fecha,
	dbo.Segmento(sueConcAcumSegmento.Segmento_Id, sueConcAcumSegmento.Segmento1C,
	sueConcAcumSegmento.Segmento2C, sueConcAcumSegmento.Segmento3C, sueConcAcumSegmento.Segmento4C,
	sueConcAcumSegmento.Segmento1N, sueConcAcumSegmento.Segmento2N, sueConcAcumSegmento.Segmento3N,
	sueConcAcumSegmento.Segmento4N) AS Comprobamte,
	suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
			suePersonal.Nombres as Nombre,
		sueConcAcum.MontoTope, 
		sueConcAcum.Acumulado -
		ISNULL((SELECT SUM(sueConcDescuento.Monto) 
			FROM sueConcDescuento, sueLiquidacion, conAsientos
			WHERE
				sueConcDescuento.sueLiquidacion = sueLiquidacion.sueLiquidacion AND 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion and 
				conAsientos.Anulado = 0 and 
				sueConcDescuento.sueConcAcum = sueConcAcum.sueConcAcum and 
				sueLiquidacion.FechaFinal > @Fecha),0) as Descuento
	from sueConcAcum 
		INNER JOIN sueConceptos ON sueConcAcum.Concepto_Id = sueConceptos.sueConceptos
		INNER JOIN suePersonal ON  suePersonal.genEntidades = sueConcAcum.Legajo
		INNER JOIN suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
		INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
		INNER JOIN sueConcAcumSegmento ON
			sueConcAcumSegmento.sueConcAcum = sueConcAcum.sueConcAcum
		Where
			sueConcAcum.Fecha <= @Fecha and 
			ISNULL(suePersonal.Empresa_Id,@Empresa_Id) = @Empresa_Id and 
			sueConceptos.Concepto_Id BETWEEN @ConceptoDesde and @ConceptoHasta and 
			suePersonal.Legajo BETWEEN @LegajoDesde And @LegajoHasta  and 
			genSucursalesEmpr.Sucursal Between @SucursalDesde And @SucursalHasta) AS XXX
ORDER BY 1, 3, 5
			
			
			
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueDetAsiConc.sql*/

-- Inf_sueDetAsiConc '20190901','20190930',0,99999, 0,99999,' ','zzzz',1

DROP PROCEDURE Inf_sueDetAsiConc
GO
CREATE PROCEDURE Inf_sueDetAsiConc

(
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@ConceptoDesde Int, 
	@ConceptoHasta int,
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@Empresa_Id Int
	
)

as


SELECT 	suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
		suePersonal.Nombres as Nombre,
		sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, 
		conCuentasDebe.Cuenta_Id CuentaDebe, conCuentasDebe.Descripcion as DescripcionCtaDebe ,
		conCentro1Debe.Centro1_Id Centro1_IdDebe, conCentro2Debe.Centro2_Id Centro2_IdDebe,
		conCuentasHaber.Cuenta_Id CuentaHaber, conCuentasHaber.Descripcion as DescripcionCtaHaber ,
		conCentro1Haber.Centro1_Id Centro1_IdHaber, conCentro2Haber.Centro2_Id Centro2_IdHaber,
		conAsientos.conAsientos, 
		dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) as Nomina,
		CASE WHEN  sueMovContDebe.Importe <=  Abs(sueMovContHaber.Importe) 
		THEN sueMovContDebe.Importe ELSE sueMovContHaber.Importe END 	as Importe 
		From sueLiquidacion INNER JOIN sueMovCont sueMovContDebe ON
			sueLiquidacion.sueLiquidacion = sueMovContDebe.sueLiquidacion and
			sueMovContDebe.Importe > 0 
			INNER JOIN sueMovCont sueMovContHaber ON
			sueMovContHaber.sueLiquidacion = sueMovContDebe.sueLiquidacion and 
			sueMovContHaber.Legajo = sueMovContDebe.Legajo AND 
			sueMovContHaber.Concepto_Id = sueMovContDebe.Concepto_Id AND 
			sueMovContHaber.Importe < 0
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueMovContDebe.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueMovContDebe.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			inner join conCuentas conCuentasDebe ON conCuentasDebe.conCuentas = sueMovContDebe.Cuenta_Id
			left join conCentro1 conCentro1Debe ON conCentro1Debe.conCentro1 = sueMovContDebe.Centro1_Id
			left join conCentro2 conCentro2Debe ON conCentro2Debe.conCentro2 = sueMovContDebe.Centro2_Id
			inner join conCuentas conCuentasHaber ON conCuentasHaber.conCuentas = sueMovContHaber.Cuenta_Id
			left join conCentro1 conCentro1Haber ON conCentro1Haber.conCentro1 = sueMovContHaber.Centro1_Id
			left join conCentro2 conCentro2Haber ON conCentro2Haber.conCentro2 = sueMovContHaber.Centro2_Id
			Where
				conAsientos.Anulado = 0 and
				sueConceptos.Concepto_Id BETWEEN @ConceptoDesde and @ConceptoHasta and 
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genAsiSegmentos.Empresa_Id = @Empresa_Id and 
				conAsientos.Fecha Between @FechaDesde and @FechaHasta
		ORDER BY 1,3,4,6,7

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueEmpleados.sql*/
-- Inf_sueEmpleadosMX 0, 99999, ' ','ZZZ', 1,1
DROP PROCEDURE Inf_sueEmpleadosMX
GO
CREATE PROCEDURE Inf_sueEmpleadosMX
(
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@Empresa_Id int, 
	@SoloActivos bit
)

as
DECLARE @Fecha DateTime
SET @Fecha = GetDate()



SELECT suePersonal.Legajo, suePersonal.ApellidoPaterno,	suePersonal.ApellidoMaterno,
	suePersonal.Nombres, suePersonal.FechaIngreso, 
	isnull(CONVERT(CHAR(10),suePersonal.FechaBaja,103),'')  AS FechaBaja, 
	genEntidades.CUIT as RFC , suePersonal.NumeroDoc as CURP, 
	suePersonal.NroSegSocial as IMSS, suePersonal.Telefonos, 
	suePersonal.Celular as Movil, suePersonal.FechaNacimiento, suePersonal.Sexo, 
	suePersonal.eMail, suePersonal.GrupoSanguineo, suePersonal.RH, 
	suePersonal.ClaveBancaria as CLABE, suePersonal.Observaciones, 
	suePersonal.UMF, suePersonal.AvisarA, suePersonal.Inactivo, 
	suePersonal.AniosReconocidos, suePersonal.MesesReconocidos,
	gensucursalesEmpr.Sucursal, gensucursalesEmpr.Descripcion as DescripcionSuc, 
	Nacionalidad.Descripcion as Nacionalidad, suePersonal.CodigoNatural, 
	suePersAfore.Afore_Id, Afore.Descripcion as DescripcionAfore, 
	sueCategorias.Categoria_Id, sueCategorias.Descripcion as DescripcionCategoria, 
	suePersDomicilio.Direccion1 Calle, suePersDomicilio.NroExterior, suePersDomicilio.NroInterior, 
	suePersDomicilio.Direccion2 Colonia, suePersDomicilio.Localidad, suePersDomicilio.CodigoPostal, 
	suePersDomicilio.EntreCalle1, suePersDomicilio.EntreCalle2, genProvincias.Descripcion as Estado, 
	EstadoCivil.Descripcion as EstadoCivil, suePuestos.Puesto_Id, suePuestos.Descripcion  as DescripcionPuesto, 
	ISNULL(suePersTipoContrato.TipoContrato,'') TipoContrato, ISNULL(suePersTipoJornada.TipoJornada,'') TipoJornada, 
	ISNULL(suePersTipoRegimen.TipoRegimen,'') TipoRegimen, ISNULL(suePersTipoSDI.TipoSDI,'') TipoSDI, 
	sueTipoPago.TipoPago_Id, sueTipoPago.Descripcion as DescripcionTipoPago
From suePersonal
	INNER JOIN suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
	INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
	INNER JOIN genEntidades ON genEntidades.genEntidades = suePersonal.genEntidades
	INNER JOIN genPaises as Nacionalidad ON
		Nacionalidad.genPaises = suePersonal.Nacionalidad_Id
	LEFT JOIN suePersAfore ON
			suePersAfore.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersAfore.FechaDesde and suePersAfore.FechaHasta
	LEFT JOIN genEntidadesBasicasValor as Afore ON
		Afore.Entidad_id = 1502 and 
		Afore.Dominio_Id = 'MX' AND 
		Afore.Clave = suePersAfore.Afore_id
	INNER JOIN suePersCatego ON
			suePersCatego.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersCatego.FechaDesde and suePersCatego.FechaHasta
	INNER JOIN sueCategorias ON
		sueCategorias.sueCategorias = suePersCatego.Categoria_Id
	INNER JOIN suePersDomicilio ON
			suePersDomicilio.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersDomicilio.FechaDesde and suePersDomicilio.FechaHasta
	INNER JOIN genProvincias ON
		genProvincias.genProvincias = suePersDomicilio.Provincia_Id
	INNER JOIN suePersEstadoCivil ON
			suePersEstadoCivil.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersEstadoCivil.FechaDesde and suePersEstadoCivil.FechaHasta			
	LEFT JOIN genEntidadesBasicasValor as EstadoCivil ON
		EstadoCivil.Entidad_id = 1504 and 
		EstadoCivil.Dominio_Id = 'MX' AND 
		EstadoCivil.Clave = suePersEstadoCivil.EstadoCivil_Id
	INNER JOIN suePersPuestos ON
			suePersPuestos.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersPuestos.FechaDesde and suePersPuestos.FechaHasta				
	INNER JOIN suePuestos ON
		suePuestos.suePuestos = suePersPuestos.Puesto_Id
	LEFT JOIN suePersTipoContrato ON --INNER JOIN
			suePersTipoContrato.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersTipoContrato.FechaDesde and suePersTipoContrato.FechaHasta				
	LEFT JOIN suePersTipoJornada ON --INNER JOIN
			suePersTipoJornada.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersTipoJornada.FechaDesde and suePersTipoJornada.FechaHasta				
	INNER JOIN suePersTipoPago ON
			suePersTipoPago.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersTipoPago.FechaDesde and suePersTipoPago.FechaHasta				
	INNER JOIN sueTipoPago ON
		sueTipoPago.sueTipoPago = suePersTipoPago.TipoPago_id
	LEFT JOIN suePersTipoRegimen ON --INNER JOIN
			suePersTipoRegimen.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersTipoRegimen.FechaDesde and suePersTipoRegimen.FechaHasta				
	LEFT JOIN suePersTipoSDI ON --INNER JOIN
			suePersTipoSDI.Legajo = suePersonal.genEntidades  and 
			@Fecha between suePersTipoSDI.FechaDesde and suePersTipoSDI.FechaHasta				
Where
	ISNULL(suePersonal.Empresa_Id,@Empresa_Id) = @Empresa_Id and 
	(@SoloActivos=0 or suePersonal.FechaBaja IS NULL) AND
	suePersonal.Legajo BETWEEN @LegajoDesde And @LegajoHasta  and 
	genSucursalesEmpr.Sucursal Between @SucursalDesde And @SucursalHasta

ORDER BY 1
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueNetos.sql*/
-- Inf_sueNetos 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,0,9999,' ','ZZZ'

DROP PROCEDURE Inf_sueNetos
GO
CREATE PROCEDURE Inf_sueNetos
(
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@Empresa_Id Int,
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4)

)

as

SELECT 	dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) AS Nomina,
		sueLiquidacion.Descripcion AS DescripcionN, 
		suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
			suePersonal.Nombres as Nombre,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo >0 then
			sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Percepciones,
		SUM(Case when sueTerminada.Importe * sueTerminada.Signo <0 then
			-sueTerminada.Importe * sueTerminada.Signo else 0 end ) as Deducciones,
		SUM(Case when sueTerminada.Signo =0 then
			sueTerminada.Importe else 0 end)  as Aportes,
		SUM(sueTerminada.Importe*sueTerminada.Signo)  as Neto
		From sueLiquidacion INNER JOIN sueTerminada ON
			sueLiquidacion.sueLiquidacion = sueTerminada.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			INNER JOIN genSegmentos ON
			genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id 
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueTerminada.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueTerminada.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genSegmentos.Segmento_Id = @Segmento_Id and 
				genAsiSegmentos.Segmento1N = @Segmento1N and
				genAsiSegmentos.Segmento2N = @Segmento2N and
				genAsiSegmentos.Segmento3N = @Segmento3N and
				genAsiSegmentos.Segmento4N = @Segmento4N and
				genAsiSegmentos.Segmento1C = @Segmento1C and
				genAsiSegmentos.Segmento2C = @Segmento2C and
				genAsiSegmentos.Segmento3C = @Segmento3C and
				genAsiSegmentos.Segmento4C = @Segmento4C and
				genAsiSegmentos.Empresa_Id = @Empresa_Id 
GROUP BY  suePersonal.Legajo, suePersonal.ApellidoPaterno ,suePersonal.ApellidoMaterno,
			suePersonal.Nombres	,genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N, sueLiquidacion.Descripcion 			
		ORDER BY 3
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueNomina.sql*/
-- Inf_sueNomina 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,0,9999,' ','ZZZ',0

DROP PROCEDURE Inf_sueNomina
GO
CREATE PROCEDURE Inf_sueNomina
(
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(25),
	@Segmento2C VarChar(25),
	@Segmento3C VarChar(25),
	@Segmento4C VarChar(25),
	@Empresa_Id Int,
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4), 
	@pConAportes Bit 
)

as

SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) AS Nomina,
		sueLiquidacion.Descripcion AS DescripcionN, 
		suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
			suePersonal.Nombres as Nombre,
		sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, 
		sueTerminada.Dato as Cantidad,
		Case when sueTerminada.Importe * sueTerminada.Signo >0 then
			sueTerminada.Importe * sueTerminada.Signo else 0 end  as Percepciones,
		Case when sueTerminada.Importe * sueTerminada.Signo <0 then
			-sueTerminada.Importe * sueTerminada.Signo else 0 end  as Deducciones,
		Case when sueTerminada.Signo =0 then
			sueTerminada.Importe else 0 end  as Aportes,
			genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion as DescripcionSuc 
		From sueLiquidacion INNER JOIN sueTerminada ON
			sueLiquidacion.sueLiquidacion = sueTerminada.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			INNER JOIN genSegmentos ON
			genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id 
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueTerminada.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueTerminada.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genSegmentos.Segmento_Id = @Segmento_Id and 
				genAsiSegmentos.Segmento1N = @Segmento1N and
				genAsiSegmentos.Segmento2N = @Segmento2N and
				genAsiSegmentos.Segmento3N = @Segmento3N and
				genAsiSegmentos.Segmento4N = @Segmento4N and
				genAsiSegmentos.Segmento1C = @Segmento1C and
				genAsiSegmentos.Segmento2C = @Segmento2C and
				genAsiSegmentos.Segmento3C = @Segmento3C and
				genAsiSegmentos.Segmento4C = @Segmento4C and
				genAsiSegmentos.Empresa_Id = @Empresa_Id and 
				(sueterminada.Signo != 0 or @pConAportes=1)
				
		ORDER BY 3,5
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_suePlantilla.sql*/
drop procedure inf_suePlantilla
go
create procedure inf_suePlantilla
(@pCentroDesde varchar(8),
@pCentroHasta varchar(8),
@pEmpresa_Id int
)
as
select conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionC1,
suePuestos.Puesto_id,suePuestos.Descripcion,suePlantilla.Cantidad,
suePuestos.Empresa_Id,isnull(SUM(suePersContableDatos.Porcentaje)/100,0)  as CantidadEmpleada,
suePlantilla.Cantidad-isnull(SUM(suePersContableDatos.Porcentaje)/100,0) as Vacantes  
from suePlantilla
inner join suePuestos on ( suePuestos.suePuestos=suePlantilla.Puesto_Id)
inner join conCentro1 on (suePlantilla.Centro1_Id=conCentro1.conCentro1)
left join suePersPuestos on (suePuestos.suePuestos=suePersPuestos.Puesto_Id and suePersPuestos.FechaHasta='29990101')
left join suePersContable on (suePersPuestos.Legajo=suePersContable.Legajo and suePersContable.FechaHasta='29990101')
left join suePersContableDatos on (suePersPuestos.Legajo=suePersContableDatos.Legajo and suePersContableDatos.Centro1_Id=conCentro1.conCentro1 
and suePersContableDatos.FechaDesde= suePersContable.FechaDesde)
where 
isnull(suePuestos.Empresa_Id,@pEmpresa_Id)=@pEmpresa_Id  and 
conCentro1.Centro1_Id BETWEEN  @pCentroDesde and @pCentroHasta
group by conCentro1.Centro1_Id,
suePuestos.Puesto_id,suePuestos.Descripcion,suePlantilla.Cantidad,suePuestos.Empresa_Id, 
conCentro1.Descripcion 
UNION ALL
select conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionC1,
suePuestos.Puesto_id,suePuestos.Descripcion,0 Cantidad,
suePuestos.Empresa_Id,isnull(SUM(suePersContableDatos.Porcentaje)/100,0)  as CantidadEmpleada,-isnull(SUM(suePersContableDatos.Porcentaje)/100,0) as Vacantes  
from suePuestos 
INNER join suePersPuestos on (suePuestos.suePuestos=suePersPuestos.Puesto_Id and suePersPuestos.FechaHasta='29990101')
INNER join suePersContable on (suePersPuestos.Legajo=suePersContable.Legajo and suePersContable.FechaHasta='29990101')
INNER join suePersContableDatos on suePersPuestos.Legajo=suePersContableDatos.Legajo  
	and suePersContableDatos.FechaDesde= suePersContable.FechaDesde
inner join conCentro1 on (suePersContableDatos.Centro1_Id=conCentro1.conCentro1)
where 
	not exists(select 1 from suePlantilla
	where
		suePlantilla.Centro1_Id = conCentro1.conCentro1 and 
		suePlantilla.Puesto_Id =suePuestos.suePuestos) and 
isnull(suePuestos.Empresa_Id,@pEmpresa_Id)=@pEmpresa_Id  and 
conCentro1.Centro1_Id BETWEEN  @pCentroDesde and @pCentroHasta
group by conCentro1.Centro1_Id,
suePuestos.Puesto_id,suePuestos.Descripcion,suePuestos.Empresa_Id, 
conCentro1.Descripcion
ORDER BY 1,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_suePlantillaDetalle.sql*/
-- inf_suePlantillaDetalle ' ','ZZZ',1

Drop procedure inf_suePlantillaDetalle
go
create procedure inf_suePlantillaDetalle
(@pCentroDesde varchar(8),
@pCentroHasta varchar(8),
@pEmpresa_Id int
)
as
Select suePuestos.Puesto_id,suePuestos.Descripcion,
	suePersonal.Empresa_Id,suePlantilla.Cantidad,
	conCentro1.Centro1_Id,conCentro1.Descripcion as DescripcionC1,
	isnull(SUM(suePersContableDatos.Porcentaje)/100,0)  as CantidadEmpleada,
	suePlantilla.Cantidad-isnull(SUM(suePersContableDatos.Porcentaje)/100,0) as Vacantes ,
	suePersonal.Legajo,
	suePersonal.Nombres,suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno   from suePlantilla
inner join suePuestos on ( suePuestos.suePuestos=suePlantilla.Puesto_Id)
inner join conCentro1 on (suePlantilla.Centro1_Id=conCentro1.conCentro1)
left join suePersPuestos on (suePuestos.suePuestos=suePersPuestos.Puesto_Id and suePersPuestos.FechaHasta='29990101')
left join suePersContable on (suePersPuestos.Legajo=suePersContable.Legajo and suePersContable.FechaHasta='29990101')
left join suePersonal on (suePersPuestos.Legajo=suePersonal.Legajo)
left join suePersContableDatos on (suePersPuestos.Legajo=suePersContableDatos.Legajo and suePersContableDatos.Centro1_Id=conCentro1.conCentro1 
and suePersContableDatos.FechaDesde= suePersContable.FechaDesde)

where 
suePersonal.Empresa_Id=@pEmpresa_Id or suePersonal.Empresa_Id is null and 
conCentro1.Centro1_Id BETWEEN  @pCentroDesde and @pCentroHasta
group by conCentro1.Centro1_Id,conCentro1.Descripcion ,
suePuestos.Puesto_id,suePuestos.Descripcion,suePlantilla.Cantidad,suePersonal.Empresa_Id,suePersonal.Nombres,suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno,
suePersonal.Legajo

union

select suePuestos.Puesto_id,suePuestos.Descripcion,suePersonal.Empresa_Id,0,
	conCentro1.Centro1_Id,conCentro1.Descripcion as DescripcionC1,
	isnull((suePersContableDatos.Porcentaje)/100,0)  as CantidadEmpleada,0,
	suePersonal.Legajo,suePersonal.Nombres,suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno  from suePersonal
inner join suePersPuestos on (suePersPuestos.Legajo=suePersonal.genEntidades and suePersPuestos.FechaHasta='29990101')
left join suePersContable on (suePersPuestos.Legajo=suePersContable.Legajo and suePersContable.FechaHasta='29990101')
left join suePuestos on ( suePuestos.suePuestos=suePersPuestos.Puesto_Id)
left join suePlantilla on (suePlantilla.Puesto_Id=suePuestos.suePuestos)
left join conCentro1 on (suePlantilla.Centro1_Id=conCentro1.conCentro1)
left join suePersContableDatos on (suePersPuestos.Legajo=suePersContableDatos.Legajo and suePersContableDatos.Centro1_Id=conCentro1.conCentro1 
and suePersContableDatos.FechaDesde= suePersContable.FechaDesde)

where suePersContableDatos.Porcentaje>0 and suePersonal.Empresa_Id=@pEmpresa_Id or suePersonal.Empresa_Id is null and 
conCentro1.Centro1_Id BETWEEN  @pCentroDesde and @pCentroHasta



group by conCentro1.Centro1_Id,conCentro1.Descripcion ,
suePuestos.Puesto_id,suePuestos.Descripcion,suePlantilla.Cantidad,suePersonal.Empresa_Id,
suePersonal.Legajo,suePersonal.Nombres,suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno ,suePersContableDatos.Porcentaje
union all
Select suePuestos.Puesto_id,suePuestos.Descripcion,
	suePersonal.Empresa_Id,0 Cantidad,
	conCentro1.Centro1_Id,conCentro1.Descripcion as DescripcionC1,
	isnull(SUM(suePersContableDatos.Porcentaje)/100,0)  as CantidadEmpleada,
	-isnull(SUM(suePersContableDatos.Porcentaje)/100,0) as Vacantes ,
	suePersonal.Legajo,suePersonal.Nombres,suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno   
	from suePersPuestos inner join 	suePuestos 
			on ( suePuestos.suePuestos=suePersPuestos.Puesto_Id)
	INNER join suePersContable on (suePersPuestos.Legajo=suePersContable.Legajo and 
			suePersContable.FechaHasta='29990101')
	left join suePersContableDatos on suePersPuestos.Legajo=suePersContableDatos.Legajo and 
		suePersContable.FechaDesde = suePersContableDatos.FechaDesde 
	inner join conCentro1 on (suePersContableDatos.Centro1_Id=conCentro1.conCentro1)
	INNER join suePersonal on (suePersPuestos.Legajo=suePersonal.genEntidades)

where 
not exists(select 1 from suePlantilla where
	suePlantilla.Puesto_Id = suePuestos.suePuestos and
	suePlantilla.Centro1_Id = conCentro1.conCentro1) 
	and suePersonal.Empresa_Id=@pEmpresa_Id or suePersonal.Empresa_Id is null and 
	conCentro1.Centro1_Id BETWEEN  @pCentroDesde and @pCentroHasta
group by conCentro1.Centro1_Id,conCentro1.Descripcion ,
suePuestos.Puesto_id,suePuestos.Descripcion,suePersonal.Empresa_Id,
	suePersonal.Legajo,suePersonal.Nombres,
	suePersonal.ApellidoPaterno,suePersonal.ApellidoMaterno 

ORDER BY conCentro1.Centro1_Id,suePuestos.Puesto_id,suePersonal.Legajo

GO

 --exec inf_suePlantillaDetalle '00000', 'zzzzz' ,1


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_SueRecibos.sql*/
--Inf_SueRecibos 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,1,9999
DROP PROCEDURE Inf_SueRecibos
GO
CREATE PROCEDURE Inf_SueRecibos
(
	@pSegmento_Id VarChar(10),
	@pSegmento1N INT, 
	@pSegmento2N INT, 
	@pSegmento3N INT, 
	@pSegmento4N INT, 
	@pSegmento1C VarChar(25), 
	@pSegmento2C VarChar(25), 
	@pSegmento3C VarChar(25), 
	@pSegmento4C VarChar(25), 
	@Empresa_Id Int, 
	@LegajoDesde Int ,
	@LegajoHasta Int 

)

as

Select sueLiquidacion.Descripcion as DescripcionNomina , sueLiquidacion.Anio, sueLiquidacion.Mes, 
sueLiquidacion.Decena, sueLiquidacion.Quincena, sueLiquidacion.Semana, sueLiquidacion.Vez,
genEmpresas.Regimen,genEmpresas.Cuit as RFCEmpresa, genSucursalesEmpr.Localidad as LocalidadEmpr, 
genSucursalesEmpr.CodigoPostal CodigoPostalEmpr, 
genEmpresas.Calle  CalleEmpr , genEmpresas.NoExterior NoExteriorEmpr , 
genEmpresas.NoInterior NoInteriorEmpr , genEmpresas.Localidad LocalidadEmpr, 
genEmpresas.CodigoPostal CodigoPostalEmpr, 
genProvincias.Descripcion as ProvinciaEmpr , genPaises.Descripcion as PaisEmpr,
genEmpresas.Telefono  as TelefonoEmpr, genSucursalesEmpr.RegPatronal,
ISNULL(sueNominaCfdi.Fecha, Convert(char(19),sueLiquidacion.FechaFinal, 103)) as Fecha,
sueLiquidacion.FechaPago, 
suePersonal.Legajo, suePersonal.ApellidoPaterno, suePersonal.ApellidoMaterno, suePersonal.Nombres, 
genEntidades.Cuit as RFC, suePersonal.NumeroDoc as CURP,
suePersonal.FechaIngreso, ISNULL(SDI.Valor,0) AS SDI, 
ISNULL(SD.VALOR,0) AS SD, suePersonal.NroSegSocial, ' ' Departamento, 
DateDiff(ww, suePersonal.FechaIngreso,sueLiquidacion.FechaFinal) as Antig,
suePeriodicidad.CodFiscal as Periodicidad, 
suePuestos.RiesgoPuesto, suePuestos.Descripcion as Puesto, 
DateDiff(dd, sueLiquidacion.FechaInicial, sueLiquidacion.FechaFinal)+1 as DiasPagados,
TipoSdi.Descripcion as TipoSdi, TipoJornada.Descripcion as TipoJornada, 
	'PUE' MetodoPago, suePersonal.ClaveBancaria as Clabe,
		sueConceptos.Concepto_Id, 	sueConceptos.Descripcion, 
		sueTerminada.Dato, sueTerminada.Dato2,
		sueTerminada.IMPORTE*sueTerminada.SIGNO as Importe, 
		sueConceptos.ColumnaRecibo
From sueLiquidacion
INNER JOIN conAsientos On sueLiquidacion.sueLiquidacion = conAsientos.conAsientos
inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id  = conAsientos.conAsientos
inner join genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN sueTerminada ON sueTerminada.sueLiquidacion = sueLiquidacion.sueLiquidacion 
inner join suePersonal ON suePersonal.genEntidades = sueTerminada.Legajo 
INNER JOIN suePersSucursal ON suePersSucursal.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal BETWEEN suePersSucursal.FechaDesde And suePersSucursal.FechaHasta
INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
INNER JOIN genEmpresas ON genEmpresas.genEmpresas = genAsiSegmentos.Empresa_Id
LEFT JOIN genProvincias ON genProvincias.genProvincias = genEmpresas.Provincia_Id
LEFT JOIN genPaises ON genPaises.genPaises = genEmpresas.Pais_Id
LEFT JOIN sueNominaCfdi ON sueNominaCfdi.sueLiquidacion = sueLiquidacion.sueLiquidacion and 
	sueNominaCfdi.Legajo = suePersonal.genEntidades
inner join genEntidades on genEntidades.genEntidades = suePersonal.genEntidades
inner join sueGrupos on sueGrupos.sueGrupos = sueLiquidacion.Grupo_Id
Left join suePeriodicidad on suePeriodicidad.Periodo_Id = sueGrupos.Periodo_Id
LEFT JOIN sueLiqPersImportes SDI ON 
	SDI.Legajo = suePersonal.genEntidades and 
	SDI.Importe_Id = 2 and 
	sueLiquidacion.FechaFinal Between SDI.Fecha_Desde AND SDI.Fecha_Hasta
LEFT JOIN sueLiqPersImportes SD ON 
	SD.Legajo = suePersonal.genEntidades and 
	SD.Importe_Id = 1 and 
	sueLiquidacion.FechaFinal Between SD.Fecha_Desde AND SD.Fecha_Hasta
inner join suePersPuestos on suePersPuestos.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal Between suePersPuestos.FechaDesde AND suePersPuestos.FechaHasta
inner join suePuestos ON suePuestos.suePuestos = suePersPuestos.Puesto_Id
Left join suePersTipoSDI on suePersTipoSDI.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal Between suePersTipoSDI.FechaDesde AND suePersTipoSDI.FechaHasta
Left join suePersTipoJornada on suePersTipoJornada.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal Between suePersTipoJornada.FechaDesde AND suePersTipoJornada.FechaHasta
left join genEntidadesBasicasValor TipoSdi ON
	TipoSdi.Entidad_id  = 1513 and
	TipoSdi.Clave = suePersTipoSDI.TipoSDI and
	TipoSdi.Dominio_ID = 'MX'
	
left join genEntidadesBasicasValor TipoJornada ON
	TipoJornada.Entidad_id  = 1511 and
	TipoJornada.Clave = suePersTipoJornada.TipoJornada and
	TipoJornada.Dominio_ID = 'MX'
inner join sueConceptos ON sueConceptos.sueConceptos = sueTerminada.Concepto_Id
Where
	conAsientos.Anulado = 0 and 
	sueTerminada.Signo != 0 and
	genSegmentos.Segmento_Id = @pSegmento_Id and 
	genAsiSegmentos.Segmento1N = @pSegmento1N AND
	genAsiSegmentos.Segmento2N = @pSegmento2N AND
	genAsiSegmentos.Segmento3N = @pSegmento3N AND
	genAsiSegmentos.Segmento4N = @pSegmento4N AND
	genAsiSegmentos.Segmento1C = @pSegmento1C AND
	genAsiSegmentos.Segmento2C = @pSegmento2C AND
	genAsiSegmentos.Segmento3C = @pSegmento3C AND
	genAsiSegmentos.Segmento4C = @pSegmento4C AND
	genAsiSegmentos.Empresa_Id = @Empresa_Id AND
	suePersonal.Legajo BETWEEN  @LegajoDesde And @LegajoHasta 
go

	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_SueRecibosCabe.sql*/


--Inf_SueRecibosCabe 'SLIQ',2021,2,7,1,' ',' ',' ',' ',3,4001
--Inf_SueRecibosCuerpo 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,1
-- Inf_SueRecibosComple 'SLIQ',2019,9,1,1,' ',' ',' ',' ',1,1
DROP PROCEDURE Inf_SueRecibosCabe
GO
CREATE PROCEDURE Inf_SueRecibosCabe
(
	@pSegmento_Id VarChar(10),
	@pSegmento1N INT, 
	@pSegmento2N INT, 
	@pSegmento3N INT, 
	@pSegmento4N INT, 
	@pSegmento1C VarChar(25), 
	@pSegmento2C VarChar(25), 
	@pSegmento3C VarChar(25), 
	@pSegmento4C VarChar(25), 
	@Empresa_Id Int, 
	@Legajo Int 

)

as

select sueLiquidacion.Descripcion as DescripcionNomina , sueLiquidacion.Anio, sueLiquidacion.Mes, 
sueLiquidacion.Decena, sueLiquidacion.Quincena, sueLiquidacion.Semana, sueLiquidacion.Vez,
genEmpresas.Regimen,genEmpresas.Cuit as RFCEmpresa, genSucursalesEmpr.Localidad as LocalidadEmpr, 
genSucursalesEmpr.CodigoPostal CodigoPostalEmpr, 
genEmpresas.Calle  CalleEmpr , genEmpresas.NoExterior NoExteriorEmpr , 
genEmpresas.NoInterior NoInteriorEmpr , genEmpresas.Localidad LocalidadEmpr, 
genEmpresas.CodigoPostal CodigoPostalEmpr, 
genProvincias.Descripcion as ProvinciaEmpr , genPaises.Descripcion as PaisEmpr,
genEmpresas.Telefono  as TelefonoEmpr, genSucursalesEmpr.RegPatronal,
ISNULL(sueNominaCfdi.Fecha, Convert(char(19),sueLiquidacion.FechaFinal, 103)) as Fecha,
sueLiquidacion.FechaPago, 
suePersonal.Legajo, suePersonal.ApellidoPaterno, suePersonal.ApellidoMaterno, suePersonal.Nombres, 
genEntidades.Cuit as RFC, suePersonal.NumeroDoc as CURP,
suePersonal.FechaIngreso, ISNULL(SDI.Valor,0) AS SDI, 
ISNULL(SD.VALOR,0) AS SD, suePersonal.NroSegSocial, ' ' Departamento, 
DateDiff(ww, suePersonal.FechaIngreso,sueLiquidacion.FechaFinal) as Antig,
suePeriodicidad.CodFiscal as Periodicidad, 
suePuestos.RiesgoPuesto, suePuestos.Descripcion as Puesto, 
case when 
ISNULL((select sum(sueTerminada.Dato * sueTerminada.Signo)
	from sueConceptos , sueConceptosPropValor , sueTerminada
	where 
		sueTerminada.Concepto_Id = sueConceptos.sueConceptos and 
		sueConceptosPropValor.Concepto_Id = sueConceptos.sueConceptos and 
		sueConceptosPropValor.Propiedad = 3 and 
		sueConceptosPropValor.SiNo = 1 and 
		sueTerminada.sueLiquidacion = sueLiquidacion.sueLiquidacion and
		sueTerminada.Legajo = suePersonal.genEntidades),0) = 0 
	then 
	DateDiff(dd, sueLiquidacion.FechaInicial, sueLiquidacion.FechaFinal)+1 else
	ISNULL((select sum(sueTerminada.Dato* sueTerminada.Signo)
	from sueConceptos , sueConceptosPropValor , sueTerminada
	where 
		sueTerminada.Concepto_Id = sueConceptos.sueConceptos and 
		sueConceptosPropValor.Concepto_Id = sueConceptos.sueConceptos and 
		sueConceptosPropValor.Propiedad = 3 and 
		sueConceptosPropValor.SiNo = 1 and 
		sueTerminada.sueLiquidacion = sueLiquidacion.sueLiquidacion and
		sueTerminada.Legajo = suePersonal.genEntidades),0) end 	as DiasPagados,
TipoSdi.Descripcion as TipoSdi, TipoJornada.Descripcion as TipoJornada, 
	'PUE' MetodoPago, suePersonal.ClaveBancaria as Clabe
from sueLiquidacion INNER JOIN conAsientos on 
sueLiquidacion.sueLiquidacion = conAsientos.conAsientos
inner join genAsiSegmentos ON
genAsiSegmentos.Asiento_Id  = conAsientos.conAsientos
inner join genSegmentos ON 
genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
inner join suePersonal ON 
suePersonal.Legajo = @Legajo 
INNER JOIN suePersSucursal ON 
suePersSucursal.Legajo = suePersonal.genEntidades and 
sueLiquidacion.FechaFinal BETWEEN suePersSucursal.FechaDesde And suePersSucursal.FechaHasta
INNER JOIN genSucursalesEmpr ON 
genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
INNER JOIN genEmpresas ON
genEmpresas.genEmpresas = genAsiSegmentos.Empresa_Id
LEFT JOIN genProvincias ON
genProvincias.genProvincias = genEmpresas.Provincia_Id
LEFT JOIN genPaises ON
genPaises.genPaises = genEmpresas.Pais_Id
LEFT JOIN sueNominaCfdi ON
sueNominaCfdi.sueLiquidacion = sueLiquidacion.sueLiquidacion and 
sueNominaCfdi.Legajo = suePersonal.genEntidades and 
sueNominaCfdi.Anulada = 0 
inner join genEntidades on 
genEntidades.genEntidades = suePersonal.genEntidades
inner join sueGrupos on sueGrupos.sueGrupos = sueLiquidacion.Grupo_Id
inner join suePeriodicidad on suePeriodicidad.Periodo_Id = sueGrupos.Periodo_Id
LEFT JOIN sueLiqPersImportes SDI ON 
	SDI.Legajo = suePersonal.genEntidades and 
	SDI.Importe_Id = 2 and 
	sueLiquidacion.FechaFinal Between SDI.Fecha_Desde AND SDI.Fecha_Hasta
LEFT JOIN sueLiqPersImportes SD ON 
	SD.Legajo = suePersonal.genEntidades and 
	SD.Importe_Id = 1 and 
	sueLiquidacion.FechaFinal Between SD.Fecha_Desde AND SD.Fecha_Hasta
inner join suePersPuestos on suePersPuestos.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal Between suePersPuestos.FechaDesde AND suePersPuestos.FechaHasta
inner join suePuestos ON
suePuestos.suePuestos = suePersPuestos.Puesto_Id
inner join suePersTipoSDI on suePersTipoSDI.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal Between suePersTipoSDI.FechaDesde AND suePersTipoSDI.FechaHasta
inner join suePersTipoJornada on suePersTipoJornada.Legajo = suePersonal.genEntidades and 
	sueLiquidacion.FechaFinal Between suePersTipoJornada.FechaDesde AND suePersTipoJornada.FechaHasta
left join genEntidadesBasicasValor TipoSdi ON
	TipoSdi.Entidad_id  = 1513 and
	TipoSdi.Clave = suePersTipoSDI.TipoSDI and
	TipoSdi.Dominio_ID = 'MX'
	
left join genEntidadesBasicasValor TipoJornada ON
	TipoJornada.Entidad_id  = 1511 and
	TipoJornada.Clave = suePersTipoJornada.TipoJornada and
	TipoJornada.Dominio_ID = 'MX'


Where
	conAsientos.Anulado = 0 and 
	genSegmentos.Segmento_Id = @pSegmento_Id and 
	genAsiSegmentos.Segmento1N = @pSegmento1N AND
	genAsiSegmentos.Segmento2N = @pSegmento2N AND
	genAsiSegmentos.Segmento3N = @pSegmento3N AND
	genAsiSegmentos.Segmento4N = @pSegmento4N AND
	genAsiSegmentos.Segmento1C = @pSegmento1C AND
	genAsiSegmentos.Segmento2C = @pSegmento2C AND
	genAsiSegmentos.Segmento3C = @pSegmento3C AND
	genAsiSegmentos.Segmento4C = @pSegmento4C AND
	genAsiSegmentos.Empresa_Id = @Empresa_Id AND
	Exists(SELECT 1 from sueTerminada Where
		suePersonal.genEntidades = sueTerminada.Legajo and 
		sueTerminada.sueLiquidacion = sueLiquidacion.sueLiquidacion and 
		suePersonal.Legajo= @Legajo ) 
go

DROP PROCEDURE Inf_SueRecibosCuerpo
GO
CREATE PROCEDURE Inf_SueRecibosCuerpo
(
	@pSegmento_Id VarChar(10),
	@pSegmento1N INT, 
	@pSegmento2N INT, 
	@pSegmento3N INT, 
	@pSegmento4N INT, 
	@pSegmento1C VarChar(25), 
	@pSegmento2C VarChar(25), 
	@pSegmento3C VarChar(25), 
	@pSegmento4C VarChar(25), 
	@Empresa_Id Int, 
	@Legajo Int 

)

as

-- Cuerpo

SELECT case when sueTerminada.IMPORTE*sueTerminada.SIGNO > 0 THEN 
	ISNULL(sueConceptos.TipoOtro, sueConceptos.TipoPercepcion) else 
		sueConceptos.TipoDeduccion end as Clave, 
		sueConceptos.Concepto_Id, 	sueConceptos.Descripcion, 
			sueTerminada.Dato, sueTerminada.Dato2,
			sueTerminada.IMPORTE*sueTerminada.SIGNO as Importe, 
			case when sueTerminada.IMPORTE*sueTerminada.SIGNO > 0 THEN 
				case when sueConceptos.TipoOtro  is not null  Then 3 else 1 end else 
				2  end ColumnaRecibo, 
				Case when sueTerminada.IMPORTE*sueTerminada.SIGNO > 0 THEN 
					ISNULL(sueConceptos.TipoOtro ,sueConceptos.TipoPercepcion) 
					 when sueTerminada.IMPORTE*sueTerminada.SIGNO > 0 THEN 
					sueConceptos.TipoDeduccion  ELSE 0 END  TipoConc 
From sueConceptos inner join sueTerminada ON
sueConceptos.sueConceptos = sueTerminada.Concepto_Id
INNER JOIN genAsiSegmentos on
genAsiSegmentos.Asiento_Id = sueTerminada.sueLiquidacion 
INNER JOIN genSegmentos ON genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
INNER JOIN conAsientos ON 
conAsientos.conAsientos =sueTerminada.sueLiquidacion
INNER JOIN suePersonal ON  suePersonal.genEntidades = sueTerminada.Legajo
Where
	sueConceptos.Signo != 0 and 
	conAsientos.Anulado = 0 and 
	genSegmentos.Segmento_Id = @pSegmento_Id and 
	genAsiSegmentos.Segmento1N = @pSegmento1N AND
	genAsiSegmentos.Segmento2N = @pSegmento2N AND
	genAsiSegmentos.Segmento3N = @pSegmento3N AND
	genAsiSegmentos.Segmento4N = @pSegmento4N AND
	genAsiSegmentos.Segmento1C = @pSegmento1C AND
	genAsiSegmentos.Segmento2C = @pSegmento2C AND
	genAsiSegmentos.Segmento3C = @pSegmento3C AND
	genAsiSegmentos.Segmento4C = @pSegmento4C AND
	genAsiSegmentos.Empresa_Id = @Empresa_Id AND
	suePersonal.Legajo = @Legajo
ORDER BY 2
GO

DROP PROCEDURE Inf_SueRecibosComple
GO
CREATE PROCEDURE Inf_SueRecibosComple
(
	@pSegmento_Id VarChar(10),
	@pSegmento1N INT, 
	@pSegmento2N INT, 
	@pSegmento3N INT, 
	@pSegmento4N INT, 
	@pSegmento1C VarChar(25), 
	@pSegmento2C VarChar(25), 
	@pSegmento3C VarChar(25), 
	@pSegmento4C VarChar(25), 
	@Empresa_Id Int, 
	@Legajo Int 

)
as

-- Complemento
SELECT	sueNominaCfdi.FechaTimbrado, sueNominaCfdi.Fecha, sueNominaCfdi.NoCertificado, 
	sueNominaCfdi.noCertificadoSAT, sueNominaCfdi.RfcProvCertif, sueNominaCfdi.Folio, 
	sueNominaCfdi.UUID, sueNominaCfdi.SelloSAt, sueNominaCfdi.SelloDigital
FROM sueNominaCfdi 
INNER JOIN genAsiSegmentos on
genAsiSegmentos.Asiento_Id = sueNominaCfdi.sueLiquidacion 
INNER JOIN genSegmentos ON genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
INNER JOIN conAsientos ON 
conAsientos.conAsientos =sueNominaCfdi.sueLiquidacion
INNER JOIN suePersonal ON  suePersonal.genEntidades = sueNominaCfdi.Legajo
Where
	sueNominaCfdi.Anulada =0 and
	conAsientos.Anulado = 0 and 
	genSegmentos.Segmento_Id = @pSegmento_Id and 
	genAsiSegmentos.Segmento1N = @pSegmento1N AND
	genAsiSegmentos.Segmento2N = @pSegmento2N AND
	genAsiSegmentos.Segmento3N = @pSegmento3N AND
	genAsiSegmentos.Segmento4N = @pSegmento4N AND
	genAsiSegmentos.Segmento1C = @pSegmento1C AND
	genAsiSegmentos.Segmento2C = @pSegmento2C AND
	genAsiSegmentos.Segmento3C = @pSegmento3C AND
	genAsiSegmentos.Segmento4C = @pSegmento4C AND
	genAsiSegmentos.Empresa_Id = @Empresa_Id AND
	suePersonal.Legajo = @Legajo

go
		

	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueSubDiario.sql*/

-- Inf_sueSubDiario '20190901','20190930',0,99999,' ','zzzz',1

DROP PROCEDURE Inf_sueSubDiario
GO
CREATE PROCEDURE Inf_sueSubDiario
(
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@Empresa_Id Int
	
)

as

SELECT conAsientos.conAsientos, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) as Nomina,
		suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
			suePersonal.Nombres as Nombre,
			/* sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, */ 
			conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCta ,
			conCentro1.Centro1_Id, conCentro2.Centro2_Id,
			case when SUM(sueMovCont.Importe) > 0 then SUM(sueMovCont.Importe) else 0 end as Debe,
			case when SUM(sueMovCont.Importe) < 0 then -SUM(sueMovCont.Importe) else 0  end as Haber
		
		From sueLiquidacion INNER JOIN sueMovCont ON
			sueLiquidacion.sueLiquidacion = sueMovCont.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueMovCont.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueMovCont.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			inner join conCuentas ON conCuentas.conCuentas = sueMovCont.Cuenta_Id
			left join conCentro1 ON conCentro1.conCentro1 = sueMovCont.Centro1_Id
			left join conCentro2 ON conCentro2.conCentro2 = sueMovCont.Centro2_Id
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genAsiSegmentos.Empresa_Id = @Empresa_Id and 
				conAsientos.Fecha Between @FechaDesde and @FechaHasta
GROUP BY conAsientos.conAsientos, 
		genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N,
		suePersonal.Legajo, suePersonal.ApellidoPaterno ,suePersonal.ApellidoMaterno,
			suePersonal.Nombres , conCuentas.Cuenta_Id, conCuentas.Descripcion ,
			conCentro1.Centro1_Id, conCentro2.Centro2_Id
		ORDER BY 2,1,3,4,6,8,9

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueSubMayor.sql*/

-- Inf_sueSubMayor '20190901','20190930',0,99999,' ','zzzz',1

DROP PROCEDURE Inf_sueSubMayor
GO
CREATE PROCEDURE Inf_sueSubMayor

(
	@FechaDesde DateTime,
	@FechaHasta DateTime,
	@LegajoDesde Int,
	@LegajoHasta Int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@Empresa_Id Int
	
)

as

SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCta ,
		conCentro1.Centro1_Id, conCentro2.Centro2_Id,
		conAsientos.conAsientos, 
		dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N) as Nomina,
		suePersonal.Legajo, suePersonal.ApellidoPaterno +','+suePersonal.ApellidoMaterno+','+
			suePersonal.Nombres as Nombre,
			/* sueConceptos.Concepto_Id, sueConceptos.Descripcion as DescripcionConc, */ 
			case when SUM(sueMovCont.Importe) > 0 then SUM(sueMovCont.Importe) else 0 end as Debe,
			case when SUM(sueMovCont.Importe) < 0 then -SUM(sueMovCont.Importe) else 0  end as Haber
		
		From sueLiquidacion INNER JOIN sueMovCont ON
			sueLiquidacion.sueLiquidacion = sueMovCont.sueLiquidacion
			INNER JOIN conAsientos ON 
				conAsientos.conAsientos = sueLiquidacion.sueLiquidacion 
			inner join genAsiSegmentos ON
			genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
			inner join sueConceptos ON
			sueConceptos.sueConceptos = sueMovCont.Concepto_Id
			inner join suePersonal ON
			suePersonal.genEntidades = sueMovCont.Legajo
			Inner join suePersSucursal ON
			suePersSucursal.Legajo = suePersonal.genEntidades  and 
			sueLiquidacion.FechaFinal between suePersSucursal.FechaDesde and suePersSucursal.FechaHasta
			inner join genSucursalesEmpr ON 
			genSucursalesEmpr.genSucursalesEmpr = suePersSucursal.Sucursal
			inner join conCuentas ON conCuentas.conCuentas = sueMovCont.Cuenta_Id
			left join conCentro1 ON conCentro1.conCentro1 = sueMovCont.Centro1_Id
			left join conCentro2 ON conCentro2.conCentro2 = sueMovCont.Centro2_Id
			Where
				conAsientos.Anulado = 0 and
				suePersonal.Legajo between @LegajoDesde and @LegajoHasta and 
				genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
				genAsiSegmentos.Empresa_Id = @Empresa_Id and 
				conAsientos.Fecha Between @FechaDesde and @FechaHasta
GROUP BY conAsientos.conAsientos, 
		genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
		genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
		genAsiSegmentos.Segmento4N,
		suePersonal.Legajo, suePersonal.ApellidoPaterno ,suePersonal.ApellidoMaterno,
			suePersonal.Nombres , conCuentas.Cuenta_Id, conCuentas.Descripcion ,
			conCentro1.Centro1_Id, conCentro2.Centro2_Id
		ORDER BY 1,3,4,6,7

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_sueVacaciones.sql*/
-- EXEC Inf_sueVacaciones 2021,0,9999,1
DROP PROCEDURE Inf_sueVacaciones
GO
CREATE PROCEDURE Inf_sueVacaciones(
	@Anio Int,
	@LegajoDesde Int, 
	@LegajoHasta int, 
	@Empresa_Id Int
)
as

SELECT suePersonal.Legajo, suePersonal.ApellidoPaterno,
suePersonal.ApellidoMaterno, suePersonal.Nombres, 
suePersonal.FechaIngreso, suePersonal.FechaBaja,
ISNULL((SELECT sueVacCorresponden.Dias FROM sueVacCorresponden where
	sueVacCorresponden.Legajo = suePersonal.genEntidades and 
	sueVacCorresponden.Anio = @Anio),0)  as Corresponden,
ISNULL((SELECT sueVacCorresponden.Saldo FROM sueVacCorresponden where
	sueVacCorresponden.Legajo = suePersonal.genEntidades and 
	sueVacCorresponden.Anio = @Anio),0)  as Saldo
from suePersonal 
where
	suePersonal.Empresa_Id= @Empresa_Id and 
	suePersonal.Legajo between @LegajoDesde and @LegajoHasta
ORDER BY 1

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesAnticiposPago.sql*/
drop Procedure inf_tesAnticiposPagoPrincipal
GO
Create Procedure inf_tesAnticiposPagoPrincipal
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id =@Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

-- Principal
SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
genAsiSegmentos.Segmento4N) as SegmentoSTR,
tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, 
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor, genUsuarios.Apellido_y_Nombres as Usuario,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado,
	dbo.Segmento(tesSolSegmentos.Segmento_Id, tesSolSegmentos.Segmento1C, tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C,
	 tesSolSegmentos.Segmento1N, tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N, tesSolSegmentos.Segmento4N) as SolicitudSTR,
	 tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre as NombreSolicitante
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join genUsuarios on conAsientos.Usuario_Id=genUsuarios.genUsuarios
inner join tesSolPago on tesSolPago.tesMovimientos=tesMovimientos.tesMovimientos
left join tesSolicitud on tesSolicitud.tesSolicitud=tesSolPago.tesSolicitud
left join tesSolSegmentos on tesSolSegmentos.tesSolicitud=tesSolicitud.tesSolicitud
left join tesSolicitantes on tesSolicitud.Solicitante_Id=tesSolicitantes.genEntidades
WHERE (tesMovimientos.tesMovimientos = @ptesMovimientos)

go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesAnticiposRendicion.sql*/
drop Procedure inf_tesAnticiposRendicionPrincipal
GO
Create Procedure inf_tesAnticiposRendicionPrincipal
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id =@Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

-- Principal
SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
genAsiSegmentos.Segmento4N) as SegmentoSTR,
tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, 
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor, genUsuarios.Apellido_y_Nombres as Usuario,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado,
	dbo.Segmento(tesSolSegmentos.Segmento_Id, tesSolSegmentos.Segmento1C, tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C,
	 tesSolSegmentos.Segmento1N, tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N, tesSolSegmentos.Segmento4N) as SolicitudSTR,
	 tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre as NombreSolicitante
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join genUsuarios on conAsientos.Usuario_Id=genUsuarios.genUsuarios
inner join tesSolRendicion on tesSolRendicion.tesMovimientos=tesMovimientos.tesMovimientos
inner join tesSolicitud on tesSolicitud.tesSolicitud=tesSolRendicion.tesSolicitud
inner join tesSolSegmentos on tesSolSegmentos.tesSolicitud=tesSolicitud.tesSolicitud
inner join tesSolicitantes on tesSolicitud.Solicitante_Id=tesSolicitantes.genEntidades
WHERE (tesMovimientos.tesMovimientos = @ptesMovimientos)

go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesCheqBusqueda.sql*/
/*tesCheqTerceros C3, tesCTLink CTL, tesRengMovi Reng, tesMovimientos Mov, '+;
	'tesBancos Bco, tesIdentifica, Tesctlink ctl1
	*/

select * from tesCheqTerceros
select * from tesCTlink
select * from tesRengMovi
select * from tesBancos
select * from tesIdentifica
select * from vvenClientes
select * from venClieHabitual
select * from venCobradores
select  *from tesMovimientos
select * from tesSubTiposMov
select * from comProveedores




drop procedure inf_tesCheqBusqueda
go
create procedure inf_tesCheqBusqueda
(
@CarteraDesde varchar(5),
@CarteraHasta varchar(5),
@FechaDesde datetime,
@FechaHasta datetime,
@FechaDesde2 datetime,
@FechaHasta2 datetime,
@NumChequeDesde int,
@NumChequeHasta int,
@ClienteDesde VarChar(15),
@ClienteHasta VarChar(15),
@CobradorDesde VarChar(5),
@CobradorHasta VarChar(5),
@CuentaBancoDesde varchar(15),
@CuentaBancoHasta varchar(15),
@Proveed VarChar(15),
@BancoDesde VarChar(3),
@BancoHasta VarChar(3),
@Tipo int,
@Rechazado int,
@Empresa_Id int
)
AS
SELECT DISTINCT tesCheqTerceros.numCheque, tesIdentifica.Cartera_Id, tesIdentifica.Descripcion DescCartera,
	tesBancos.Banco_Id, tesBancos.Descripcion DescBanco, tesCheqTerceros.Clearing, 
	tesCheqTerceros.Estado_Id, tesCheqTerceros.FechaVencimiento, tesCheqTerceros.FechaAcreditacion,
	tesCheqTerceros.FechaConciliacion, tesCheqTerceros.sucBanco, tesCheqTerceros.cuentaBanco, 
	tesCheqTerceros.ClearingDias, conMovCont.Importe, conAsientos.Fecha, tesSubTiposMov.SubTipo_Id,
	ISNULL(venCob.Cobrador_Id,'') Cobrador_id, ISNULL(venCob.Nombre,'') NombreCob,
	ISNULL(venCob.Cliente_Id,'') Cliente_id, ISNULL(venCob.RazonSocial,'') RazonSocial,
	T3.numCheque NumCheque2, ISNULL(comProveedores.Proveed_Id,'') Proveed_id,  
	ISNULL(comProveedores.RazonSocial,'') RazonProv --, vtesMovimientos.
FROM tesCheqTerceros
	INNER JOIN tesCTlink ON tesCheqTerceros.tesCheqTerceros = tesCTlink.tesCheqTerceros AND
		tesCheqTerceros.SecuenciaActual = tesCTlink.Secuencia
	INNER JOIN tesRengMovi ON tesCTlink.tesMovimientos = tesRengMovi.tesMovimientos AND
		tesCTlink.conRenglon = tesRengMovi.conRenglon
	INNER JOIN conMovCont ON tesRengMovi.tesMovimientos = conMovCont.conAsientos AND
		tesRengMovi.conRenglon = conMovCont.Renglon
	INNER JOIN tesMovimientos ON tesRengMovi.tesMovimientos = tesMovimientos.tesMovimientos
	INNER JOIN tesSubTiposMov ON tesMovimientos.SubTipo_Id = tesSubTiposMov.tesSubTiposMov
	INNER JOIN conAsientos ON tesMovimientos.tesMovimientos = conAsientos.conAsientos AND
		conAsientos.Empresa_Id= @Empresa_Id
	INNER JOIN vtesMovimientos ON tesMovimientos.tesMovimientos = vtesMovimientos.tesMovimientos
	INNER JOIN tesBancos ON tesCheqTerceros.Banco_Id = tesBancos.tesBancos
	INNER JOIN tesIdentifica ON tesCheqTerceros.Cartera_Id = tesIdentifica.tesIdentifica
	INNER JOIN tesCTlink TCTL ON tesCheqTerceros.tesCheqTerceros = TCTL.tesCheqTerceros AND
		TCTL.Secuencia = 1
	INNER JOIN tesCheqTerceros T3 ON TCTL.tesCheqTerceros = T3.tesCheqTerceros
	LEFT OUTER JOIN (SELECT venClientes.Cliente_Id, venClientes.RazonSocial, venClientes.genEntidades,
		venCobradores.Cobrador_Id, venCobradores.venCobradores, venCobradores.Nombre
		FROM venClientes 
		INNER JOIN venClieHabitual ON venClientes.genEntidades = venClieHabitual.genEntidades
		INNER JOIN venCobradores ON venClieHabitual.Cobrador_Id = venCobradores.venCobradores) venCob 
		ON tesCheqTerceros.Cliente_Id = venCob.genEntidades
	LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
		comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
		comMovprov.comMovprov = tesMovimientos.tesMovimientos
WHERE conAsientos.Anulado = 0 AND conAsientos.Posteado = 1 AND
	tesIdentifica.Cartera_id BETWEEN @CarteraDesde AND @CarteraHasta AND
	(@Tipo = 1 AND tesCheqTerceros.numCheque BETWEEN @NumChequeDesde AND @NumChequeHasta AND 
	tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 2 AND conAsientos.Fecha BETWEEN @FechaDesde2 AND @FechaHasta2 AND
	tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 3 AND conAsientos.Fecha BETWEEN @FechaDesde2 AND @FechaHasta2) OR
	(@Tipo = 4 AND venCob.Cliente_Id BETWEEN @ClienteDesde AND @ClienteHasta AND 
	tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 5 AND tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 6 AND tesCheqTerceros.CuentaBanco BETWEEN @CuentaBancoDesde AND @CuentaBancoHasta AND 
	tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 7 AND comProveedores.Proveed_Id = @Proveed AND conAsientos.Fecha BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 8 AND tesBancos.Banco_Id BETWEEN @BancoDesde AND @BancoHasta AND 
	tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) OR
	(@Tipo = 9 AND venCob.Cobrador_Id BETWEEN @CobradorDesde AND @CobradorHasta AND
	tesCheqTerceros.FechaVencimiento BETWEEN @FechaDesde AND @FechaHasta) AND
	(@Rechazado = 0 OR (@Rechazado = 1 AND tesCheqTerceros.Estado_Id IN ('R','D')))
	
ORDER BY tesCheqTerceros.numCheque 
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesCheqPropImpresion.sql*/
Drop procedure inf_tesCheqPropImpresion
Go

Create procedure inf_tesCheqPropImpresion
(
@Empresa_Id int,
@Cartera_Id varChar(5),
@Chequera_Id int,
@NumChequeDesde int,
@NumChequeHasta int = Null
)
As
Select conAsientos.Fecha, tesCheqProp.FechaVencimiento, tesCheqProp.tesCheqProp, conMovCont.ImporteMonedaOriginal Importe, tesCheqProp.aLaOrden
From tesCheqProp
Inner Join tesBPlink On tesBPlink.tesCheqProp = tesCheqProp.tesCheqProp
Inner Join tesRengMovi On tesRengMovi.tesMovimientos = tesBPlink.tesMovimientos And tesRengMovi.conRenglon = tesBPlink.conRenglon
Inner Join tesIdentifica On tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
Inner Join conMovCont On conMovCont.conAsientos = tesBPlink.tesMovimientos And conMovCont.Renglon = tesBPlink.conRenglon
Inner Join conAsientos On conAsientos.conAsientos = conMovCont.conAsientos
Where tesBPlink.Secuencia = 1 And conAsientos.Empresa_Id = @Empresa_Id And
tesIdentifica.Cartera_Id = @Cartera_Id And tesCheqProp.Chequera_Id = @Chequera_Id And
tesCheqProp.numCheque Between @NumChequeDesde And IsNull(@NumChequeHasta, 999999999999)
Go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesChequesClientes.sql*/
-- Inf_tesChequesClientes ' ','ZZZ', ' ','ZZZ', '20180630',1
DROP PROCEDURE Inf_tesChequesClientes
GO

CREATE PROCEDURE Inf_tesChequesClientes
(
	@CarteraDesde VarChar(5),
	@CarteraHasta VarChar(5),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Fecha DateTime, 
	@Empresa Int
)

AS

SELECT tesIdentifica.Cartera_Id, tesIdentifica.Descripcion,
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, 
	tesCheqTerceros.numCheque, tesBancos.Banco_Id, tesCheqTerceros.FechaVencimiento,
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	tesBancos.Descripcion as DescripcionBanco, conMovCont.ImporteMonedaOriginal as Monto
FROM tesIdentifica INNER JOIN tesRengMovi ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
	inner join tesCTlink ON tesCTlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
					tesCTlink.conRenglon = tesRengMovi.conRenglon
	inner join genMonedas ON genMonedas.genMonedas = tesIdentifica.Moneda_Id 
	INNER JOIN tesCheqTerceros ON tesCheqTerceros.tesCheqTerceros = tesCTlink.tesCheqTerceros
	inner join tesBancos ON tesBancos.tesBancos = tesCheqTerceros.Banco_Id
	INNER JOIN conMovCont ON conMovCont.conAsientos = tesRengMovi.tesMovimientos and
					conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN conAsientos ON conAsientos.conAsientos = tesRengMovi.tesMovimientos
	LEFT JOIN venClientes ON venClientes.genEntidades = tesCheqTerceros.Cliente_Id
	WHERE
		tesCTlink.Estado_Id = 'C' AND 
		tesCheqTerceros.FechaVencimiento <= @Fecha AND 
		--conAsientos.Fecha <= @Fecha and   
		conAsientos.Anulado = 0 And
		tesIdentifica.Cartera_Id between @CarteraDesde and @CarteraHasta and 
		conAsientos.Empresa_Id = @Empresa AND
		ISNULL(venClientes.Cliente_Id, @ClienteDesde) between @ClienteDesde and @ClienteHasta and 
		NOT EXISTS(SELECT 1 from tesCTlink T1, conAsientos A1, tesCheqTerceros T2 WHERE
			tesCTlink.tesCheqTerceros = T1.tesCheqTerceros AND 
			tesCTlink.Secuencia < T1.Secuencia AND 
			A1.conAsientos = T1.tesMovimientos AND 
			T2.tesCheqTerceros = T1.tesCheqTerceros AND
			T2.FechaVencimiento <= @Fecha AND
			--A1.Fecha <= @Fecha And 
			A1.Anulado = 0)


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesChequesDevueltos.sql*/
-- Inf_tesChequesDevueltos ' ','ZZZ', ' ','ZZZ', '20180630',1
DROP PROCEDURE Inf_tesChequesDevueltos
GO

CREATE PROCEDURE Inf_tesChequesDevueltos
(
	@CarteraDesde VarChar(5),
	@CarteraHasta VarChar(5),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Fecha DateTime, 
	@Empresa Int
)

AS

SELECT tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, 
	tesCheqTerceros.numCheque, tesBancos.Banco_Id, tesCheqTerceros.FechaVencimiento as Fecha,
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	tesBancos.Descripcion as DescripcionBanco, conMovCont.ImporteMonedaOriginal as Monto
FROM tesIdentifica INNER JOIN tesRengMovi ON
	tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
	inner join tesCTlink ON
	tesCTlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
	tesCTlink.conRenglon = tesRengMovi.conRenglon
	inner join genMonedas ON
	genMonedas.genMonedas = tesIdentifica.Moneda_Id 
	INNER JOIN tesCheqTerceros ON
	tesCheqTerceros.tesCheqTerceros = tesCTlink.tesCheqTerceros
	inner join tesBancos ON 
	tesBancos.tesBancos = tesCheqTerceros.Banco_Id
	INNER JOIN conMovCont ON
	conMovCont.conAsientos = tesRengMovi.tesMovimientos and
	conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = tesRengMovi.tesMovimientos
	LEFT JOIN venClientes ON
	venClientes.genEntidades = tesCheqTerceros.Cliente_Id
	WHERE
		tesCTlink.Estado_Id = 'R' AND 
		conAsientos.Fecha <= @Fecha and conAsientos.Anulado = 0 And
		tesIdentifica.Cartera_Id between @CarteraDesde and @CarteraHasta and 
		conAsientos.Empresa_Id = @Empresa AND
		ISNULL(venClientes.Cliente_Id, ' ') between @ClienteDesde and @ClienteHasta and 
		NOT EXISTS(SELECT 1 from tesCTlink T1, conAsientos A1 WHERE
			tesCTlink.tesCheqTerceros = T1.tesCheqTerceros AND 
			tesCTlink.Secuencia < T1.Secuencia AND 
			A1.conAsientos = T1.tesMovimientos AND 
			A1.Fecha <= @Fecha And A1.Anulado = 0)




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesChequesEmitidos.sql*/
-- Inf_tesChequesEmitidos   ' ','ZZZZZ', '20180101','20180630',1,0,999999, 0,999999
DROP PROCEDURE Inf_tesChequesEmitidos
GO

CREATE PROCEDURE Inf_tesChequesEmitidos
(
	@BancoDesde VarChar(5),
	@BancoHasta VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa_Id INT,
	@ChequeDesde int,
	@ChequeHasta int,
	@ChequeraDesde int,
	@ChequeraHasta int
)

AS

SELECT tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	tesCheqProp.Chequera_Id,  tesCheqProp.numCheque, 
	conAsientos.Fecha,  tesCheqProp.FechaVencimiento, 
	tesCheqProp.aLaOrden, 
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	conMovCont.ImporteMonedaOriginal , conMovCont.Importe
FROM conAsientos INNER JOIN conMovCont ON 
conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN tesRengMovi ON 
tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
tesRengMovi.conRenglon = conMovCont.Renglon
INNER JOIN tesIdentifica ON
tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id 
INNER JOIN tesBPlink ON
tesBPlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
tesBPlink.conRenglon =tesRengMovi.conRenglon
INNER JOIN tesCheqProp ON
tesCheqProp.tesCheqProp =tesBPlink.tesCheqProp
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
WHERE
	tesBPlink.Secuencia = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Anulado = 0 and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and
	tesIdentifica.Cartera_Id between @BancoDesde AND @BancoHasta and
	tesCheqProp.numCheque between @ChequeDesde and @ChequeHasta and
	tesCheqProp.Chequera_Id between @ChequeraDesde and @ChequeraHasta

UNION ALL
SELECT tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	tesCheqProp.Chequera_Id,  tesCheqProp.numCheque, 
	conAsientos.Fecha,  tesCheqProp.FechaVencimiento, 
	'ANULADO', 
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	0 ImporteMonedaOriginal , 0 Importe
FROM conAsientos INNER JOIN conMovCont ON 
conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN tesRengMovi ON 
tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
tesRengMovi.conRenglon = conMovCont.Renglon
INNER JOIN tesIdentifica ON
tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id 
INNER JOIN tesBPlink ON
tesBPlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
tesBPlink.conRenglon =tesRengMovi.conRenglon
INNER JOIN tesCheqProp ON
tesCheqProp.tesCheqProp =tesBPlink.tesCheqProp
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
WHERE
	tesBPlink.Secuencia = 1 and 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Anulado = 1 and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and
	tesIdentifica.Cartera_Id between @BancoDesde AND @BancoHasta and
	tesCheqProp.numCheque between @ChequeDesde and @ChequeHasta and
	tesCheqProp.Chequera_Id between @ChequeraDesde and @ChequeraHasta

UNION ALL
SELECT tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	tesCheqProp.Chequera_Id,  tesCheqProp.numCheque, 
	tesCheqPropAnul.FechaOriginal,  tesCheqProp.FechaVencimiento, 
	'CANCELADO', 
	'' as Segmento,
	0 ImporteMonedaOriginal , 0 Importe
FROM tesCheqPropAnul 
INNER JOIN tesCheqProp ON
tesCheqProp.tesCheqProp =tesCheqPropAnul.tesCheqProp
inner join tesIdentifica on  tesIdentifica.tesIdentifica =
	tesCheqProp.Cartera_Id
WHERE
	tesCheqProp.Empresa_Id = @Empresa_Id and 
	tesCheqPropAnul.FechaOriginal between @FechaDesde and @FechaHasta and
	tesIdentifica.Cartera_Id between @BancoDesde AND @BancoHasta and
	tesCheqProp.numCheque between @ChequeDesde and @ChequeHasta and
	tesCheqProp.Chequera_Id between @ChequeraDesde and @ChequeraHasta and 
	not exists(select 1 from tesBPlink where
	tesBPlink.tesCheqProp = tesCheqProp.tesCheqProp)
	order by 1,3,4
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesCobranzas.sql*/
--inf_tesCobranzasDatos 1, 'TES',10501,0,0,0,'I','0005',' ',' '
-- inf_tesCobranzasCuerpo 1, 'TES',10502,0,0,0,'I','0005',' ',' '
--20170
DROP PROCEDURE inf_tesCobranzasDatos
GO
-- tesCobranzasDatos 1
CREATE PROCEDURE inf_tesCobranzasDatos
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


SELECT
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	genAsiSegmentos.Empresa_Id, genSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N,genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
	conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, genUsuarios.Apellido_y_Nombres as Usuario,
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente, venClieHabitual.Direccion1_Fact as Dir1Clie,venClieHabitual.NroExterior_Fact as NroExtClie,
	venClieHabitual.NroInterior_Fact as NroIntClie, venClieHabitual.Direccion2_Fact as Dir2Clie,venClieHabitual.Localidad_Fact as LocalidadClie,
	ProvCliente.Descripcion as ProvinciaClie, PaisCliente.Descripcion as PaisCliente,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join venClieHabitual on venClientes.genEntidades=venClieHabitual.genEntidades and 
		   venClieHabitual.Sucursal = venClientes.SucursalPredeter
inner join genPaises PaisCliente on venClieHabitual.Pais_Id_Fact=PaisCliente.genPaises
inner join genProvincias ProvCliente on ProvCliente.genProvincias=venClieHabitual.Provincia_Id_Fact
inner join genUsuarios on conasientos.Usuario_Id=genUsuarios.genUsuarios
WHERE (tesMovimientos = @ptesMovimientos)

go
DROP PROCEDURE inf_tesCobranzasCuerpo
GO
CREATE PROCEDURE inf_tesCobranzasCuerpo
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


SELECT tesRengMovi.tesMovimientos, tesRengMovi.conRenglon,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionIdentifica, 
	conMovCont.ImporteMonedaOriginal * Case When conMovCont.TipoMov = tesRengMovi.TipomovCont Then 1 Else -1 End ImporteOrig,
	conMovCont.Importe * Case When conMovCont.TipoMov = tesRengMovi.TipomovCont Then 1 Else -1 End Importe, 
	tesRengMovi.Cambio, genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuentas,
	conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1,
	conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2, 
	conMovCont.Tipomov, conMovCont.Clase, 
	tesTiposID.TipoCartera, tesCheqProp.tesCheqProp,  
	tesChequeras.Chequera_Id CPChequera_Id, tesCheqProp.numCheque CPnumCheque, tesChequeras.Estado_Id CPEstado_Id,
	tesChequeras.TipoChequera CPTipoChequera , tesChequeras.Desde CPChequeraDesde, tesChequeras.Hasta CPChequeraHasta, 
	tesChequeras.Proximo CPChequeraProximo,
	tesCheqProp.FechaVencimiento CPFechaVencimiento, tesCheqProp.AlaOrden CPAlaOrden, 
	tesCheqProp.CUIT CPCuit, tesCheqProp.CuentaDestino CPCuentaDestino, 
	tesBancos.Banco_Id as CPBanco_Id , tesBancos.Descripcion as  CPDescripcionBanco, 
	tesCheqProp.BancoDestinoExt CPBancoDestinoExt, 
	tesCheqTerceros.tesCheqTerceros ,tesBancosCT.Banco_Id CTBanco_Id, 
	tesBancosCT.Descripcion as  CTDescripcionBanco, 
	tesClearing.Clearing CTClearing, tesClearing.cVariable CTVariable, 
	tesCheqTerceros.ClearingDias CTClearingDias, 
	tesCheqTerceros.FechaVencimiento CTFechaVencimiento, 
	tesCheqTerceros.sucBanco CTsucBanco, tesCheqTerceros.cuentaBanco CTcuentaBanco,
	tesCheqTerceros.numCheque CTnumCheque, tesCheqTerceros.Estado_Id CTEstado_Id, 
	venClientes.Cliente_Id CTCliente_Id, venClientes.RazonSocial CTRazonSocial, 
	comMovprov.comMovprov FPAsiento_Id,  comMovprov.Fecha_CCP FPFecha_Ane, 
	comMovprov.FechaFiscal FPFechaFiscal,
	isNull(comProveedores.Proveed_Id, genEntidades.Cuit) FPCuit, genEntidades.TipoDoc FPTipoDoc, genEntidades.IdFiscal FPIdFiscal,
	isnull(comProveedores.RazonSocial, comProvAnexo.RazonSocial) FPRazonSocial,  
	isnull(comProveedores.Direccion1, comProvAnexo.Direccion1) FPDireccion1, 
	isnull(comProveedores.Direccion2, comProvAnexo.Direccion2) FPDireccion2, 
	isnull(comProveedores.Localidad, comProvAnexo.Localidad) as Localidad, 
	isnull(comProveedores.CodigoPostal, comProvAnexo.Cod_Postal) as Cod_Postal, 
	genProvincias.Provincia_Id, 
	genProvincias.Descripcion FPDescripcionPcia,
	comCondFiscal.CondFiscal_Id FPCondFiscal_Id, comCondFiscal.Descripcion as FPDescripcionCondFiscal, 
	comOrigenesFiscales.Origen_id FPOrigen_Id , comOrigenesFiscales.Descripcion as FPDescripcionOrigen,
	comMovprov.VieneDeFiscal FPVieneDeFiscal, comMovprov.XMLFiscal FPXMLFiscal, comMovProv.TipoCompFE FPTipoCompFE,
	comMovprov.ClaveFiscal FPClaveFiscal, tesRengMovicomMovProv.Renglon FPconRenglonProv, 
	'  ' as FPArchvoXml,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	tesRengMoviRetProv.Porcentaje, tesRengMoviRetProv.Exencion, tesRengMoviRetProv.BaseImponible,
	tesRengMoviRetProv.Acum, tesRengMoviRetProv.TRet, tesRengMoviRetProv.AcumTot,
	dbo.Segmento(segMovProv.Segmento_Id, segMovProv.Segmento1C, segMovProv.Segmento2C,
	segMovProv.Segmento3C, segMovProv.Segmento4C, segMovProv.Segmento1N, segMovProv.Segmento2N,
	segMovProv.Segmento3N, segMovProv.Segmento4N) FacturaRet, tesRengMoviRetProv.comMovProv,
	tesRengMoviRetClie.SucursalRet, tesRengMoviRetClie.ComprobanteRet,
	TesDeposito.FormaDePagoP as TDFormaDePagoP, TesDeposito.NumOperacion AS TDNumOperacion, 
		TesDeposito.CtaOrdenante as TDCtaOrdenante,
		TesDeposito.RfcEmisorCtaOrd as TDRfcEmisorCtaOrd, 
		TesDeposito.NomBancoOrdExt as TDNomBancoOrdExt, 
		TesDeposito.TipoCadPago as TDTipoCadPago, 
		TesDeposito.CadPago AS TDCadPago, TesDeposito.SelloPago as TDSelloPago, 
		TesDeposito.CertPago as TDCertPago
FROM tesRengMovi 
INNER JOIN tesMovimientos  ON (tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos)
INNER JOIN conMovCont  ON (conMovCont.conAsientos = tesRengMovi.tesMovimientos) AND (conMovCont.Renglon = tesRengMovi.conRenglon)
INNER JOIN tesIdentifica  ON (tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id)
INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON  conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON  conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN tesTiposID ON (tesTiposID.tesTiposID = tesIdentifica.TipoCartera)
INNER JOIN genMonedas ON genMonedas.genMonedas = conCuentas.Moneda_Id 
LEFT OUTER JOIN (tesCheqProp INNER JOIN tesBPlink ON tesBPlink.tesCheqProp = tesCheqProp.tesCheqProp
			INNER JOIN tesChequeras on tesChequeras.Chequera_Id = tesCheqProp.Chequera_Id
			left outer JOIN tesBancos ON tesBancos.tesBancos = tesCheqProp.BancoDestino) ON
				tesBPlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
				tesBPlink.conRenglon =tesRengMovi.conRenglon
LEFT OUTER JOIN (tesCheqTerceros inner join tesCTLink ON tesCTLink.tesCheqTerceros = tesCheqTerceros.tesCheqTerceros
				left outer JOIN tesBancos tesBancosCT ON tesBancosCT.tesBancos = tesCheqTerceros.Banco_Id
				INNER JOIN tesClearing ON tesClearing.Clearing = tesCheqTerceros.Clearing
				INNER JOIN venClientes ON venClientes.genEntidades = tesCheqTerceros.Cliente_Id) ON 
					tesCTLink.tesMovimientos = tesRengMovi.tesMovimientos and 
					tesCTLink.conRenglon =tesRengMovi.conRenglon 
					
LEFT OUTER JOIN ( tesRengMovicomMovProv inner join comMovprov ON
					tesRengMovicomMovProv.comMovprov = comMovprov.comMovprov 
					left join comProvAnexo ON comMovprov.Proveed_Id = comProvAnexo.genEntidades
					left join comProveedores ON comMovprov.Proveed_Id = comProveedores.genEntidades
				INNER JOIN genEntidades ON genEntidades.genEntidades = comMovprov.Proveed_Id
				INNER JOIN comCondFiscal ON comCondFiscal.comCondFiscal = comMovprov.CondFiscal_Id
				INNER JOIN comOrigenesFiscales ON comOrigenesFiscales.comOrigenesFiscales  = comMovprov.Origen_id
				INNER JOIN genProvincias ON genProvincias.genProvincias = ISNULL(comProvAnexo.Provincia_Id, comProveedores.Provincia_Id)
				INNER JOIN genAsiSegmentos AS genAsiSegmentos ON genAsiSegmentos.Asiento_Id = comMovProv.comMovProv
				INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id) ON
					tesRengMovicomMovProv.tesMovimientos = tesRengMovi.tesMovimientos AND 
					tesRengMovicomMovProv.Renglon = tesRengMovi.conRenglon
Left Join (tesRengMoviRetProv Left Join 
		(conAsientos conAsientosMovProv Inner Join genAsiSegmentos segMovProv On segMovProv.Asiento_Id = conAsientosMovProv.conAsientos)
			On conAsientosMovProv.conAsientos = tesRengMoviRetProv.comMovProv) On tesRengMoviRetProv.tesMovimientos = tesRengMovi.tesMovimientos And
							tesRengMoviRetProv.conRenglon = tesRengMovi.conRenglon
Left Join tesIdRetProv On tesIdRetProv.Cartera_Id = tesRengMovi.Cartera_Id 
Left Join tesRengMoviRetClie On tesRengMoviRetClie.tesMovimientos = tesRengMovi.tesMovimientos And
								tesRengMoviRetClie.conRenglon = tesRengMovi.conRenglon
LEFT JOIn TesDeposito ON TesDeposito.tesMovimientos = tesRengmovi.tesMovimientos and 
			TesDeposito.Renglon = tesRengmovi.conRenglon

WHERE tesRengMovi.tesMovimientos = @ptesMovimientos and 
		tesRengMovi.TipomovCont = 1
ORDER BY 2

go
DROP PROCEDURE inf_tesCobranzasAdicional
GO
-- tesCobranzasDatos 1
CREATE PROCEDURE inf_tesCobranzasAdicional
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	conAsientos.Fecha as Fecha, 
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, conAsientos.Cambio as Cambio,
	genMovCuotas.Importe, genMovCuotas.Saldo, Convert(Numeric(18,2),genMovCuotas.Saldo*conAsientos.Cambio) as SaldoOri, 
	conAsientos.conAsientos, conCuentas.Cuenta_Id, genCancMov.Importe as MontoACobrar, 
	isnull((select max(tesRengMovi.Cambio) from tesRengMovi, conMovCont conMovCont1 WHERE
		tesRengMovi.TesMovimientos =genCancMov.Asiento_Id_Ap and 
		tesRengMovi.TesMovimientos = conMovCont1.conAsientos AND 
		tesRengMovi.conRenglon  = 	conMovCont1.Renglon and 
		conMovCont.Cuenta_id =conMovCont1.Cuenta_id),1)  as CambioCobra, 
		genMovCuotas.CuotaNro, genMovCuotas.FechaVencimiento
from genAsiSegmentos INNER JOIN venMovimientos ON
genAsiSegmentos.Asiento_Id = venMovimientos.venMovimientos
INNER JOIN conAsientos ON
conAsientos.conAsientos = venMovimientos.venMovimientos
inner JOIN genMovCuotas ON
genMovCuotas.Asiento_id = conAsientos.conAsientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = conAsientos.conAsientos  AND
conMovCont.Clase =	'CLI'
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_Id
INNER JOIN genMonedas ON
genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN venSubTipoMov ON
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipomov
INNER JOIN genCancMov ON
genCancMov.Asiento_Id = conAsientos.conAsientos and 
genCancMov.CuotaNro = genMovCuotas.CuotaNro and
genCancMov.Asiento_Id_Ap = @ptesMovimientos and 
genCancMov.CuotaNro_ap = 1
UNION ALL -- PAGOS A CLIENTES
SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	conAsientos.Fecha as Fecha, 
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, conAsientos.Cambio as Cambio,
	genMovCuotas.Importe, genMovCuotas.Saldo, Convert(Numeric(18,2),genMovCuotas.Saldo*conAsientos.Cambio) as SaldoOri, 
	conAsientos.conAsientos, conCuentas.Cuenta_Id, genCancMov.Importe as MontoACobrar, 
	isnull((select max(tesRengMovi.Cambio) from tesRengMovi, conMovCont conMovCont1 WHERE
		tesRengMovi.TesMovimientos =genCancMov.Asiento_Id_Ap and 
		tesRengMovi.TesMovimientos = conMovCont1.conAsientos AND 
		tesRengMovi.conRenglon  = 	conMovCont1.Renglon and 
		conMovCont.Cuenta_id =conMovCont1.Cuenta_id),1)  as CambioCobra, 
		genMovCuotas.CuotaNro, genMovCuotas.FechaVencimiento
from genAsiSegmentos INNER JOIN venMovimientos ON
genAsiSegmentos.Asiento_Id = venMovimientos.venMovimientos
INNER JOIN conAsientos ON
conAsientos.conAsientos = venMovimientos.venMovimientos
inner JOIN genMovCuotas ON
genMovCuotas.Asiento_id = conAsientos.conAsientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = conAsientos.conAsientos  AND
conMovCont.Clase =	'CLI'
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_Id
INNER JOIN genMonedas ON
genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN venSubTipoMov ON
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipomov
INNER JOIN genCancMov ON
genCancMov.Asiento_Id_AP = conAsientos.conAsientos and 
genCancMov.CuotaNro_AP = genMovCuotas.CuotaNro and
genCancMov.Asiento_Id = @ptesMovimientos and 
genCancMov.CuotaNro = 1

go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesCobraProv.sql*/

DROP PROCEDURE inf_tesCobraProvDatos
GO
-- tesCobranzasDatos 1
CREATE PROCEDURE inf_tesCobraProvDatos
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
		genUsuarios.Apellido_y_Nombres as Usuario,
tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, 
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor,comProveedores.Direccion1, comProveedores.Direccion2,genProvincias.Descripcion as ProvinciaProv,
	genPaises.Descripcion as PaisProv,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join genUsuarios on conAsientos.Usuario_Id=genUsuarios.genUsuarios
inner join genProvincias on genProvincias.genProvincias=comProveedores.Provincia_Id
inner join genPaises on genPaises.genPaises=comProveedores.Pais
WHERE (tesMovimientos = @ptesMovimientos)

go
DROP PROCEDURE inf_tesCobraProvCuerpo
GO
CREATE PROCEDURE inf_tesCobraProvCuerpo
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
tesRengMovi.tesMovimientos, tesRengMovi.conRenglon,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionIdentifica, 
	conMovCont.ImporteMonedaOriginal as ImporteOrig, conMovCont.Importe, 
	tesRengMovi.Cambio, genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuentas,
	conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1,
	conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2, 
	conMovCont.Tipomov, conMovCont.Clase, 
	tesTiposID.TipoCartera, tesCheqProp.tesCheqProp,  
	tesChequeras.Chequera_Id CPChequera_Id, tesCheqProp.numCheque CPnumCheque, tesChequeras.Estado_Id CPEstado_Id,
	tesChequeras.TipoChequera CPTipoChequera , tesChequeras.Desde CPChequeraDesde, tesChequeras.Hasta CPChequeraHasta, 
	tesChequeras.Proximo CPChequeraProximo,
	tesCheqProp.FechaVencimiento CPFechaVencimiento, tesCheqProp.AlaOrden CPAlaOrden, 
	tesCheqProp.CUIT CPCuit, tesCheqProp.CuentaDestino CPCuentaDestino, 
	tesBancos.Banco_Id as CPBanco_Id , tesBancos.Descripcion as  CPDescripcionBanco, 
	tesCheqProp.BancoDestinoExt CPBancoDestinoExt, 
	tesCheqTerceros.tesCheqTerceros ,tesBancosCT.Banco_Id CTBanco_Id, 
	tesBancosCT.Descripcion as  CTDescripcionBanco, 
	tesClearing.Clearing CTClearing, tesClearing.cVariable CTVariable, 
	tesCheqTerceros.ClearingDias CTClearingDias, 
	tesCheqTerceros.FechaVencimiento CTFechaVencimiento, 
	tesCheqTerceros.sucBanco CTsucBanco, tesCheqTerceros.cuentaBanco CTcuentaBanco,
	tesCheqTerceros.numCheque CTnumCheque, tesCheqTerceros.Estado_Id CTEstado_Id, 
	venClientes.Cliente_Id CTCliente_Id, venClientes.RazonSocial CTRazonSocial, 
	comMovprov.comMovprov FPAsiento_Id,  comMovprov.Fecha_CCP FPFecha_Ane, 
	comMovprov.FechaFiscal FPFechaFiscal,
	isNull(comProveedores.Proveed_Id, genEntidades.Cuit) FPCuit, genEntidades.TipoDoc FPTipoDoc, genEntidades.IdFiscal FPIdFiscal,
	isnull(comProveedores.RazonSocial, comProvAnexo.RazonSocial) FPRazonSocial,  
	isnull(comProveedores.Direccion1, comProvAnexo.Direccion1) FPDireccion1, 
	isnull(comProveedores.Direccion2, comProvAnexo.Direccion2) FPDireccion2, 
	isnull(comProveedores.Localidad, comProvAnexo.Localidad) as Localidad, 
	isnull(comProveedores.CodigoPostal, comProvAnexo.Cod_Postal) as Cod_Postal, 
	genProvincias.Provincia_Id, 
	genProvincias.Descripcion FPDescripcionPcia,
	comCondFiscal.CondFiscal_Id FPCondFiscal_Id, comCondFiscal.Descripcion as FPDescripcionCondFiscal, 
	comOrigenesFiscales.Origen_id FPOrigen_Id , comOrigenesFiscales.Descripcion as FPDescripcionOrigen,
	comMovprov.VieneDeFiscal FPVieneDeFiscal, comMovprov.XMLFiscal FPXMLFiscal, comMovProv.TipoCompFE FPTipoCompFE,
	comMovprov.ClaveFiscal FPClaveFiscal, tesRengMovicomMovProv.Renglon FPconRenglonProv, 
	'  ' as FPArchvoXml,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	tesRengMoviRetProv.Porcentaje, tesRengMoviRetProv.Exencion, tesRengMoviRetProv.BaseImponible,
	tesRengMoviRetProv.Acum, tesRengMoviRetProv.TRet, tesRengMoviRetProv.AcumTot,
	dbo.Segmento(segMovProv.Segmento_Id, segMovProv.Segmento1C, segMovProv.Segmento2C,
	segMovProv.Segmento3C, segMovProv.Segmento4C, segMovProv.Segmento1N, segMovProv.Segmento2N,
	segMovProv.Segmento3N, segMovProv.Segmento4N) FacturaRet, tesRengMoviRetProv.comMovProv,
	tesRengMoviRetClie.SucursalRet, tesRengMoviRetClie.ComprobanteRet,
	TesDeposito.FormaDePagoP as TDFormaDePagoP, TesDeposito.NumOperacion AS TDNumOperacion, 
		TesDeposito.CtaOrdenante as TDCtaOrdenante,
		TesDeposito.RfcEmisorCtaOrd as TDRfcEmisorCtaOrd, 
		TesDeposito.NomBancoOrdExt as TDNomBancoOrdExt, 
		TesDeposito.TipoCadPago as TDTipoCadPago, 
		TesDeposito.CadPago AS TDCadPago, TesDeposito.SelloPago as TDSelloPago, 
		TesDeposito.CertPago as TDCertPago
FROM tesRengMovi 
INNER JOIN tesMovimientos  ON (tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos)
INNER JOIN conMovCont  ON (conMovCont.conAsientos = tesRengMovi.tesMovimientos) AND (conMovCont.Renglon = tesRengMovi.conRenglon)
INNER JOIN tesIdentifica  ON (tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id)
INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON  conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON  conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN tesTiposID ON (tesTiposID.tesTiposID = tesIdentifica.TipoCartera)
INNER JOIN genMonedas ON genMonedas.genMonedas = conCuentas.Moneda_Id 
LEFT OUTER JOIN (tesCheqProp INNER JOIN tesBPlink ON 
			tesBPlink.tesCheqProp = tesCheqProp.tesCheqProp
			INNER JOIN tesChequeras on tesChequeras.Chequera_Id = tesCheqProp.Chequera_Id
			LEFT OUTER JOIN tesBancos ON tesBancos.tesBancos = tesCheqProp.BancoDestino) ON
				tesBPlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
				tesBPlink.conRenglon =tesRengMovi.conRenglon
LEFT OUTER JOIN (tesCheqTerceros inner join tesCTLink ON tesCTLink.tesCheqTerceros = tesCheqTerceros.tesCheqTerceros
				INNER JOIN tesBancos tesBancosCT ON tesBancosCT.tesBancos = tesCheqTerceros.Banco_Id
				INNER JOIN tesClearing ON tesClearing.Clearing = tesCheqTerceros.Clearing
				INNER JOIN venClientes ON venClientes.genEntidades = tesCheqTerceros.Cliente_Id) ON 
					tesCTLink.tesMovimientos = tesRengMovi.tesMovimientos and 
					tesCTLink.conRenglon =tesRengMovi.conRenglon 
					
LEFT OUTER JOIN ( tesRengMovicomMovProv inner join comMovprov ON
					tesRengMovicomMovProv.comMovprov = comMovprov.comMovprov 
					left join comProvAnexo ON comMovprov.Proveed_Id = comProvAnexo.genEntidades
					left join comProveedores ON comMovprov.Proveed_Id = comProveedores.genEntidades
				INNER JOIN genEntidades ON genEntidades.genEntidades = comMovprov.Proveed_Id
				INNER JOIN comCondFiscal ON comCondFiscal.comCondFiscal = comMovprov.CondFiscal_Id
				INNER JOIN comOrigenesFiscales ON comOrigenesFiscales.comOrigenesFiscales  = comMovprov.Origen_id
				INNER JOIN genProvincias ON genProvincias.genProvincias = ISNULL(comProvAnexo.Provincia_Id, comProveedores.Provincia_Id)
				INNER JOIN genAsiSegmentos AS genAsiSegmentos ON genAsiSegmentos.Asiento_Id = comMovProv.comMovProv
				INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id) ON
					tesRengMovicomMovProv.tesMovimientos = tesRengMovi.tesMovimientos AND 
					tesRengMovicomMovProv.Renglon = tesRengMovi.conRenglon
Left Join (tesRengMoviRetProv Left Join 
		(conAsientos conAsientosMovProv Inner Join genAsiSegmentos segMovProv On segMovProv.Asiento_Id = conAsientosMovProv.conAsientos)
			On conAsientosMovProv.conAsientos = tesRengMoviRetProv.comMovProv) On tesRengMoviRetProv.tesMovimientos = tesRengMovi.tesMovimientos And
							tesRengMoviRetProv.conRenglon = tesRengMovi.conRenglon
Left Join tesIdRetProv On tesIdRetProv.Cartera_Id = tesRengMovi.Cartera_Id 
Left Join tesRengMoviRetClie On tesRengMoviRetClie.tesMovimientos = tesRengMovi.tesMovimientos And
								tesRengMoviRetClie.conRenglon = tesRengMovi.conRenglon
LEFT JOIn TesDeposito ON TesDeposito.tesMovimientos = tesRengmovi.tesMovimientos and 
			TesDeposito.Renglon = TesDeposito.Renglon

			
				
WHERE tesRengMovi.tesMovimientos = @ptesMovimientos and 
	conMovCont.Tipomov = 1
ORDER BY 2
go


DROP PROCEDURE inf_tesCobraProvAdicional
GO
CREATE PROCEDURE inf_tesCobraProvAdicional
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


	SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
		genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, conAsientos.Cambio as Cambio, genMovCuotas.CuotaNro, genMovCuotas.FechaVencimiento,
		genMovCuotas.Importe, genMovCuotas.Saldo, Convert(Numeric(18,2),genMovCuotas.Saldo*conAsientos.Cambio) as SaldoOri,
		conAsientos.conAsientos, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta, genCancMov.Importe ImporteHabilitado,
		isnull((select max(tesRengMovi.Cambio) from tesRengMovi, conMovCont conMovCont1 WHERE
			tesRengMovi.TesMovimientos = genCancMov.Asiento_Id_Ap and 
			tesRengMovi.TesMovimientos = conMovCont1.conAsientos AND 
			tesRengMovi.conRenglon = conMovCont1.Renglon and 
			conMovCont.Cuenta_id = conMovCont1.Cuenta_id),1)  as CambioPago,
			comMovProv.Fecha_CCP	
		
	From genAsiSegmentos 
	INNER JOIN comMovprov ON genAsiSegmentos.Asiento_Id = comMovprov.comMovprov
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovprov.comMovprov
	inner JOIN genMovCuotas ON genMovCuotas.Asiento_id = conAsientos.conAsientos
	INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos  AND
		conMovCont.Clase =	'PRO'
	INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_Id
	INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
	INNER JOIN comMovTipos ON
	comMovTipos.Tipomov = comMovprov.Tipomov
	INNER JOIN genCancMov ON genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			genCancMov.CuotaNro_Ap = genMovCuotas.CuotaNro 
		where
				genCancMov.Asiento_Id = @ptesMovimientos and 
		genCancMov.CuotaNro = 1

go


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesConcBancaria.sql*/


-- Inf_tesConcBancaria 'SBMX', '20180630', 1
DROP PROCEDURE Inf_tesConcBancaria
GO

CREATE PROCEDURE Inf_tesConcBancaria
(
	@Cartera_Id VarChar(5), 
	@FechaHasta DateTime, 
	@Empresa_Id Int
)

AS


SELECT 1 as Orden, @FechaHasta as Fecha, 
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	'Saldo_Segun_Libro_de_Banco' DescripcionSubTipo, 
	' ' as DescripcionMov,  ' ' as Segmento, 
	SUM(conMovCont.ImporteMonedaOriginal * (-2*conMovCont.TipoMov+3)) as Monto
From tesIdentifica 
INNER JOIN tesRengMovi ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conMovCont ON conMovCont.conAsientos =tesRengMovi.tesMovimientos and
	conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
WHERE
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Fecha <= @FechaHasta and 
	tesIdentifica.Cartera_Id = @Cartera_Id
GROUP BY tesIdentifica.Cartera_Id, tesIdentifica.Descripcion
UNION ALL
SELECT 2 as Orden, conAsientos.Fecha,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	'Depositos_No_Acreditados' DescripcionSubTipo, 
	tesSubTiposMov.Descripcion+' '+
	 isnull(conAsientos.Observaciones,'') as DescripcionMOV,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	-tesRengConciliac.Saldo -
	ISNULL((SELECT SUM(tesRengConcilEsp.Importe)
		From tesRengConcilEsp, tesConciliacion
		Where
		tesConciliacion.FechaConciliacion > @FechaHasta and 
		tesConciliacion.NumeroConc = tesRengConcilEsp.NumeroConc and 
		tesConciliacion.tesIdentifica =tesRengConcilEsp.tesIdentifica and
		tesRengConcilEsp.tesMovimientos = tesRengMovi.tesMovimientos and
		tesRengConcilEsp.conRenglon =tesRengMovi.conRenglon),0) as Monto
From tesIdentifica 
INNER JOIN tesRengMovi ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conMovCont ON conMovCont.conAsientos =tesRengMovi.tesMovimientos and
	conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN tesRengConciliac ON tesRengConciliac.tesMovimientos = tesRengMovi.tesMovimientos and
	tesRengConciliac.conRenglon =tesRengMovi.conRenglon
INNER JOIN tesMovimientos ON tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos 
INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov =tesMovimientos.SubTipo_Id
WHERE
	conMovCont.TipoMov = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Fecha <= @FechaHasta and 
	tesIdentifica.Cartera_Id = @Cartera_Id AND 
	tesRengConciliac.Saldo + 
	ISNULL((SELECT SUM(tesRengConcilEsp.Importe)
		from tesRengConcilEsp, tesConciliacion
		Where
		tesConciliacion.FechaConciliacion > @FechaHasta and 
		tesConciliacion.NumeroConc = tesRengConcilEsp.NumeroConc and 
		tesConciliacion.tesIdentifica =tesRengConcilEsp.tesIdentifica and
		tesRengConcilEsp.tesMovimientos = tesRengMovi.tesMovimientos and
		tesRengConcilEsp.conRenglon =tesRengMovi.conRenglon),0) <> 0

UNION ALL
SELECT 3 as Orden, conAsientos.Fecha,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	'Cheques_No_Pagados' DescripcionSubTipo, 
	tesSubTiposMov.Descripcion+' '+
	isnull(conAsientos.Observaciones,'') as DescripcionMOV,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	tesRengConciliac.Saldo +
	ISNULL((SELECT SUM(tesRengConcilEsp.Importe)
		From tesRengConcilEsp, tesConciliacion
		Where
		tesConciliacion.FechaConciliacion > @FechaHasta and 
		tesConciliacion.NumeroConc = tesRengConcilEsp.NumeroConc and 
		tesConciliacion.tesIdentifica =tesRengConcilEsp.tesIdentifica and
		tesRengConcilEsp.tesMovimientos = tesRengMovi.tesMovimientos and
		tesRengConcilEsp.conRenglon =tesRengMovi.conRenglon),0) as Monto
From tesIdentifica 
INNER JOIN tesRengMovi ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conMovCont ON conMovCont.conAsientos =tesRengMovi.tesMovimientos and
	conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN tesRengConciliac ON 
	tesRengConciliac.tesMovimientos = tesRengMovi.tesMovimientos and
	tesRengConciliac.conRenglon =tesRengMovi.conRenglon
INNER JOIN tesMovimientos ON tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos 
INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov =tesMovimientos.SubTipo_Id
WHERE
	conMovCont.TipoMov = 2 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Fecha <= @FechaHasta and 
	tesIdentifica.Cartera_Id = @Cartera_Id AND 
	tesRengConciliac.Saldo + 
	ISNULL((SELECT SUM(tesRengConcilEsp.Importe)
		From tesRengConcilEsp, tesConciliacion
		Where
		tesConciliacion.FechaConciliacion > @FechaHasta and 
		tesConciliacion.NumeroConc = tesRengConcilEsp.NumeroConc and 
		tesConciliacion.tesIdentifica =tesRengConcilEsp.tesIdentifica and
		tesRengConcilEsp.tesMovimientos = tesRengMovi.tesMovimientos and
		tesRengConcilEsp.conRenglon =tesRengMovi.conRenglon),0) <> 0

Union All
select 4, Fecha, tesIdentifica.Cartera_Id, tesIdentifica.Descripcion,'Movimientos Bancarios No Reconocidos Por La Empresa','', 
convert(varchar(10),Comprobante), -(-2*Debe_Haber+3)*Importe
from tesPartidasInCon inner join tesIdentifica on tesIdentifica=tesPartidasInCon.Cartera_Id
where YEAR(Fecha)= YEAR(@FechaHasta) and month(Fecha)=MONTH(@FechaHasta) and 
	tesIdentifica.Cartera_Id=@Cartera_Id and 
	tesPartidasInCon.Empresa_Id=@Empresa_Id
ORDER BY 1,2
	


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesConcBancariaConc.sql*/


-- Inf_tesConcBancariaConc 'BX870', '20200301', '20200331', 1
DROP PROCEDURE Inf_tesConcBancariaConc
GO

CREATE PROCEDURE Inf_tesConcBancariaConc
(
	@Cartera_Id VarChar(5), 
	@FechaDesde DateTime,
	@FechaHasta DateTime, 
	@Empresa_Id Int
)

AS


SELECT conAsientos.Fecha,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	tesSubTiposMov.Descripcion as DescripcionMOV,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	case when tesRengMovi.TipomovCont = 1 then 	tesRengConcilEsp.Importe else 0 end  Debe,
	case when tesRengMovi.TipomovCont = 2 then 	tesRengConcilEsp.Importe else 0 end  Haber,
	tesRengConcilEsp.NumeroConc, conAsientos.Observaciones, 
	ISNULL(ISNULL(venClientes.Cliente_id, comProveedores.Proveed_id),' ') as Entidad, 
	ISNULL(ISNULL(venClientes.RazonSocial, comProveedores.RazonSocial),' ') as DescripcionEntidad 
From tesIdentifica 
INNER JOIN tesRengMovi ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conAsientos ON conAsientos.conAsientos = tesRengMovi.tesMovimientos
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN tesRengConcilEsp ON tesRengConcilEsp.tesMovimientos = tesRengMovi.tesMovimientos and
					tesRengConcilEsp.conRenglon =tesRengMovi.conRenglon
INNER JOIN tesMovimientos ON tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos 
INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov =tesMovimientos.SubTipo_Id
LEFT JOIN (comMovprov INNER JOIN comProveedores ON comMovprov.Proveed_id = comProveedores.genEntidades) ON 
comMovprov.comMovprov = conASientos.conAsientos
LEFT JOIN (venMovimientos INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
venMovimientos.venMovimientos = conASientos.conAsientos
WHERE
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	tesIdentifica.Cartera_Id = @Cartera_Id 
ORDER BY 1,2
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesEstadoCuenta.sql*/
-- Inf_tesEstadoCuenta '20181201','20181231',' ','zzz', 1

DROP Procedure Inf_tesEstadoCuenta
GO
CREATE Procedure Inf_tesEstadoCuenta
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@SucursalDesde VarChar(4), 
	@SucursalHasta VarChar(4), 
	@Empresa int
)
AS

SELECT 1 TM , 'Saldos_Iniciales' as DescripcionTM, ' ' as TIPOMOV,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionCartera, 
	SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as Saldo,
	SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as SaldoBase
from conAsientos INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos 
INNER JOIN tesRengMovi ON conMovCont.conAsientos = tesRengMovi.tesMovimientos AND conMovCont.Renglon = tesRengMovi.conRenglon
INNER JOIN tesIdentifica ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN tesTiposId on tesTiposId.tesTiposId = tesIdentifica.TipoCartera
INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
Where
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	tesTiposId.Tipocartera IN( 'CP','CT','EF')  and 
	conAsientos.Anulado = 0 and
	conAsientos.Posteado = 1 and 
	conAsientos.Fecha < @FechaDesde and
	conAsientos.Empresa_Id = @Empresa
GROUP BY tesIdentifica.Cartera_Id, tesIdentifica.Descripcion 
HAVING SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) <> 0
UNION ALL

SELECT 2 TM , tesSubTiposMov.Descripcion as DescripcionTM,  tesSubTiposMov.TipoMov,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionCartera, 
	SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as Saldo,
	SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as SaldoBase
from conAsientos INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos 
INNER JOIN tesRengMovi ON conMovCont.conAsientos = tesRengMovi.tesMovimientos AND conMovCont.Renglon = tesRengMovi.conRenglon
INNER JOIN tesMovimientos ON tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos
INNER JOIN tesIdentifica ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN tesTiposId on tesTiposId.tesTiposId = tesIdentifica.TipoCartera
INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id
INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
Where
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	tesTiposId.Tipocartera NOT IN( 'RE')  and 
	conAsientos.Anulado = 0 and
	conAsientos.Posteado = 1 and 
	conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta AND 
	conAsientos.Empresa_Id = @Empresa
GROUP BY tesIdentifica.Cartera_Id, tesIdentifica.Descripcion , 
	tesSubTiposMov.Descripcion ,  tesSubTiposMov.TipoMov
UNION ALL
SELECT 3 TM , 'Saldos_Finales' as DescripcionTM, ' ' as TIPOMOV,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionCartera, 
	SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as Saldo,
	SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as SaldoBase
from conAsientos INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos 
INNER JOIN tesRengMovi ON conMovCont.conAsientos = tesRengMovi.tesMovimientos AND conMovCont.Renglon = tesRengMovi.conRenglon
INNER JOIN tesIdentifica ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN tesTiposId on tesTiposId.tesTiposId = tesIdentifica.TipoCartera
INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	Where
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	tesTiposId.Tipocartera IN( 'CP','CT','EF')  and 
	conAsientos.Anulado = 0 and
	conAsientos.Posteado = 1 and 
	conAsientos.Fecha <= @FechaHasta and
	conAsientos.Empresa_Id = @Empresa
GROUP BY tesIdentifica.Cartera_Id, tesIdentifica.Descripcion 
HAVING SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) <> 0
ORDER BY 1,3 DESC, 2
GO	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesIdentifica.sql*/
drop procedure inf_tesIdentifica
go
create procedure inf_tesIdentifica
(
@CarteraDesde varchar(5),
@CarteraHasta varchar(5),
@FechaDesde datetime,
@FechaHasta datetime,
@Empresa_Id int,
@MonedaOrig bit
)
as
set nocount on
select @FechaDesde-1 as Fecha, 'Saldo Inicial' as SegmentoSTR, tesIdentifica.Cartera_Id,
tesIdentifica.Descripcion as DescripcionCartera, 0 as conRenglon,0 as Debe,0 as Haber,
sum(case when @MonedaOrig=1 then conMovCont.ImporteMonedaOriginal else conMovCont.Importe end*(-2*conMovCont.TipoMov+3)) as Saldo,'' as Cuenta, ''as DescripcionCuenta,
''as Centro1, '' as Centro2,'' as Destinatario,'' as Usuario from tesRengMovi
inner join conMovCont on conMovCont.conAsientos=tesRengMovi.tesMovimientos 
AND conMovCont.Renglon=tesRengMovi.conRenglon
inner join tesIdentifica on tesRengMovi.Cartera_Id=tesIdentifica.tesIdentifica
inner join conAsientos on conAsientos.conAsientos=conMovCont.conAsientos
where tesIdentifica.Cartera_Id between @CarteraDesde and @CarteraHasta and 
conAsientos.Fecha<@FechaDesde and conAsientos.Empresa_Id=@Empresa_Id and conAsientos.Anulado=0
group by tesIdentifica.Cartera_Id, tesIdentifica.Descripcion
union all
select conAsientos.Fecha,
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, 
genAsiSegmentos.Segmento4C,genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
genAsiSegmentos.Segmento4N) AS SegmentoSTR,
tesIdentifica.Cartera_Id,tesIdentifica.Descripcion, tesRengMovi.conRenglon,
case when conMovCont.TipoMov=1 then (case when @MonedaOrig=1 then conMovCont.ImporteMonedaOriginal else conMovCont.Importe end) else 0 end as Debe,
case when conMovCont.TipoMov=2 then (case when @MonedaOrig=1 then conMovCont.ImporteMonedaOriginal else conMovCont.Importe end) else 0 end as Haber,
(case when @MonedaOrig=1 then conMovCont.ImporteMonedaOriginal else conMovCont.Importe end)*(-2*conMovCont.TipoMov+3) as Saldo, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta, conCentro1.Centro1_Id,conCentro2.Centro2_Id,
isnull(ISNULL(comProveedores.RazonSocial,venClientes.RazonSocial),conAsientos.Observaciones) as Destinatario,
genUsuarios.Usuario_Id
from tesMovimientos
RIGHT join tesRengMovi on tesRengMovi.tesMovimientos=tesMovimientos.tesMovimientos
inner join conAsientos on conAsientos=tesMovimientos.tesMovimientos
inner join tesIdentifica on tesIdentifica.tesIdentifica=tesRengMovi.Cartera_Id
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id=conAsientos.conAsientos
inner join conMovCont on conMovCont.conAsientos=conAsientos.conAsientos and conMovCont.Renglon=tesRengMovi.conRenglon
inner join conCuentas on conCuentas.conCuentas=conMovCont.Cuenta_Id
left join conCentro1 on conCentro1.conCentro1=conMovCont.Centro1_Id
left join conCentro2 on conCentro2.conCentro2=conMovCont.Centro2_Id
left join (comMovProv inner join comProveedores on comMovProv.Proveed_Id=comProveedores.genEntidades) on comMovProv.comMovProv=conAsientos.conAsientos
left join (venMovimientos inner join venClientes on venMovimientos.Cliente_Id= venClientes.genEntidades) on venMovimientos.venMovimientos=conAsientos.conAsientos
left join genUsuarios on genUsuarios.genUsuarios=conAsientos.conAsientos


where (conAsientos.Fecha between @FechaDesde and @FechaHasta) and
(tesIdentifica.Cartera_Id between @CarteraDesde and @CarteraHasta) and
conAsientos.Empresa_Id=@Empresa_Id and
conAsientos.Anulado=0
order by 3,1
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesIngCobranzas.sql*/
-- Inf_tesIngCobranzas ' ','ZZZ', ' ','ZZZ', ' ','ZZZ',' ','ZZZ',' ','ZZZ','20200401','20200430',1,'Z'
DROP PROCEDURE Inf_tesIngCobranzas
GO

CREATE PROCEDURE Inf_tesIngCobranzas
(
	@SucursalDesde VarChar(5),
	@SucursalHasta VarChar(5),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@RegionDesde VarChar(5),
	@RegionHasta VarChar(5),
	@ZonaDesde  VarChar(5),
	@ZonaHasta  VarChar(5),
	@CobradorDesde  VarChar(5),
	@CobradorHasta  VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa Int, 
	@AgruparPor Char(1)
)

AS


SELECT	
	CASE @AgruparPor 
	WHEN  'S' THEN genSucursalesEmpr.Sucursal
	WHEN  'C' THEN venClientes.Cliente_Id
	WHEN  'R' THEN venRegion.Region_Id
	WHEN  'Z' THEN venZona.Zona_Id
	WHEN  'O' THEN venCobradores.Cobrador_Id
	WHEN  'T' THEN venTiposClie.TipoClie_Id
	ELSE ' ' END AS Agrupador,

	CASE @AgruparPor 
	WHEN  'S' THEN genSucursalesEmpr.Descripcion
	WHEN  'C' THEN venClientes.RazonSocial
	WHEN  'R' THEN venRegion.Descripcion
	WHEN  'Z' THEN venZona.Descripcion
	WHEN  'O' THEN venCobradores.Nombre
	WHEN  'T' THEN venTiposClie.Descripcion
	ELSE ' ' END AS DescripcionAgrupador,
	
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda,	conAsientos.Fecha ,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	
	(-conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as Monto,
	(-conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as MontoBase
FROM tesMovimientos INNER JOIN venMovimientos ON
	tesMovimientos.tesMovimientos = venMovimientos.venMovimientos
	INNER JOIN conAsientos ON 
	conAsientos.conAsientos = venMovimientos.venMovimientos
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id 
	inner join tesRengMovi ON
	tesRengMovi.tesMovimientos = tesMovimientos.tesMovimientos 
	INNER JOIN conMovCont ON
	conMovCont.conAsientos = tesRengMovi.tesMovimientos and
	conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN venClientes ON
	venClientes.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN tesIdentifica ON
	tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
	INNER JOIN genSucursalesEmpr ON
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	INNER JOIN venClieHabitual ON  venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
								   venClieHabitual.Sucursal = 	venMovimientos.Sucursal
	INNER JOIN venZona ON venZona.venZona = venClieHabitual.Zona_Id
	INNER JOIN venRegion ON venRegion.venRegion = venClieHabitual.Region_Id
	INNER JOIN venTiposClie ON venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	LEFT JOIN venCobradores ON venCobradores.venCobradores = venMovimientos.Cobrador_Id
	WHERE
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		-- tesRengMovi.TipomovCont = 2 and 
		tesIdentifica.Cartera_Id IN( 'CLI','ANTCL') AND
		conAsientos.Fecha BETWEEN @FechaDesde and  @FechaHasta AND 
		genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
		conAsientos.Empresa_Id = @Empresa AND
		venClientes.Cliente_Id  between @ClienteDesde and @ClienteHasta and 
		venZona.Zona_Id Between @ZonaDesde and @ZonaHasta and
		venRegion.Region_Id Between @RegionDesde and @RegionHasta and
		venCobradores.Cobrador_Id Between @CobradorDesde and @ClienteHasta

ORDER BY 1,3,5, 6
			



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesIngCobranzasRes.sql*/
-- Inf_tesIngCobranzasRes ' ','ZZZ', ' ','ZZZ', ' ','ZZZ',' ','ZZZ',' ','ZZZ','20200401','20200430',1,'Z'
DROP PROCEDURE Inf_tesIngCobranzasRes
GO

CREATE PROCEDURE Inf_tesIngCobranzasRes
(
	@SucursalDesde VarChar(5),
	@SucursalHasta VarChar(5),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@RegionDesde VarChar(5),
	@RegionHasta VarChar(5),
	@ZonaDesde  VarChar(5),
	@ZonaHasta  VarChar(5),
	@CobradorDesde  VarChar(5),
	@CobradorHasta  VarChar(5),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa Int, 
	@AgruparPor Char(1)

)

AS



SELECT	
	CASE @AgruparPor 
	WHEN  'S' THEN genSucursalesEmpr.Sucursal
	WHEN  'C' THEN venClientes.Cliente_Id
	WHEN  'R' THEN venRegion.Region_Id
	WHEN  'Z' THEN venZona.Zona_Id
	WHEN  'O' THEN venCobradores.Cobrador_Id
	ELSE  venTiposClie.TipoClie_Id END AS Agrupador,

	CASE @AgruparPor 
	WHEN  'S' THEN genSucursalesEmpr.Descripcion
	WHEN  'C' THEN venClientes.RazonSocial
	WHEN  'R' THEN venRegion.Descripcion
	WHEN  'Z' THEN venZona.Descripcion
	WHEN  'O' THEN venCobradores.Nombre
	ELSE venTiposClie.Descripcion END AS DescripcionAgrupador,
	
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda,	
	sum((-conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3))) as Monto,
	Sum((-conMovCont.Importe*(-2*conMovCont.TipoMov+3))) as MontoBase
FROM tesMovimientos INNER JOIN venMovimientos ON
	tesMovimientos.tesMovimientos = venMovimientos.venMovimientos
	INNER JOIN conAsientos ON 
	conAsientos.conAsientos = venMovimientos.venMovimientos
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id 
	inner join tesRengMovi ON
	tesRengMovi.tesMovimientos = tesMovimientos.tesMovimientos 
	INNER JOIN conMovCont ON
	conMovCont.conAsientos = tesRengMovi.tesMovimientos and
	conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN venClientes ON
	venClientes.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN tesIdentifica ON
	tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
	INNER JOIN genSucursalesEmpr ON
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	INNER JOIN venClieHabitual ON  venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
								   venClieHabitual.Sucursal = 	venMovimientos.Sucursal
	INNER JOIN venZona ON venZona.venZona = venClieHabitual.Zona_Id
	INNER JOIN venRegion ON venRegion.venRegion = venClieHabitual.Region_Id
	INNER JOIN venTiposClie ON venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	LEFT JOIN venCobradores ON venCobradores.venCobradores = venMovimientos.Cobrador_Id
	WHERE
		-- tesRengMovi.TipomovCont = 2 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		tesIdentifica.Cartera_Id IN( 'CLI','ANTCL') AND
		conAsientos.Fecha BETWEEN @FechaDesde and  @FechaHasta AND 
		genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
		conAsientos.Empresa_Id = @Empresa AND
		venClientes.Cliente_Id  between @ClienteDesde and @ClienteHasta and 
		venZona.Zona_Id Between @ZonaDesde and @ZonaHasta and
		venRegion.Region_Id Between @RegionDesde and @RegionHasta and
		venCobradores.Cobrador_Id Between @CobradorDesde and @ClienteHasta
		GROUP BY 	CASE @AgruparPor 
	WHEN  'S' THEN genSucursalesEmpr.Sucursal
	WHEN  'C' THEN venClientes.Cliente_Id
	WHEN  'R' THEN venRegion.Region_Id
	WHEN  'Z' THEN venZona.Zona_Id
	WHEN  'O' THEN venCobradores.Cobrador_Id
	ELSE  venTiposClie.TipoClie_Id END ,

	CASE @AgruparPor 
	WHEN  'S' THEN genSucursalesEmpr.Descripcion
	WHEN  'C' THEN venClientes.RazonSocial
	WHEN  'R' THEN venRegion.Descripcion
	WHEN  'Z' THEN venZona.Descripcion
	WHEN  'O' THEN venCobradores.Nombre
	ELSE venTiposClie.Descripcion END ,
	
	genMonedas.Moneda_Id, genMonedas.Descripcion 	

ORDER BY 1,3,5, 6




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesLibroBanco.sql*/
-- Inf_tesLibroBanco 'SBMX', '20180101', '20180630', 1,1
DROP PROCEDURE Inf_tesLibroBanco
GO

CREATE PROCEDURE Inf_tesLibroBanco
(
	@Cartera_Id VarChar(5), 
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@EnMonedaBase bit,
	@Empresa_Id Int
)

AS


SELECT DateAdd(dd,-1,@FechaDesde) as Fecha, 
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	'Saldo_inicial' DescripcionSubTipo, 
	' ' as Segmento,  0 AS Cheque, DateAdd(dd,-1,@FechaDesde) FechaVencimiento, ' ' as AlaOrden,

	 ' ' as Entidad,  ' ' as RazonSocial,
	SUM(CASE WHEN @EnMonedaBase=1 THEN conMovCont.Importe ELSE conMovCont.ImporteMonedaOriginal END* (-2*conMovCont.TipoMov+3)) as Debe, 
	0 as Haber, ' ' as Concepto 
from tesIdentifica INNER JOIN tesRengMovi ON
tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conMovCont ON
conMovCont.conAsientos =tesRengMovi.tesMovimientos and
conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON
conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN conCuentas on 
conMovCont.Cuenta_Id = conCuentas.conCuentas
WHERE
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Fecha < @FechaDesde and 
	tesIdentifica.Cartera_Id = @Cartera_Id and 
	conCuentas.Tipo_Id ='BANCO'
GROUP BY tesIdentifica.Cartera_Id, tesIdentifica.Descripcion
UNION ALL
SELECT conAsientos.Fecha,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	tesSubTiposMov.Descripcion as DescripcionSubTipo,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	ISNULL(tesCheqProp.numCheque,0) AS Cheque, 
	ISNULL(tesCheqProp.FechaVencimiento,conAsientos.Fecha) as FechaVencimiento , 
	ISNULL(tesCheqProp.aLaOrden,'') AS aLaOrden, 
	isnull(comProveedores.Proveed_Id, venClientes.Cliente_id) as Entidad, 
	ISNULL(ISNULL(comProveedores.RazonSocial,venClientes.RazonSocial), conAsientos.Observaciones) as RazonSocial,
	case when conMovCont.TipoMov=1 THEN 
		CASE WHEN @EnMonedaBase=1 THEN conMovCont.Importe ELSE conMovCont.ImporteMonedaOriginal END 
			ELSE 0 END AS Debe,
	case when conMovCont.TipoMov=2 THEN 
		CASE WHEN @EnMonedaBase=1 THEN conMovCont.Importe ELSE conMovCont.ImporteMonedaOriginal END
			ELSE 0 END AS Haber, ISNULL(conAsientos.Observaciones,' ') as Concepto
from tesIdentifica INNER JOIN tesRengMovi ON
tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conMovCont ON
conMovCont.conAsientos =tesRengMovi.tesMovimientos and
conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON
conAsientos.conAsientos = conMovCont.conAsientos
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN tesMovimientos ON
tesMovimientos.tesMovimientos = conAsientos.conAsientos
INNER JOIN tesSubTiposMov ON
tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id
LEFT JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON
	comMovprov.comMovProv = tesMovimientos.tesMovimientos
LEFT JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT JOIN (tesBPlink INNER JOIN tesCheqProp ON
	tesBPlink.tesCheqProp = tesCheqProp.tesCheqProp) ON
	tesBPlink.tesMovimientos = tesRengMovi.tesMovimientos and
	tesBPlink.conRenglon =  tesRengMovi.conRenglon
INNER JOIN conCuentas on 
conMovCont.Cuenta_Id = conCuentas.conCuentas	



WHERE
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Fecha between @FechaDesde and  @FechaHasta and 
	tesIdentifica.Cartera_Id = @Cartera_Id AND 
	CASE WHEN @EnMonedaBase=1 THEN conMovCont.Importe  ELSE
	conMovCont.ImporteMonedaOriginal END <> 0 AND 
	conCuentas.Tipo_Id ='BANCO'

ORDER BY 1,2
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesMovimientosDH.sql*/
drop Procedure inf_tesMovimientosDHPrincipal
GO
Create Procedure inf_tesMovimientosDHPrincipal
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id =@Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

-- Principal
SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C, 
genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
genAsiSegmentos.Segmento4N) as SegmentoSTR,
tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, 
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor, genUsuarios.Apellido_y_Nombres as Usuario,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join genUsuarios on conAsientos.Usuario_Id=genUsuarios.genUsuarios
WHERE (tesMovimientos = @ptesMovimientos)

go

drop Procedure inf_tesMovimientosDHProve
GO
Create Procedure inf_tesMovimientosDHProve
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id =@Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

select comProveedores.Proveed_Id, comProveedores.RazonSocial, genEntidades.Cuit,
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento4N,genAsiSegmentos.Segmento4N) as SegmentoSTR, conAsientos.Fecha, Detalle, conCuentas.Cuenta_Id,
conCentro1.Centro1_Id, conCentro2.Centro2_Id, comMovDetalle.Importe from tesmovimientos


inner join tesRengMovicomMovProv on tesRengMovicomMovProv.tesMovimientos=tesMovimientos.tesMovimientos
inner join commovprov on tesRengMovicomMovProv.comMovProv=comMovProv.comMovProv
inner join commovdetalle on comMovDetalle.comMovProv=comMovProv.comMovProv
inner join comProveedores on comMovProv.Proveed_Id=comProveedores.genEntidades
inner join conCuentas on comMovDetalle.Cuenta_Id=conCuentas.conCuentas
left join conCentro1 on comMovDetalle.Centro1_Id=conCentro1.conCentro1
left join conCentro2 on conCentro2.conCentro2=comMovDetalle.Centro2_Id
inner join genEntidades on genEntidades.genEntidades=comProveedores.genEntidades
inner join conAsientos on conAsientos.conAsientos=comMovDetalle.comMovProv
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id= conAsientos.conAsientos
where tesMovimientos.tesMovimientos=@ptesMovimientos
union 
select comProveedores.Proveed_Id, comProveedores.RazonSocial, genEntidades.Cuit, 
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento4N,genAsiSegmentos.Segmento4N), conAsientos.Fecha, conCuentas.Descripcion,
conCuentas.Cuenta_Id, conCentro1.Centro1_Id, conCentro2.Centro2_Id, conMovCont.Importe from tesMovimientos
inner join tesRengMovicomMovProv on tesRengMovicomMovProv.tesMovimientos=tesMovimientos.tesMovimientos
inner join commovprov on tesRengMovicomMovProv.comMovProv=comMovProv.comMovProv
inner join comMovImpuestos on comMovImpuestos.comMovProv=comMovProv.comMovProv
inner join comProveedores on comMovProv.Proveed_Id=comProveedores.genEntidades
inner join conMovCont on conMovCont.conAsientos=comMovImpuestos.comMovProv and conMovCont.Renglon=comMovImpuestos.conRenglon
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas
left join conCentro1 on conMovCont.Centro1_Id=conCentro1.conCentro1
left join conCentro2 on conMovCont.Centro2_Id=conCentro2.conCentro2
inner join genEntidades on genEntidades.genEntidades=comProveedores.genEntidades
inner join conAsientos on conAsientos.conAsientos=conMovCont.conAsientos
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id= conAsientos.conAsientos
where tesMovimientos.tesMovimientos=@ptesMovimientos
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesMovimientosXCartera.sql*/
--tesCartera de tesRengMovi y conasientos y tesidentifica genusuarios 
--id descripcion y todos los movimientos por fecha agrupados
--inf_tesMovXCartera 'PESOS','PESOS', '20200401','20200401',' ','zzz',' ','zz',1

drop procedure inf_tesMovXCartera
go
create procedure inf_tesMovXCartera
(
@CarteraDesde varchar(5),
@CarteraHasta varchar(5),
@FechaDesde datetime,
@FechaHasta datetime, 
@Centro1Desde VarChar(8),
@Centro1Hasta VarChar(8),
@Centro2Desde VarChar(8),
@Centro2Hasta VarChar(8), 
@SucursalDesde VarChar(4),
@SucursalHasta VarChar(4),
@Empresa_Id Int
)
as

Select tesIdentifica.Cartera_Id,tesIdentifica.Descripcion, DATEADD(dd,-1, @FechaDesde) as Fecha ,
	'Saldo Inicial' as SegmentoSTR,
	case when sum(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2)))>0 then
	 sum(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3) as numeric(18,2))) else 0 end as Debito,
	case when sum(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2)))<0 then
	 -sum(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2))) else 0 end as Credito,
	sum(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3) as numeric(18,2))) as Saldo,
	SUM(cast(conMovCont.ImporteMonedaOriginal *(-2*conMovCont.TipoMov+3)as numeric(18,2))) as ImporteMonedaOriginal, 
		' ' Observaciones, ' ' Cuenta_Id,	' ' as DescripcionCuenta,
	conCentro1.Centro1_Id,conCentro1.Descripcion as DescripcionCentro1, 
	' ' Centro2_Id, ' '  as DescripcionCentro2, 'SI' as SubTipo_Id, '' as Usuario_Id
from tesIdentifica 
inner join tesRengMovi on tesRengMovi.Cartera_Id=tesIdentifica.tesIdentifica
inner join tesMovimientos on tesRengMovi.tesMovimientos=tesMovimientos.tesMovimientos
inner join conAsientos on tesMovimientos.tesMovimientos=conAsientos.conAsientos
inner join genUsuarios on conAsientos.Usuario_Id= genUsuarios.genUsuarios
inner join genAsiSegmentos on conAsientos.conAsientos=genAsiSegmentos.Asiento_Id
inner join conMovCont on conmovcont.conAsientos= conAsientos.conAsientos and conMovCont.Renglon=tesRengMovi.conRenglon
left join conCentro1 on conCentro1.conCentro1=isnull(conMovCont.Centro1_Id,1) 
left join conCentro2 on conCentro2.conCentro2=isnull(conMovCont.Centro2_Id,1)
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas
inner join tesSubTiposMov on tesMovimientos.SubTipo_Id=tesSubTiposMov.tesSubTiposMov
inner join genSucursalesEmpr on genSucursalesEmpr.genSucursalesEmpr =  conasientos.Sucursal
where 
	conAsientos.Empresa_Id = @Empresa_Id and 
	tesIdentifica.Cartera_Id between @CarteraDesde and @CarteraHasta and 
	conAsientos.Fecha < @FechaDesde  and 
	conAsientos.Anulado=0 and 
	conAsientos.Posteado=1 and 
	ISNULL(conCentro1.Centro1_Id,' ') BETWEEN @Centro1Desde and @Centro1Hasta and
	ISNULL(conCentro2.Centro2_Id,' ') BETWEEN @Centro2Desde and @Centro2Hasta  and 
	gensucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta
GROUP BY tesIdentifica.Cartera_Id,tesIdentifica.Descripcion, 
	conCentro1.Centro1_Id,conCentro1.Descripcion
HAVING SUM(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2))) <> 0
UNION ALL
Select tesIdentifica.Cartera_Id,tesIdentifica.Descripcion, conAsientos.Fecha, dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	case when (cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2)))>0 then
	 (cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2))) else 0 end as Debito,
	case when (cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2)))<0 then
	 -(cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2))) else 0 end as Credito,
	 (cast(conMovCont.Importe *(-2*conMovCont.TipoMov+3)as numeric(18,2))) as Saldo,
 cast(conMovCont.ImporteMonedaOriginal *(-2*conMovCont.TipoMov+3)as numeric(18,2)) as ImporteMonedaOriginal, conAsientos.Observaciones, conCuentas.Cuenta_Id,
  conCuentas.Descripcion as DescripcionCuenta,
conCentro1.Centro1_Id,conCentro1.Descripcion as DescripcionCentro1, conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2,
tesSubTiposMov.SubTipo_Id, genUsuarios.Usuario_Id
from tesIdentifica 
inner join tesRengMovi on tesRengMovi.Cartera_Id=tesIdentifica.tesIdentifica
inner join tesMovimientos on tesRengMovi.tesMovimientos=tesMovimientos.tesMovimientos
inner join conAsientos on tesMovimientos.tesMovimientos=conAsientos.conAsientos
inner join genUsuarios on conAsientos.Usuario_Id= genUsuarios.genUsuarios
inner join genAsiSegmentos on conAsientos.conAsientos=genAsiSegmentos.Asiento_Id
inner join conMovCont on conmovcont.conAsientos= conAsientos.conAsientos and conMovCont.Renglon=tesRengMovi.conRenglon
left join conCentro1 on conCentro1.conCentro1=conMovCont.Centro1_Id
left join conCentro2 on conCentro2.conCentro2=conMovCont.Centro2_Id
inner join conCuentas on conMovCont.Cuenta_Id=conCuentas.conCuentas
inner join tesSubTiposMov on tesSubTiposMov.tesSubTiposMov=tesMovimientos.SubTipo_Id
inner join genSucursalesEmpr on genSucursalesEmpr.genSucursalesEmpr =  conasientos.Sucursal
where 
	conAsientos.Empresa_Id = @Empresa_Id and 
	(tesIdentifica.Cartera_Id between @CarteraDesde and @CarteraHasta) and 
	(conAsientos.Fecha between @FechaDesde and @FechaHasta) and 
	conAsientos.Posteado=1 and 
	conAsientos.Anulado=0 and 
	ISNULL(conCentro1.Centro1_Id,' ') BETWEEN @Centro1Desde and @Centro1Hasta and
	ISNULL(conCentro2.Centro2_Id,' ') BETWEEN @Centro2Desde and @Centro2Hasta and 
	gensucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta
ORDER BY 1, 3, 10 
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesMovPorSubTipo.sql*/
drop Procedure Inf_tesMovporSubTipo
go
Create Procedure Inf_tesMovporSubTipo
(
@FechaDesde DateTime,
@FechaHasta DATETIME,
@SubTipoDesde varchar(3),
@SubTipoHasta varchar(3),
@Empresa_Id int
)

as
SELECT tesSubTiposmov.SubTipo_Id, tesSubTiposmov.Descripcion as DescripcionSubTipo,
conAsientos.Fecha, 
conAsientos.conAsientos ,dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as segmentostr ,tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionCartera,
case when tesRengMovi.TipomovCont=1 then Importe else 0 end as Debe,
case when tesRengMovi.TipomovCont=2 then Importe else 0 end as Haber,
case when tesRengMovi.TipomovCont=1 then ImporteMonedaOriginal else 0 end as DebeMonedaOriginal,
case when tesRengMovi.TipomovCont=2 then ImporteMonedaOriginal else 0 end as HaberMonedaOriginal,
conCuentas.Cuenta_Id, conCentro1.Centro1_Id, conCentro2.Centro2_Id, conasientos.observaciones
from conAsientos INNER JOIN genAsiSegmentos ON
conAsientos.conAsientos =genAsiSegmentos.Asiento_Id
INNER JOIN conMovCont ON
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN tesRengMovi ON
tesRengMovi.tesMovimientos = conMovCont.conASientos and
tesRengMovi.conRenglon = conMovCont.Renglon
INNER JOIN tesIdentifica ON
tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovcont.Cuenta_Id
left JOIN conCentro1 ON
conCentro1.conCentro1 = conMovcont.Centro1_Id
left JOIN conCentro2 ON
conCentro2.conCentro2 = conMovcont.Centro2_Id
inner join tesMovimientos on tesMovimientos.tesMovimientos = conAsientos.conasientos
inner join tesSubTiposmov on tesSubTiposmov.tesSubTiposmov = tesMovimientos.SubTipo_Id
where
conAsientos.Anulado = 0 and
conAsientos.Empresa_Id = @Empresa_id and
conAsientos.Fecha between @FechaDesde and @FechaHasta and
tesSubTiposMov.SubTipo_Id BETWEEN @SubTipoDesde and @SubTipoHasta
order by 1, 3, 4

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesPagosEmitidos.sql*/
-- Inf_tesPagosEmitidos ' ','ZZZ', ' ','ZZZ', '20180101','20180630',1
DROP PROCEDURE Inf_tesPagosEmitidos
GO

CREATE PROCEDURE Inf_tesPagosEmitidos
(
	@SucursalDesde VarChar(5),
	@SucursalHasta VarChar(5),
	@ProveedDesde VarChar(15),
	@ProveedHasta VarChar(15),
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@Empresa Int
)

AS

SELECT	genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion as DescripcionSuc, 
	genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda,	
	conAsientos.Fecha , tesSubTiposMov.SubTipo_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as Segmento,
	comProveedores.Proveed_Id, comProveedores.RazonSocial, 
	(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as Monto,
	(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as MontoBase
FROM tesMovimientos 
	INNER JOIN comMovProv ON tesMovimientos.tesMovimientos = comMovProv.comMovProv
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovProv.comMovProv
	inner join genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id 
	inner join tesRengMovi ON tesRengMovi.tesMovimientos = tesMovimientos.tesMovimientos 
	INNER JOIN conMovCont ON conMovCont.conAsientos = tesRengMovi.tesMovimientos and conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_Id
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN tesIdentifica ON tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
	INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id	
	WHERE
		tesIdentifica.Cartera_Id = 'PRO' AND
		conAsientos.Fecha BETWEEN @FechaDesde and  @FechaHasta AND conAsientos.Anulado = 0 And conAsientos.Posteado = 1 And
		genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
		conAsientos.Empresa_Id = @Empresa AND
		comProveedores.Proveed_Id between @ProveedDesde and @ProveedHasta
ORDER BY 1,3,5, 6
			



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesPagosProv.sql*/

DROP PROCEDURE inf_tesPagosProvDatos
GO
-- tesCobranzasDatos 1
CREATE PROCEDURE inf_tesPagosProvDatos
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
		genUsuarios.Apellido_y_Nombres as Usuario,
tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, 
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor,comProveedores.Direccion1, comProveedores.Direccion2,genProvincias.Descripcion as ProvinciaProv,
	genPaises.Descripcion as PaisProv,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join genUsuarios on conAsientos.Usuario_Id=genUsuarios.genUsuarios
inner join genProvincias on genProvincias.genProvincias=comProveedores.Provincia_Id
inner join genPaises on genPaises.genPaises=comProveedores.Pais
WHERE (tesMovimientos = @ptesMovimientos)

go
DROP PROCEDURE inf_tesPagosProvCuerpo
GO
CREATE PROCEDURE inf_tesPagosProvCuerpo
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )

SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
tesRengMovi.tesMovimientos, tesRengMovi.conRenglon,
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion as DescripcionIdentifica, 
	conMovCont.ImporteMonedaOriginal * CASE WHEN conMovCont.TipoMov = tesRengMovi.TipomovCont then 1 else -1 end  as ImporteOrig, 
	conMovCont.Importe * CASE WHEN conMovCont.TipoMov = tesRengMovi.TipomovCont then 1 else -1 end  as Importe, 
	tesRengMovi.Cambio, genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuentas,
	conCentro1.Centro1_Id, conCentro1.Descripcion as DescripcionCentro1,
	conCentro2.Centro2_Id, conCentro2.Descripcion as DescripcionCentro2, 
	conMovCont.Tipomov, conMovCont.Clase, 
	tesTiposID.TipoCartera, tesCheqProp.tesCheqProp,  
	tesChequeras.Chequera_Id CPChequera_Id, tesCheqProp.numCheque CPnumCheque, tesChequeras.Estado_Id CPEstado_Id,
	tesChequeras.TipoChequera CPTipoChequera , tesChequeras.Desde CPChequeraDesde, tesChequeras.Hasta CPChequeraHasta, 
	tesChequeras.Proximo CPChequeraProximo,
	tesCheqProp.FechaVencimiento CPFechaVencimiento, tesCheqProp.AlaOrden CPAlaOrden, 
	tesCheqProp.CUIT CPCuit, tesCheqProp.CuentaDestino CPCuentaDestino, 
	tesBancos.Banco_Id as CPBanco_Id , tesBancos.Descripcion as  CPDescripcionBanco, 
	tesCheqProp.BancoDestinoExt CPBancoDestinoExt, 
	tesCheqTerceros.tesCheqTerceros ,tesBancosCT.Banco_Id CTBanco_Id, 
	tesBancosCT.Descripcion as  CTDescripcionBanco, 
	tesClearing.Clearing CTClearing, tesClearing.cVariable CTVariable, 
	tesCheqTerceros.ClearingDias CTClearingDias, 
	tesCheqTerceros.FechaVencimiento CTFechaVencimiento, 
	tesCheqTerceros.sucBanco CTsucBanco, tesCheqTerceros.cuentaBanco CTcuentaBanco,
	tesCheqTerceros.numCheque CTnumCheque, tesCheqTerceros.Estado_Id CTEstado_Id, 
	venClientes.Cliente_Id CTCliente_Id, venClientes.RazonSocial CTRazonSocial, 
	comMovprov.comMovprov FPAsiento_Id,  comMovprov.Fecha_CCP FPFecha_Ane, 
	comMovprov.FechaFiscal FPFechaFiscal,
	isNull(comProveedores.Proveed_Id, genEntidades.Cuit) FPCuit, genEntidades.TipoDoc FPTipoDoc, genEntidades.IdFiscal FPIdFiscal,
	isnull(comProveedores.RazonSocial, comProvAnexo.RazonSocial) FPRazonSocial,  
	isnull(comProveedores.Direccion1, comProvAnexo.Direccion1) FPDireccion1, 
	isnull(comProveedores.Direccion2, comProvAnexo.Direccion2) FPDireccion2, 
	isnull(comProveedores.Localidad, comProvAnexo.Localidad) as Localidad, 
	isnull(comProveedores.CodigoPostal, comProvAnexo.Cod_Postal) as Cod_Postal, 
	genProvincias.Provincia_Id, 
	genProvincias.Descripcion FPDescripcionPcia,
	comCondFiscal.CondFiscal_Id FPCondFiscal_Id, comCondFiscal.Descripcion as FPDescripcionCondFiscal, 
	comOrigenesFiscales.Origen_id FPOrigen_Id , comOrigenesFiscales.Descripcion as FPDescripcionOrigen,
	comMovprov.VieneDeFiscal FPVieneDeFiscal, comMovprov.XMLFiscal FPXMLFiscal, comMovProv.TipoCompFE FPTipoCompFE,
	comMovprov.ClaveFiscal FPClaveFiscal, tesRengMovicomMovProv.Renglon FPconRenglonProv, 
	'  ' as FPArchvoXml,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
	tesRengMoviRetProv.Porcentaje, tesRengMoviRetProv.Exencion, tesRengMoviRetProv.BaseImponible,
	tesRengMoviRetProv.Acum, tesRengMoviRetProv.TRet, tesRengMoviRetProv.AcumTot,
	dbo.Segmento(segMovProv.Segmento_Id, segMovProv.Segmento1C, segMovProv.Segmento2C,
	segMovProv.Segmento3C, segMovProv.Segmento4C, segMovProv.Segmento1N, segMovProv.Segmento2N,
	segMovProv.Segmento3N, segMovProv.Segmento4N) FacturaRet, tesRengMoviRetProv.comMovProv,
	tesRengMoviRetClie.SucursalRet, tesRengMoviRetClie.ComprobanteRet,
	TesDeposito.FormaDePagoP as TDFormaDePagoP, TesDeposito.NumOperacion AS TDNumOperacion, 
		TesDeposito.CtaOrdenante as TDCtaOrdenante,
		TesDeposito.RfcEmisorCtaOrd as TDRfcEmisorCtaOrd, 
		TesDeposito.NomBancoOrdExt as TDNomBancoOrdExt, 
		TesDeposito.TipoCadPago as TDTipoCadPago, 
		TesDeposito.CadPago AS TDCadPago, TesDeposito.SelloPago as TDSelloPago, 
		TesDeposito.CertPago as TDCertPago
FROM tesRengMovi 
INNER JOIN tesMovimientos  ON (tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos)
Inner Join conAsientos conAsientos1 On conAsientos1.conAsientos = tesMovimientos.tesMovimientos
INNER JOIN conMovCont  ON (conMovCont.conAsientos = tesRengMovi.tesMovimientos) AND (conMovCont.Renglon = tesRengMovi.conRenglon)
INNER JOIN tesIdentifica  ON (tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id)
INNER JOIN conCuentas ON  conCuentas.conCuentas = conMovCont.Cuenta_Id
LEFT OUTER JOIN conCentro1 ON  conCentro1.conCentro1 = conMovCont.Centro1_Id
LEFT OUTER JOIN conCentro2 ON  conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN tesTiposID ON (tesTiposID.tesTiposID = tesIdentifica.TipoCartera)
INNER JOIN genMonedas ON genMonedas.genMonedas = conCuentas.Moneda_Id 
LEFT OUTER JOIN (tesCheqProp INNER JOIN tesBPlink ON 
			tesBPlink.tesCheqProp = tesCheqProp.tesCheqProp
			INNER JOIN tesChequeras on 
				tesChequeras.Chequera_Id = tesCheqProp.Chequera_Id AND 
				tesChequeras.Cartera_Id = tesCheqProp.Cartera_Id And
				tesChequeras.Empresa_Id = tesCheqProp.Empresa_Id
			LEFT OUTER JOIN tesBancos ON tesBancos.tesBancos = tesCheqProp.BancoDestino) ON
				tesBPlink.tesMovimientos = tesRengMovi.tesMovimientos AND 
				tesBPlink.conRenglon =tesRengMovi.conRenglon
LEFT OUTER JOIN (tesCheqTerceros inner join tesCTLink ON tesCTLink.tesCheqTerceros = tesCheqTerceros.tesCheqTerceros
				INNER JOIN tesBancos tesBancosCT ON tesBancosCT.tesBancos = tesCheqTerceros.Banco_Id
				INNER JOIN tesClearing ON tesClearing.Clearing = tesCheqTerceros.Clearing
				Left JOIN venClientes ON venClientes.genEntidades = tesCheqTerceros.Cliente_Id) ON 
					tesCTLink.tesMovimientos = tesRengMovi.tesMovimientos and 
					tesCTLink.conRenglon =tesRengMovi.conRenglon 
					
LEFT OUTER JOIN ( tesRengMovicomMovProv inner join comMovprov ON
					tesRengMovicomMovProv.comMovprov = comMovprov.comMovprov 
					left join comProvAnexo ON comMovprov.Proveed_Id = comProvAnexo.genEntidades
					left join comProveedores ON comMovprov.Proveed_Id = comProveedores.genEntidades
				INNER JOIN genEntidades ON genEntidades.genEntidades = comMovprov.Proveed_Id
				INNER JOIN comCondFiscal ON comCondFiscal.comCondFiscal = comMovprov.CondFiscal_Id
				INNER JOIN comOrigenesFiscales ON comOrigenesFiscales.comOrigenesFiscales  = comMovprov.Origen_id
				INNER JOIN genProvincias ON genProvincias.genProvincias = ISNULL(comProvAnexo.Provincia_Id, comProveedores.Provincia_Id)
				INNER JOIN genAsiSegmentos AS genAsiSegmentos ON genAsiSegmentos.Asiento_Id = comMovProv.comMovProv
				INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id) ON
					tesRengMovicomMovProv.tesMovimientos = tesRengMovi.tesMovimientos AND 
					tesRengMovicomMovProv.Renglon = tesRengMovi.conRenglon
Left Join (tesRengMoviRetProv Left Join 
		(conAsientos conAsientosMovProv Inner Join genAsiSegmentos segMovProv On segMovProv.Asiento_Id = conAsientosMovProv.conAsientos)
			On conAsientosMovProv.conAsientos = tesRengMoviRetProv.comMovProv) On tesRengMoviRetProv.tesMovimientos = tesRengMovi.tesMovimientos And
							tesRengMoviRetProv.conRenglon = tesRengMovi.conRenglon
Left Join tesIdRetProv On tesIdRetProv.Cartera_Id = tesRengMovi.Cartera_Id 
Left Join tesRengMoviRetClie On tesRengMoviRetClie.tesMovimientos = tesRengMovi.tesMovimientos And
								tesRengMoviRetClie.conRenglon = tesRengMovi.conRenglon
LEFT JOIn TesDeposito ON TesDeposito.tesMovimientos = tesRengmovi.tesMovimientos and 
			TesDeposito.Renglon = TesDeposito.Renglon

			
				
WHERE tesRengMovi.tesMovimientos = @ptesMovimientos and 
	tesRengMovi.TipomovCont = 2 And conAsientos1.Empresa_Id = @Empresa_Id
ORDER BY 2
go


DROP PROCEDURE inf_tesPagosProvAdicional
GO
CREATE PROCEDURE inf_tesPagosProvAdicional
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)

)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


	SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
		genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, conAsientos.Cambio as Cambio, genMovCuotas.CuotaNro, genMovCuotas.FechaVencimiento,
		genMovCuotas.Importe, genMovCuotas.Saldo, Convert(Numeric(18,2),genMovCuotas.Saldo*conAsientos.Cambio) as SaldoOri,
		conAsientos.conAsientos, conCuentas.Cuenta_Id, conCuentas.Descripcion as DescripcionCuenta, IsNull(comPagosHabilitados.ImporteHabilitado, genCancMov.Importe) ImporteHabilitado,
		isnull((select max(tesRengMovi.Cambio) from tesRengMovi, conMovCont conMovCont1 WHERE
			tesRengMovi.TesMovimientos = genCancMov.Asiento_Id_Ap and 
			tesRengMovi.TesMovimientos = conMovCont1.conAsientos AND 
			tesRengMovi.conRenglon = conMovCont1.Renglon and 
			conMovCont.Cuenta_id = conMovCont1.Cuenta_id),1)  as CambioPago,
		IsNull(comPagosHabilitados.Importe1, 0) Importe1, IsNull(comPagosHabilitados.Importe2, 0) Importe2, 
		IsNull(comPagosHabilitados.Importe3, 0) Importe3, IsNull(comPagosHabilitados.FechaHabilitacion, conAsientos.Fecha) FechaHabilitacion,
		IsNull(comPagosHabilitados.Secuencia, 1) Secuencia, comMovProv.Fecha_CCP
	From genAsiSegmentos 
	INNER JOIN comMovprov ON genAsiSegmentos.Asiento_Id = comMovprov.comMovprov
	INNER JOIN conAsientos ON conAsientos.conAsientos = comMovprov.comMovprov
	inner JOIN genMovCuotas ON genMovCuotas.Asiento_id = conAsientos.conAsientos
	INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos  AND
		conMovCont.Clase =	'PRO'
	INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_Id
	INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
	INNER JOIN comMovTipos ON
	comMovTipos.Tipomov = comMovprov.Tipomov
	INNER JOIN genCancMov ON genCancMov.Asiento_Id_ap = conAsientos.conAsientos and 
		genCancMov.CuotaNro_Ap = genMovCuotas.CuotaNro and
		genCancMov.Asiento_Id = @ptesMovimientos and 
		genCancMov.CuotaNro = 1
	Left Join comPagosHabilitados On comPagosHabilitados.tesMovimientos = conAsientos.conAsientos And
										comPagosHabilitados.comMovProv = genCancMov.Asiento_Id

UNION
SELECT 'Anticipo' as SegmentoSTR, genMonedas.Moneda_Id, genMonedas.Descripcion as DescripcionMoneda, tesRengMovi.Cambio, 0 as CuotaNro, conAsientos.Fecha as FechaVencimiento, conMovCont.Importe, 0 as Saldo, 
	 0 as SaldoOri, conAsientos.conAsientos, 
	 conCuentas.Cuenta_id as Cuenta_Id,conCuentas.Descripcion as DescripcionCuenta, conMovCont.ImporteMonedaOriginal as ImporteHabilitado,
	 0 as CambioPago, 0 as Importe1, 0 as Importe2, 0 as Importe3, conAsientos.Fecha as FechaHabilitacion,0 as Secuencia, conAsientos.Fecha as Fecha_CCP

		
From tesRengMovi 
INNER JOIN conAsientos ON conAsientos.conAsientos = tesRengMovi.tesMovimientos 
INNER JOIN conMovCont ON conMovCont.conAsientos = tesRengMovi.tesMovimientos and 
	conMovCont.Renglon = tesRengMovi.conRenglon and 
	conMovCont.Clase = 'ANTPR'
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_Id
INNER JOIN genMonedas ON genMonedas.genMonedas = conCuentas.Moneda_Id
Where 
tesRengMovi.TesMovimientos =  @pTesMovimientos



-- AntProveedores
-- Anticipos a Proveedores



-- TIPOS DE CAMBIO
go







/*
exec inf_tesPagosProvDatos @Empresa_Id=1,@Segmento_Id='TES',@Segmento1N=2,@Segmento2N=0,@Segmento3N=0,@Segmento4N=0,@Segmento1C='E',@Segmento2C='0001',@Segmento3C='',@Segmento4C=''
exec inf_tesPagosProvCuerpo @Empresa_Id=1,@Segmento_Id='TES',@Segmento1N=2,@Segmento2N=0,@Segmento3N=0,@Segmento4N=0,@Segmento1C='E',@Segmento2C='0001',@Segmento3C='',@Segmento4C=''
exec inf_tesPagosProvAdicional @Empresa_Id=1,@Segmento_Id='TES',@Segmento1N=2,@Segmento2N=0,@Segmento3N=0,@Segmento4N=0,@Segmento1C='E',@Segmento2C='0001',@Segmento3C='',@Segmento4C=''
*/

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesPagosProvDatos.sql*/
-- tesCobranzasDatos 1
Drop PROCEDURE inf_tesPagosProvDatos
Go
Create PROCEDURE inf_tesPagosProvDatos
(
	@Empresa_Id int, 
	@Segmento_Id VarChar(10),
	@Segmento1N Int,
	@Segmento2N Int,
	@Segmento3N Int,
	@Segmento4N Int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
)
AS
SET NOCOUNT ON 

Declare @ptesMovimientos as BigInt
SET @ptesMovimientos = (Select tesMovimientos.tesMovimientos from 
	tesMovimientos INNER JOIN genAsiSegmentos ON
	tesMovimientos.tesMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	genAsiSegmentos.Empresa_Id = @Empresa_id and 
	genAsiSegmentos.Segmento1N = @Segmento1N and 
	genAsiSegmentos.Segmento2N = @Segmento2N and 
	genAsiSegmentos.Segmento3N = @Segmento3N and 
	genAsiSegmentos.Segmento4N = @Segmento4N and 
	genAsiSegmentos.Segmento1C = @Segmento1C and 
	genAsiSegmentos.Segmento2C = @Segmento2C and 
	genAsiSegmentos.Segmento3C = @Segmento3C and 
	genAsiSegmentos.Segmento4C = @Segmento4C )


SELECT dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
		genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoSTR,
		genUsuarios.Apellido_y_Nombres as Usuario,
tesMovimientos.tesMovimientos, tesSubTiposMov.Tipomov, 
conAsientos.Fecha,conAsientos.FechaRegistro, genMonedas.Moneda_Id, 
	genMonedas.Descripcion as DescrpcionMoneda,  conAsientos.Cambio, 
	conAsientos.CambioMonedaOriginal, conAsientos.Anulado, 
	conAsientos.Observaciones, conAsientos.Posteado,
	disFormularios.Formulario_Id, disFormularios.Descripcion as DescripcionFormulario,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSubTiposMov, 
	tesMovimientos.Fecha_Real, 
	venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente,genEntidadesclie.Cuit CuitClie,
	comProveedores.Proveed_Id, comProveedores.RazonSocial as RazonSocialProveedor,comProveedores.Direccion1, comProveedores.Direccion2,genProvincias.Descripcion as ProvinciaProv,
	genPaises.Descripcion as PaisProv,genEntidadesProv.Cuit CuitProv,
	Convert(Numeric(18,2), 0) as TotalDebe,
	Convert(Numeric(18,2), 0) as TotalHaber,
	Convert(Numeric(18,2), 0) as TotalHabilitado
FROM tesMovimientos 
INNER JOIN conAsientos  ON (conAsientos.conAsientos = tesMovimientos.tesMovimientos)
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
INNER JOIN tesSubTiposMov  ON (tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id)
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
INNER JOIN disFormularios ON  disFormularios.disFormularios = conAsientos.Formulario_Id
LEFT OUTER JOIN (venMovimientos INNER JOIN venClientes ON
	venMovimientos.Cliente_Id = venClientes.genEntidades) ON 
	venMovimientos.venMovimientos = tesMovimientos.tesMovimientos
LEFT OUTER JOIN (comMovprov INNER JOIN comProveedores ON
	comMovprov.Proveed_Id = comProveedores.genEntidades) ON 
	comMovprov.comMovprov = tesMovimientos.tesMovimientos
inner join genUsuarios on conAsientos.Usuario_Id=genUsuarios.genUsuarios
inner join genProvincias on genProvincias.genProvincias=comProveedores.Provincia_Id
inner join genPaises on genPaises.genPaises=comProveedores.Pais
LEFT OUTER JOIN genEntidades genEntidadesProv on genEntidadesProv.genEntidades = comProveedores.genEntidades
LEFT OUTER JOIN genEntidades genEntidadesClie on genEntidadesClie.genEntidades = venClientes.genEntidades
WHERE (tesMovimientos = @ptesMovimientos)


Go



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_tesRendicionCaja.sql*/
-- INF_tesRendicionCaja '20180601','0001',' ', 1
DROP PROCEDURE INF_tesRendicionCaja
GO

CREATE PROCEDURE INF_tesRendicionCaja
(
	@Fecha DateTime, 
	@Sucursal VarChar(25), 
	@Cajero VarChar(25),
	@Empresa_Id Int
)

AS


-- Saldo Inicial


SELECT tesTiposId.Descripcion AS DescrcionTP, 
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	genMonedas.Moneda_Id,
	SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as MontoOriginal,
	SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as Monto
FROM 
tesIdentifica INNER JOIN tesTiposId ON
tesIdentifica.TipoCartera = tesTiposId.tesTiposId
inner join tesRengMovi ON
tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
inner join tesMovimientos ON 
tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = tesRengMovi.tesMovimientos and 
conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON
conAsientos.conAsientos = tesMovimientos.tesMovimientos
INNER JOIN genMonedas ON
genMonedas.genMonedas = tesIdentifica.Moneda_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = conAsientos.Usuario_Id
INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr =conAsientos.Sucursal
WHERE
tesTiposId.TipoCartera in ('CP','EF','CT','CA') and 
conAsientos.Empresa_Id = @Empresa_Id and 
conAsientos.Fecha < @Fecha and
genSucursalesEmpr.Sucursal = @Sucursal and 
conAsientos.Anulado = 0 and
genUsuarios.Usuario_Id = CASE WHEN @Cajero=' ' THEN genUsuarios.Usuario_Id ELSE @Cajero END
group by tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	genMonedas.Moneda_Id, tesTiposId.Descripcion
order by 1,2

GO

DROP PROCEDURE INF_tesRendicionCajaMov
GO

CREATE PROCEDURE INF_tesRendicionCajaMov
(
	@Fecha DateTime, 
	@Sucursal VarChar(25), 
	@Cajero VarChar(25),
	@Empresa_Id Int
)

AS

-- Movimientos del Dia



SELECT tesTiposmov.Tipomov,  tesTiposmov.Descripcion as DescripcionTM,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion as DescripcionSTM, 	
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, genMonedas.Moneda_Id, 
	SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as MontoOriginal,
	SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as Monto
FROM 
tesIdentifica INNER JOIN tesTiposId ON
tesIdentifica.TipoCartera = tesTiposId.tesTiposId
inner join tesRengMovi ON
tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
inner join tesMovimientos ON 
tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = tesRengMovi.tesMovimientos and 
conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON
conAsientos.conAsientos = tesMovimientos.tesMovimientos
INNER JOIN genMonedas ON
genMonedas.genMonedas = tesIdentifica.Moneda_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = conAsientos.Usuario_Id
INNER JOIN tesSubTiposMov ON
tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id
INNER JOIN tesTiposmov ON
tesTiposmov.Tipomov = tesSubTiposMov.TipoMov
INNER JOIN genSucursalesEmpr ON 
genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
WHERE
tesTiposId.TipoCartera in ('CP','EF','CT','CA') and 
conAsientos.Empresa_Id = @Empresa_Id and 
conAsientos.Fecha = @Fecha and
conAsientos.Anulado = 0 and
genSucursalesEmpr.Sucursal = @Sucursal and 
genUsuarios.Usuario_Id = CASE WHEN @Cajero=' ' THEN genUsuarios.Usuario_Id ELSE @Cajero END
group by genMonedas.Moneda_Id, tesTiposmov.Tipomov,  tesTiposmov.Descripcion ,
	tesSubTiposMov.SubTipo_Id, tesSubTiposMov.Descripcion, 
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion
order by 1,3,5

go

DROP PROCEDURE INF_tesRendicionCajaSF
GO

CREATE PROCEDURE INF_tesRendicionCajaSF
(
	@Fecha DateTime, 
	@Sucursal VarChar(25), 
	@Cajero VarChar(25),
	@Empresa_Id Int
)

AS

-- Saldo Final


SELECT tesTiposId.Descripcion AS DescrcionTP, 
	tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	genMonedas.Moneda_Id,
	SUM(conMovCont.ImporteMonedaOriginal*(-2*conMovCont.TipoMov+3)) as MontoOriginal,
	SUM(conMovCont.Importe*(-2*conMovCont.TipoMov+3)) as Monto
FROM 
tesIdentifica INNER JOIN tesTiposId ON
tesIdentifica.TipoCartera = tesTiposId.tesTiposId
inner join tesRengMovi ON
tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
inner join tesMovimientos ON 
tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos
INNER JOIN conMovCont ON
conMovCont.conAsientos = tesRengMovi.tesMovimientos and 
conMovCont.Renglon =tesRengMovi.conRenglon
INNER JOIN conAsientos ON
conAsientos.conAsientos = tesMovimientos.tesMovimientos
INNER JOIN genMonedas ON
genMonedas.genMonedas = tesIdentifica.Moneda_Id
INNER JOIN genUsuarios ON
genUsuarios.genUsuarios = conAsientos.Usuario_Id
INNER JOIN genSucursalesEmpr ON 
genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
WHERE
genSucursalesEmpr.Sucursal = @Sucursal and 
tesTiposId.TipoCartera in ('CP','EF','CT','CA') and 
conAsientos.Empresa_Id = @Empresa_Id and 
conAsientos.Fecha <= @Fecha and
conAsientos.Anulado = 0 and
conAsientos.Posteado = 1 and 
genUsuarios.Usuario_Id = CASE WHEN @Cajero=' ' THEN genUsuarios.Usuario_Id ELSE @Cajero END
group by tesIdentifica.Cartera_Id, tesIdentifica.Descripcion, 
	genMonedas.Moneda_Id, tesTiposId.Descripcion
order by 1,2

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesRendNoPost.sql*/
-- inf_tesRendNoPost 1
DROP PROCEDURE inf_tesRendNoPost
GO
CREATE PROCEDURE inf_tesRendNoPost(
	@Empresa_Id INT
)
AS

select dbo.Segmento(genAsiSegmentos.Segmento_Id,	
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) Comprobante,
	dbo.Segmento(tesSolSegmentos.Segmento_Id,	
	tesSolSegmentos.Segmento1C,tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C,
	tesSolSegmentos.Segmento1N,tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N, tesSolSegmentos.Segmento4N) Solicitud, 
	tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre, 
	dbo.Segmento(genAsiSegmentosA.Segmento_Id,	
	genAsiSegmentosA.Segmento1C,genAsiSegmentosA.Segmento2C, genAsiSegmentosA.Segmento3C, genAsiSegmentosA.Segmento4C,
	genAsiSegmentosA.Segmento1N,genAsiSegmentosA.Segmento2N, genAsiSegmentosA.Segmento3N, genAsiSegmentosA.Segmento4N) Anticipo, 
	tesSolicitud.Monto as MontoSolicitado, 
	isnull((select SUM(conMovCont1.Importe) 
		From conMovCont conMovCont1 inner join conAsientos conAsientos1 on
			conMovCont1.conAsientos = conAsientos1.conAsientos 
			INNER JOIN tesSolRendicion tesSolRendicion1 on 
			tesSolRendicion1.tesMovimientos = conAsientos1.conAsientos AND 
			tesSolRendicion1.tesSolicitud = tesSolicitud.tesSolicitud
			Where
			conAsientos1.Posteado = 1 and 
			conAsientos1.Anulado = 0),0) as YaRendido,
	SUM(conMovCont.Importe) as MontoRendido, conAsientos.Fecha as FechaRendicion, 
	conAsientos.FechaRegistro 
FROM genAsiSegmentos INNER JOIN conAsientos ON 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN tesSolRendicion on
	tesSolRendicion.tesMovimientos = conAsientos.conAsientos
	INNER JOIN tesSolicitud ON
	tesSolicitud.tesSolicitud = tesSolRendicion.tesSolicitud
	INNER JOIN tesSolSegmentos ON
	tesSolSegmentos.tesSolicitud = tesSolicitud.tesSolicitud
	INNER JOIN tesSolicitantes ON
	tesSolicitantes.genEntidades = tesSolicitud.Solicitante_Id
	INNER JOIN tesSolPago ON 
	tesSolPago.tesSolicitud = tesSolicitud.tesSolicitud
	INNER JOIN conAsientos conAsientosA ON 
	conAsientosA.conAsientos = tesSolPago.tesMovimientos and 
	conAsientosA.Anulado = 0
	INNER JOIN genAsiSegmentos genAsiSegmentosA ON 
	genAsiSegmentosA.Asiento_Id = conAsientosA.conAsientos
	INNER JOIN conMovCont ON
	conMovCont.conAsientos = conAsientos.conAsientos and 
	conMovCont.Tipomov = 1
	WHERE
		conAsientos.Posteado = 0 and 
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa_Id
GROUP BY genAsiSegmentos.Segmento_Id,	
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N,
	tesSolSegmentos.Segmento_Id,	
	tesSolSegmentos.Segmento1C,tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C,
	tesSolSegmentos.Segmento1N,tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N, tesSolSegmentos.Segmento4N, 
	tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre, 
	genAsiSegmentosA.Segmento_Id, genAsiSegmentosA.Segmento1C,genAsiSegmentosA.Segmento2C, genAsiSegmentosA.Segmento3C, genAsiSegmentosA.Segmento4C,
	genAsiSegmentosA.Segmento1N,genAsiSegmentosA.Segmento2N, genAsiSegmentosA.Segmento3N, genAsiSegmentosA.Segmento4N, 
	tesSolicitud.Monto, conAsientos.Fecha, conAsientos.FechaRegistro, tesSolicitud.tesSolicitud
order by 1
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_tesRetencion1.sql*/
Drop procedure inf_tesRetencion1
GO
Create procedure inf_tesRetencion1
(
@tesMovimientos bigint,
@conRenglon int
)
As
Select dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) OP, conAsientos.Fecha,
dbo.Segmento(tesRetProvSegmento.Segmento_Id, tesRetProvSegmento.Segmento1C, tesRetProvSegmento.Segmento2C, tesRetProvSegmento.Segmento3C, tesRetProvSegmento.Segmento4C,
	tesRetProvSegmento.Segmento1N, tesRetProvSegmento.Segmento2N, tesRetProvSegmento.Segmento3N, tesRetProvSegmento.Segmento4N) RetNro,
tesIdRetProv.Concepto, tesIdentifica.Descripcion DescripcionCartera,
comProveedores.Proveed_Id, comProveedores.RazonSocial, comProveedores.Direccion1, comProveedores.Direccion2, comProveedores.Localidad,
comCondFiscal.CondFiscal_Id, comCondFiscal.Descripcion DescripcionCondFiscal, comProveedores.IBrutos, genEntidades.Cuit, comProveedores.Ganancias,
comProveedores.IBrutos,
Stuff((
Select '' + a From (
Select ', ' + dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) a
From comPagosHabilitados
Inner Join genAsiSegmentos On genAsiSegmentos.Asiento_Id = comPagosHabilitados.comMovProv
Where comPagosHabilitados.tesMovimientos = tesMovimientos.tesMovimientos
Union All
Select ', Anticipo' a From comPagosAnticipo
Where comPagosAnticipo.tesMovimientos = tesMovimientos.tesMovimientos
) b
For xml Path ('')), 1,2,'') Comprobantes,
tesRengMoviRetProv.BaseImponible, tesRengMoviRetProv.Porcentaje, conMovCont.Importe
From tesMovimientos
Inner Join comMovProv On comMovProv.comMovProv = tesMovimientos.tesMovimientos
Inner Join conAsientos On conAsientos.conAsientos = tesMovimientos.tesMovimientos
Inner Join genAsiSegmentos On genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
Inner Join tesRengMoviRetProv On tesRengMoviRetProv.tesMovimientos = tesMovimientos.tesMovimientos
Inner Join tesRengmovi On tesRengmovi.tesMovimientos = tesRengMoviRetProv.tesMovimientos And tesRengmovi.conRenglon = tesRengMoviRetProv.conRenglon
Inner Join conMovCont On conMovCont.conAsientos = tesMovimientos.tesMovimientos And conMovCont.Renglon = tesRengMoviRetProv.conRenglon
Inner Join tesIdentifica On tesIdentifica.tesIdentifica = tesRengMovi.Cartera_Id
Inner Join tesIdRetProv On tesIdRetProv.Cartera_Id = tesIdentifica.tesIdentifica
Inner Join tesRetProvSegmento On tesRetProvSegmento.tesMovimientos = tesMovimientos.tesMovimientos And tesRetProvSegmento.Segmento_Id = tesIdRetProv.Segmento_Id
Inner Join genEntidades On genEntidades.genEntidades = comMovProv.Proveed_Id
Inner Join comProveedores On comProveedores.genEntidades = comMovProv.Proveed_Id
Inner Join comCondFiscal On comCondFiscal.comCondFiscal = comProveedores.CondFiscal_Id
Where tesRengMovi.tesMovimientos = @tesMovimientos And tesRengMovi.conRenglon = @conRenglon
Go


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_tesRetenciones.sql*/
drop procedure inf_tesRetenciones
go
create procedure inf_tesRetenciones
(
@CarteraDesde varchar(5),
@CarteraHasta varchar(5),
@FechaDesde datetime,
@FechaHasta datetime,
@Empresa_Id int,
@Tipo int
)
AS
IF @Tipo = 1
	SELECT tesIdentifica.Cartera_Id, conAsientos.Fecha, 0 NroResSicore, vtesMovimientos.Segmento Comp,
	tesSubTiposMov.SubTipo_Id, (-2*tesRengMovi.TipoMovCont+3)*conMovCont.Importe Importe, genEntidades.Cuit,
	venClientes.Cliente_Id ClieProv, venClientes.RazonSocial, tesIdentifica.Descripcion,
	tesRengMoviRetClie.SucursalRet, tesRengMoviRetClie.ComprobanteRet,
	tesRengMoviRetClie.BaseImponible, tesRengMoviRetClie.Porcentaje
	FROM conAsientos
	INNER JOIN tesMovimientos ON conAsientos.conAsientos = tesMovimientos.tesMovimientos AND
		conAsientos.Empresa_Id= @Empresa_Id
	INNER JOIN vtesMovimientos ON vtesMovimientos.tesMovimientos = tesMovimientos.tesMovimientos
	INNER JOIN venMovimientos ON conAsientos.conAsientos = venMovimientos.venMovimientos AND
		venMovimientos.venTipoMov IN ('C','N')
	INNER JOIN tesRengMovi ON tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos
	INNER JOIN tesIdentifica ON tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
	INNER JOIN tesTiposId ON tesIdentifica.TipoCartera = tesTiposId.tesTiposId AND
		tesTiposId.TipoCartera = 'RC'
	INNER JOIN tesRengMoviRetClie ON tesRengMovi.tesMovimientos = tesRengMoviRetClie.tesMovimientos AND
		tesRengMovi.conRenglon = tesRengMoviRetClie.conRenglon
	INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos AND
			tesRengMovi.conRenglon = conMovCont.Renglon
	INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
	INNER JOIN tesSubTiposMov ON tesMovimientos.SubTipo_Id = tesSubTiposMov.tesSubTiposMov
	INNER JOIN genEntidades ON venClientes.genEntidades = genEntidades.genEntidades
	WHERE tesIdentifica.Cartera_Id BETWEEN @CarteraDesde and @CarteraHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and
	conAsientos.Anulado = 0 and conAsientos.Posteado = 1
	UNION ALL
	SELECT tesIdentifica.Cartera_Id, conAsientos.Fecha, 0 NroResSicore, vtesMovimientos.Segmento Comp,
	tesSubTiposMov.SubTipo_Id, (-2*tesRengMovi.TipoMovCont+3)*conMovCont.Importe Importe, ' ' CUIT,
	' ' Cliente_Id, ' ' RazonSocial, tesIdentifica.Descripcion,
	tesRengMoviRetClie.SucursalRet, tesRengMoviRetClie.ComprobanteRet,
	tesRengMoviRetClie.BaseImponible, tesRengMoviRetClie.Porcentaje
	FROM conAsientos
	INNER JOIN tesMovimientos ON conAsientos.conAsientos = tesMovimientos.tesMovimientos AND
		conAsientos.Empresa_Id= @Empresa_Id	
	INNER JOIN vtesMovimientos ON vtesMovimientos.tesMovimientos = tesMovimientos.tesMovimientos
	INNER JOIN tesRengMovi ON tesMovimientos.tesMovimientos = tesRengMovi.tesMovimientos
	INNER JOIN tesIdentifica ON tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
	INNER JOIN tesTiposId ON tesIdentifica.TipoCartera = tesTiposId.tesTiposId AND
		tesTiposId.TipoCartera = 'RC'
	INNER JOIN tesRengMoviRetClie ON tesRengMovi.tesMovimientos = tesRengMoviRetClie.tesMovimientos AND
		tesRengMovi.conRenglon = tesRengMoviRetClie.conRenglon
	INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos AND
			tesRengMovi.conRenglon = conMovCont.Renglon
	INNER JOIN tesSubTiposMov ON tesMovimientos.SubTipo_Id = tesSubTiposMov.tesSubTiposMov AND
		tesSubTiposMov.SubTipo_Id = 'EGR'
	WHERE tesIdentifica.Cartera_Id BETWEEN @CarteraDesde and @CarteraHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and
	conAsientos.Anulado = 0 and conAsientos.Posteado = 1
	ORDER BY 1,2
ELSE
	SELECT tesIdentifica.Cartera_Id, conAsientos.Fecha, TesIdRetProv.NroResSicore, 
	vtesMovimientos.Segmento Comp, ' ' SubTipo_Id, (-2*tesRengMovi.TipoMovCont+3)*conMovCont.Importe Importe, 
	genEntidades.Cuit, comProveedores.Proveed_Id ClieProv, 	comProveedores.RazonSocial, tesIdentifica.Descripcion, 
	' ' SucursalRet, dbo.Segmento(tesRetProvSegmento.Segmento_Id, tesRetProvSegmento.Segmento1C, 
	tesRetProvSegmento.Segmento2C, tesRetProvSegmento.Segmento3C, tesRetProvSegmento.Segmento4C,   
	tesRetProvSegmento.Segmento1N, tesRetProvSegmento.Segmento2N, tesRetProvSegmento.Segmento3N, 
	tesRetProvSegmento.Segmento4N) ComprobanteRet, tesRengMoviRetProv.BaseImponible, tesRengMoviRetProv.Porcentaje 
	FROM tesMovimientos 
	INNER JOIN vtesMovimientos ON tesMovimientos.tesMovimientos = vtesMovimientos.tesMovimientos
	INNER JOIN conAsientos ON tesMovimientos.tesMovimientos = conAsientos.conAsientos AND
		conAsientos.Empresa_Id= @Empresa_Id
	INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos
	INNER JOIN tesRengMovi ON conAsientos.conAsientos = tesRengMovi.tesMovimientos AND
		conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN tesIdentifica ON tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
	INNER JOIN TesIdRetProv ON tesIdentifica.tesIdentifica = TesIdRetProv.Cartera_Id
	INNER JOIN tesRengMoviRetProv ON conAsientos.conAsientos = tesRengMoviRetProv.tesMovimientos AND
		conMovCont.Renglon = tesRengMoviRetProv.conRenglon 
	INNER JOIN comMovProv ON tesMovimientos.tesMovimientos = comMovProv.comMovProv AND
		comMovProv.TipoMov = 'P'
	INNER JOIN comProveedores ON comMovProv.Proveed_Id = comProveedores.genEntidades
	INNER JOIN genEntidades ON comProveedores.genEntidades = genEntidades.genEntidades
	INNER JOIN tesRetProvSegmento ON tesMovimientos.tesMovimientos = tesRetProvSegmento.tesMovimientos AND
		conMovCont.Renglon = tesRetProvSegmento.conRenglon
	WHERE tesIdentifica.Cartera_Id BETWEEN @CarteraDesde and @CarteraHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and
	conAsientos.Anulado = 0 and conAsientos.Posteado = 1
	UNION ALL
	SELECT tesIdentifica.Cartera_Id, conAsientos.Fecha, TesIdRetProv.NroResSicore, vtesMovimientos.Segmento,
	'' SubTipo_Id, (-2*tesRengMovi.TipoMovCont+3)*conMovCont.Importe Importe, ISNULL(comProv.Cuit,'') Cuit, 
	ISNULL(comProv.Proveed_Id,'') Proveed_id, ISNULL(comProv.RazonSocial,'') RazonSocial, 
	tesIdentifica.Descripcion, ' ' SucursalRet, dbo.Segmento(tesRetProvSegmento.Segmento_Id, tesRetProvSegmento.Segmento1C, 
	tesRetProvSegmento.Segmento2C, tesRetProvSegmento.Segmento3C, tesRetProvSegmento.Segmento4C,   
	tesRetProvSegmento.Segmento1N, tesRetProvSegmento.Segmento2N, tesRetProvSegmento.Segmento3N, 
	tesRetProvSegmento.Segmento4N) NroRetencion, tesRengMoviRetProv.BaseImponible, tesRengMoviRetProv.Porcentaje   
	FROM tesMovimientos 
	INNER JOIN vtesMovimientos ON tesMovimientos.tesMovimientos = vtesMovimientos.tesMovimientos
	INNER JOIN tesSubTiposMov ON tesMovimientos.SubTipo_Id = tesSubTiposMov.tesSubTiposMov AND
		tesSubTiposMov.SubTipo_Id IN ('EGR','CVE')
	INNER JOIN conAsientos ON tesMovimientos.tesMovimientos = conAsientos.conAsientos AND
		conAsientos.Empresa_Id= @Empresa_Id
	INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos
	INNER JOIN tesRengMovi ON conAsientos.conAsientos = tesRengMovi.tesMovimientos AND
		conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN tesIdentifica ON tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
	INNER JOIN TesIdRetProv ON tesIdentifica.tesIdentifica = TesIdRetProv.Cartera_Id
	INNER JOIN tesRengMoviRetProv ON conAsientos.conAsientos = tesRengMoviRetProv.tesMovimientos AND
		conMovCont.Renglon = tesRengMoviRetProv.conRenglon 
	INNER JOIN tesRetProvSegmento ON tesMovimientos.tesMovimientos = tesRetProvSegmento.tesMovimientos AND
		conMovCont.Renglon = tesRetProvSegmento.conRenglon
	LEFT JOIN (SELECT comMovProv.comMovProv, comProveedores.Proveed_Id, comProveedores.RazonSocial, 
		comMovProv.TipoMov, genEntidades.Cuit FROM comMovProv  
		INNER JOIN comProveedores ON comMovProv.Proveed_Id = comProveedores.genEntidades
		INNER JOIN genEntidades ON comProveedores.genEntidades = genEntidades.genEntidades) comProv ON 
	tesMovimientos.tesMovimientos = comProv.comMovProv
	WHERE tesIdentifica.Cartera_Id BETWEEN @CarteraDesde and @CarteraHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and
	conAsientos.Anulado = 0 and conAsientos.Posteado = 1
	UNION ALL
	SELECT tesIdentifica.Cartera_Id, conAsientos.Fecha, TesIdRetProv.NroResSicore, vtesMovimientos.Segmento,
	'' SubTipo_Id, (-2*tesRengMovi.TipoMovCont+3)*conMovCont.Importe Importe, genEntidades.Cuit, 
	comProveedores.Proveed_Id, comProveedores.RazonSocial, tesIdentifica.Descripcion, 
	' ' SucursalRet, dbo.Segmento(tesRetProvSegmento.Segmento_Id, tesRetProvSegmento.Segmento1C, 
	tesRetProvSegmento.Segmento2C, tesRetProvSegmento.Segmento3C, tesRetProvSegmento.Segmento4C,   
	tesRetProvSegmento.Segmento1N, tesRetProvSegmento.Segmento2N, tesRetProvSegmento.Segmento3N, 
	tesRetProvSegmento.Segmento4N) NroRetencion, tesRengMoviRetProv.BaseImponible, tesRengMoviRetProv.Porcentaje  
	FROM tesMovimientos 
	INNER JOIN vtesMovimientos ON tesMovimientos.tesMovimientos = vtesMovimientos.tesMovimientos
	INNER JOIN conAsientos ON tesMovimientos.tesMovimientos = conAsientos.conAsientos AND
		conAsientos.Empresa_Id= @Empresa_Id
	INNER JOIN conMovCont ON conAsientos.conAsientos = conMovCont.conAsientos
	INNER JOIN tesRengMovi ON conAsientos.conAsientos = tesRengMovi.tesMovimientos AND
		conMovCont.Renglon = tesRengMovi.conRenglon
	INNER JOIN tesIdentifica ON tesRengMovi.Cartera_Id = tesIdentifica.tesIdentifica
	INNER JOIN TesIdRetProv ON tesIdentifica.tesIdentifica = TesIdRetProv.Cartera_Id
	INNER JOIN tesRengMoviRetProv ON conAsientos.conAsientos = tesRengMoviRetProv.tesMovimientos AND
		conMovCont.Renglon = tesRengMoviRetProv.conRenglon 
	INNER JOIN comMovProv ON tesMovimientos.tesMovimientos = comMovProv.comMovProv AND
		comMovProv.TipoMov <> 'P'
	INNER JOIN comProveedores ON comMovProv.Proveed_Id = comProveedores.genEntidades
	INNER JOIN genEntidades ON comProveedores.genEntidades = genEntidades.genEntidades
	INNER JOIN tesRetProvSegmento ON tesMovimientos.tesMovimientos = tesRetProvSegmento.tesMovimientos AND
		conMovCont.Renglon = tesRetProvSegmento.conRenglon
	WHERE tesIdentifica.Cartera_Id BETWEEN @CarteraDesde and @CarteraHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and
	conAsientos.Anulado = 0 and conAsientos.Posteado = 1
	ORDER BY 1,2





Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_tesSolicutudGastos.sql*/
-- INF_tesSolicutudGastos 0, '20200101','20100131',' ','ZZ',' ','ZZ', 1, 1
DROP PROCEDURE INF_tesSolicutudGastos
GO
CREATE PROCEDURE INF_tesSolicutudGastos(
	@Pendiente Bit,
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@CarteraDesde VarChar(5), 
	@CarteraHasta VarChar(5),
	@SolicitanteDesde VarChar(5),
	@SolicitanteHasta VarChar(5),
	@Detallado Bit, 
	@Empresa int
)
AS

if @Detallado = 0
	begin

	SELECT tesSolicitud.tesSolicitud, 
			dbo.Segmento(tesSolSegmentos.Segmento_Id, tesSolSegmentos.Segmento1C,
				tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C, 
				tesSolSegmentos.Segmento1N, tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N,
				tesSolSegmentos.Segmento4N) as SegmentoStr, tesSolicitud.Estado, 
				tesSolicitud.Fecha, tesSolicitud.FechaAutorizo, tesSolicitud.FechaCarga, 
				tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre, tesSolicitud.Monto, 
				ISNULL((SELECT sum(conMovCont.Importe*(-2*conMovcont.Tipomov+3)) 
					from tesSolRendicion inner join conMovCont ON 
					tesSolRendicion.tesMovimientos = conMovCont.conAsientos 
					INNER JOIN conAsientos ON 
					conAsientos.conAsientos = conMovCont.conAsientos
					INNER JOIN tesRengMovi ON
					tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
					tesRengMovi.conRenglon =conMovCont.Renglon
					Where
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado = 1 and 
					tesRengMovi.TipoMovCont = 1 and 
					conAsientos.Fecha <= @FechaHasta and
					tesSolRendicion.tesSolicitud = tesSolicitud.tesSolicitud),0) as Rendido, 
					tesSolicitud.Monto -
				ISNULL((SELECT sum(conMovCont.Importe*(-2*conMovcont.Tipomov+3)) 
					from tesSolRendicion inner join conMovCont ON 
					tesSolRendicion.tesMovimientos = conMovCont.conAsientos 
					INNER JOIN conAsientos ON 
					conAsientos.conAsientos = conMovCont.conAsientos
					INNER JOIN tesRengMovi ON
					tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
					tesRengMovi.conRenglon =conMovCont.Renglon
					Where
					conAsientos.Fecha <= @FechaHasta and
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado = 1 and 
					tesRengmovi.TipoMovCont = 1 and 
					
					tesSolRendicion.tesSolicitud = tesSolicitud.tesSolicitud),0) as Saldo
	 FROM tesSolicitud inner join tesSolSegmentos ON
	 tesSolicitud.tesSolicitud = tesSolSegmentos.tesSolicitud
	 INNER JOIN tesSolicitantes ON
	 tesSolicitantes.genEntidades = tesSolicitud.Solicitante_Id
	 INNER JOIN tesIdentifica ON 
	 tesIdentifica.tesIdentifica = tesSolicitud.Cartera_Id
	 Where
		tesSolicitud.Estado != 'R' AND 
		exists(select 1 from conasientos conasientosp, tesSolPago where
			conasientosp.conasientos =tesSolPago.tesMovimientos and 
			tesSolPago.tesSolicitud = tesSolicitud.tesSolicitud and 
			conasientosp.Fecha <= @FechaHasta and 
			conasientosp.anulado = 0 and 
			conasientosp.Posteado = 1) and 
		(@Pendiente=0 or (
		(tesSolicitud.Monto - 
				ISNULL((SELECT sum(conMovCont.Importe*(-2*conMovcont.Tipomov+3)) 
					from tesSolRendicion inner join conMovCont ON 
					tesSolRendicion.tesMovimientos = conMovCont.conAsientos 
					INNER JOIN conAsientos ON 
					conAsientos.conAsientos = conMovCont.conAsientos
					INNER JOIN tesRengMovi ON
					tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
					tesRengMovi.conRenglon =conMovCont.Renglon
					Where
					conAsientos.Fecha <= @FechaHasta and
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado = 1 and 
					tesRengMovi.TipoMovCont = 1 and 
					tesSolRendicion.tesSolicitud = tesSolicitud.tesSolicitud),0) > 0 ))) and 
	tesSolicitantes.Solicitante_Id between @SolicitanteDesde And @SolicitanteHasta and 
	--(@Pendiente =1 or  tesSolicitud.Fecha between @FechaDesde And  @FechaHasta) and 
	tesIdentifica.Cartera_Id between @CarteraDesde And  @CarteraHasta and 
	tesSolSegmentos.Empresa_Id = @Empresa
	ORDER BY 4,2

END
ELSE
BEGIN 


	SELECT tesSolicitud.tesSolicitud, 1 tm, 
			dbo.Segmento(tesSolSegmentos.Segmento_Id, tesSolSegmentos.Segmento1C,
				tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C, 
				tesSolSegmentos.Segmento1N, tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N,
				tesSolSegmentos.Segmento4N) as SegmentoStr, tesSolicitud.Estado, 
				tesSolicitud.Fecha, tesSolicitud.FechaAutorizo, tesSolicitud.FechaCarga, 
				tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre, tesSolicitud.Monto, 
				dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
				genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
				genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
				genAsiSegmentos.Segmento4N) as Segmento1Str, 
				0.00 as Rendido, conAsientos.Fecha as Fecha1
	 FROM tesSolicitud inner join tesSolSegmentos ON
	 tesSolicitud.tesSolicitud = tesSolSegmentos.tesSolicitud
	 INNER JOIN tesSolicitantes ON
	 tesSolicitantes.genEntidades = tesSolicitud.Solicitante_Id
	 INNER JOIN tesIdentifica ON 
	 tesIdentifica.tesIdentifica = tesSolicitud.Cartera_Id
	 INNER JOIN tesSolPago ON
	 tesSolPago.tesSolicitud = tesSolicitud.tesSolicitud
	 INNER JOIN genAsiSegmentos ON 
	 genAsiSegmentos.Asiento_Id = tesSolPago.tesMovimientos
	 INNER JOIn conAsientos ON conAsientos.conAsientos = tesSolPago.tesMovimientos
	  Where
		conAsientos.Posteado = 1 and 
		conAsientos.Anulado = 0 and 
		tesSolicitud.Estado != 'R' AND 
		exists(select 1 from conasientos conasientosp, tesSolPago where
			conasientosp.conasientos =tesSolPago.tesMovimientos and 
			tesSolPago.tesSolicitud = tesSolicitud.tesSolicitud and 
			conasientosp.Fecha <= @FechaHasta and 
			conasientosp.anulado = 0 and 
			conasientosp.Posteado = 1) and 

		(@Pendiente=0 or  (
		(tesSolicitud.Monto - 
				ISNULL((SELECT sum(conMovCont.Importe*(-2*conMovcont.Tipomov+3)) 
					from tesSolRendicion inner join conMovCont ON 
					tesSolRendicion.tesMovimientos = conMovCont.conAsientos 
					INNER JOIN conAsientos ON 
					conAsientos.conAsientos = conMovCont.conAsientos
					INNER JOIN tesRengMovi ON
					tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
					tesRengMovi.conRenglon =conMovCont.Renglon
					Where
					conAsientos.Fecha <= @FechaHasta and
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado = 1 and 
					tesRengMovi.TipoMovCont = 1 and 
					tesSolRendicion.tesSolicitud = tesSolicitud.tesSolicitud),0) > 0 ))) and 
	tesSolicitantes.Solicitante_Id between @SolicitanteDesde And @SolicitanteHasta and 
	--(@Pendiente =1 or  tesSolicitud.Fecha between @FechaDesde And  @FechaHasta) and 
	tesIdentifica.Cartera_Id between @CarteraDesde And  @CarteraHasta and 
	tesSolSegmentos.Empresa_Id = @Empresa
	UNION ALL
		SELECT tesSolicitud.tesSolicitud, 2 tm,
			dbo.Segmento(tesSolSegmentos.Segmento_Id, tesSolSegmentos.Segmento1C,
				tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C, 
				tesSolSegmentos.Segmento1N, tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N,
				tesSolSegmentos.Segmento4N) as SegmentoStr, tesSolicitud.Estado, 
				conAsientos.Fecha, tesSolicitud.FechaAutorizo, conAsientos.FechaRegistro, 
				tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre, 0 Monto, 
				dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
				genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
				genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
				genAsiSegmentos.Segmento4N) as Segmento1Str, 
				SUM(conMovCont.Importe*(-2*conMovcont.Tipomov+3)) as Rendido, conAsientos.Fecha as Fecha1
	 FROM tesSolicitud inner join tesSolSegmentos ON
	 tesSolicitud.tesSolicitud = tesSolSegmentos.tesSolicitud
	 INNER JOIN tesSolicitantes ON
	 tesSolicitantes.genEntidades = tesSolicitud.Solicitante_Id
	 INNER JOIN tesIdentifica ON 
	 tesIdentifica.tesIdentifica = tesSolicitud.Cartera_Id
	 INNER JOIN tesSolRendicion ON
	 tesSolRendicion.tesSolicitud = tesSolicitud.tesSolicitud
	 INNER JOIN genAsiSegmentos ON 
	 genAsiSegmentos.Asiento_Id = tesSolRendicion.tesMovimientos
	 inner join conAsientos ON 
	 conAsientos.conAsientos = tesSolRendicion.tesMovimientos
	 inner join conMovCont ON
	 conMovCont.conAsientos = conAsientos.conAsientos 
	 INNER JOIN tesRengMovi ON
	 tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
	 tesRengMovi.conRenglon =conMovCont.Renglon and
	 tesRengMovi.TipoMovCont = 1
	  Where
		conasientos.anulado = 0 and 
		conasientos.Posteado = 1 and
		tesSolicitud.Estado != 'R' AND 
		exists(select 1 from conasientos conasientosp, tesSolPago where
			conasientosp.conasientos =tesSolPago.tesMovimientos and 
			tesSolPago.tesSolicitud = tesSolicitud.tesSolicitud and 
			conasientosp.Fecha <= @FechaHasta and 
			conasientosp.anulado = 0 and 
			conasientosp.Posteado = 1) and 

		(@Pendiente=0 or  (
		(tesSolicitud.Monto - 
				ISNULL((SELECT sum(conMovCont.Importe*(-2*conMovcont.Tipomov+3)) 
					from tesSolRendicion inner join conMovCont ON 
					tesSolRendicion.tesMovimientos = conMovCont.conAsientos 
					INNER JOIN conAsientos ON 
					conAsientos.conAsientos = conMovCont.conAsientos
					INNER JOIN tesRengMovi ON
					tesRengMovi.tesMovimientos = conMovCont.conAsientos and 
					tesRengMovi.conRenglon =conMovCont.Renglon
					Where
					conAsientos.Fecha <= @FechaHasta and
					conAsientos.Anulado = 0 and 
					conAsientos.Posteado = 1 and 
					tesRengMovi.TipoMovCont = 1 and 
					tesSolRendicion.tesSolicitud = tesSolicitud.tesSolicitud),0) > 0 ))) and 
	tesSolicitantes.Solicitante_Id between @SolicitanteDesde And @SolicitanteHasta and 
	conAsientos.Fecha <= @FechaHasta and
--	(@Pendiente =1 or  tesSolicitud.Fecha between @FechaDesde And  @FechaHasta) and 
	tesIdentifica.Cartera_Id between @CarteraDesde And  @CarteraHasta and 
	tesSolSegmentos.Empresa_Id = @Empresa
	GROUP BY tesSolicitud.tesSolicitud, 
				tesSolSegmentos.Segmento_Id, tesSolSegmentos.Segmento1C,
				tesSolSegmentos.Segmento2C, tesSolSegmentos.Segmento3C, tesSolSegmentos.Segmento4C, 
				tesSolSegmentos.Segmento1N, tesSolSegmentos.Segmento2N, tesSolSegmentos.Segmento3N,
				tesSolSegmentos.Segmento4N , tesSolicitud.Estado, 
				conAsientos.Fecha, tesSolicitud.FechaAutorizo, conAsientos.FechaRegistro, 
				tesSolicitantes.Solicitante_Id, tesSolicitantes.Nombre, 
				genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
				genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
				genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
				genAsiSegmentos.Segmento4N, conAsientos.Fecha 
	ORDER BY 5,1,2

END


GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_tesSubDiario.sql*/
-- INF_tesSubDiario '20170101','20171231',1
DROP PROCEDURE INF_tesSubDiario
GO
CREATE PROCEDURE INF_tesSubDiario @FechaDesde DateTime, @FechaHasta DateTime, @Empresa int
AS
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	tesSubTiposMov.Descripcion, 
	IsNull(comProveedores.Proveed_id, IsNull(venClientes.Cliente_Id, '')) Codigo, 
	IsNull(comProveedores.RazonSocial, IsNull(venClientes.RazonSocial, '')) RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm tesMovimientos
INNER JOIN conAsientos ON tesMovimientos.tesMovimientos = conAsientos.conAsientos
Left Join (comMovProv INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id) On tesMovimientos.tesMovimientos = comMovProv.comMovProv
Left Join (venMovimientos Inner Join venClientes On venMovimientos.Cliente_Id = venClientes.genEntidades) On tesMovimientos.tesMovimientos = venMovimientos.venMovimientos
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa And
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
ORDER BY 1,2,3
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_tesSubMayor.sql*/
-- INF_tesSubMayor '20170101','20180629',' ','ZZZZZZZZ',' ','ZZZZZZZZ',' ','ZZZZZZZZZ', 1
DROP PROCEDURE INF_tesSubMayor
GO
CREATE PROCEDURE INF_tesSubMayor 
(
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@CuentaDesde VarChar(25),
@CuentaHasta VarChar(25),
@Centro1Desde VarChar(8),
@Centro1Hasta VarChar(8),
@Centro2Desde VarChar(8),
@Centro2Hasta VarChar(8),
@Empresa int)

AS
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	tesSubTiposMov.Descripcion, 
	IsNull(comProveedores.Proveed_id, IsNull(venClientes.Cliente_Id, '')) Codigo, 
	IsNull(comProveedores.RazonSocial, IsNull(venClientes.RazonSocial, isnull(conasientos.Observaciones, ''))) RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm tesMovimientos
INNER JOIN conAsientos ON tesMovimientos.tesMovimientos = conAsientos.conAsientos
Left Join (comMovProv INNER JOIN comProveedores ON comProveedores.genEntidades = comMovProv.Proveed_id) On tesMovimientos.tesMovimientos = comMovProv.comMovProv
Left Join (venMovimientos Inner Join venClientes On venMovimientos.Cliente_Id = venClientes.genEntidades) On tesMovimientos.tesMovimientos = venMovimientos.venMovimientos
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN tesSubTiposMov ON tesSubTiposMov.tesSubTiposMov = tesMovimientos.SubTipo_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa And
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id between @CuentaDesde And  @CuentaHasta and 
	ISNULL(conCentro1.Centro1_Id,' ') between @Centro1Desde And  @Centro1Hasta and
	ISNULL(conCentro2.Centro2_Id,' ') between @Centro2Desde And  @Centro2Hasta 
ORDER BY 1,3,4,5
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_tesTiposCambio.sql*/
-- INF_tesTiposCambio '20180101','20180630',' ','zzz',1
DROP PROCEDURE INF_tesTiposCambio
GO

CREATE PROCEDURE INF_tesTiposCambio
(
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@MonedaDesde VarChar(5),
@MonedaHasta VarChar(5),
@Empresa_Id Int
)
AS

SELECT genMonedas.Moneda_Id, genMonedas.Descripcion, 
	genTipoCambio.Fecha, 
	genTipoCambio.CambioCompra, genTipoCambio.CambioVenta
FROM genTipoCambio INNER JOIN genMonedas ON
genTipoCambio.Moneda_Id = genMonedas.genMonedas
WHERE
	genMonedas.Moneda_Id BETWEEN @MonedaDesde AND @MonedaHasta AND 
	genTipoCambio.Fecha BETWEEN @FechaDesde AND @FechaHasta and 
	ISNULL(genTipoCambio.Empresa_Id, @Empresa_Id) = @Empresa_Id
ORDER BY 1, 3
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_venAnaMora.sql*/
-- inf_venAnaMora '20200701','20200731',' ','ZZZ',' ','ZZ',' ','ZZ','EC',1
DROP PROCEDURE inf_venAnaMora
GO

CREATE PROCEDURE inf_venAnaMora
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@CobradorDesde VarChar(5),
	@CobradorHasta VarChar(5),
	@VendedorDesde VarChar(5),
	@VendedorHasta VarChar(5),
	@Tipo Char(2),
	@Empresa_Id Int
)
AS


SELECT Cliente_Id, RazonSocial, FechaCobranza, Cobranza, 
		Vendedor_Id, DescripcionVendedor, Cobrador_Id, DescripcionCobrador, 
		TotalCobrado, 
		Convert(Numeric(18,2),round(SUM(case @Tipo when 'EC' THEN EmisCobra 
		when 'EV' THEN EmisValor 
		when 'VC' THEN VencCobra
		ELSE VencValor
		END * ImporteValor/TotalCobrado * Aplicado / TotalCobrado),2)) as Dias
FROM (
SELECT venClientes.Cliente_Id, venClientes.RazonSocial, conAsientos.Fecha as FechaCobranza, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, 
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N
	) as Cobranza, 
	venVendedores.Vendedor_Id, venVendedores.Nombre as DescripcionVendedor, 
	venCobradores.Cobrador_Id, venCobradores.Nombre as DescripcionCobrador,
	AsiFactura.Fecha as FechaFactura, 	genMovCuotas.FechaVencimiento, 
	DATEDIFF(dd, AsiFactura.Fecha, conAsientos.Fecha) as EmisCobra,
	DATEDIFF(dd, AsiFactura.Fecha, ISNULL(tesCheqTerceros.FechaVencimiento, conAsientos.Fecha)) as EmisValor,
	DATEDIFF(dd, genMovCuotas.FechaVencimiento, conAsientos.Fecha) as VencCobra,
	DATEDIFF(dd, genMovCuotas.FechaVencimiento, ISNULL(tesCheqTerceros.FechaVencimiento, conAsientos.Fecha)) as VencValor,
	genCancMov.Importe Aplicado, conMovCont.Importe as ImporteValor,  Cobranza.Importe as TotalCobrado
FROM venMovimientos 
	INNER JOIN conAsientos ON conAsientos.conAsientos = venMovimientos.venMovimientos
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN venCobradores ON venCobradores.venCobradores = venMovimientos.Cobrador_Id
	INNER JOIN genMovCuotas as Cobranza ON Cobranza.Asiento_Id = venMovimientos.venMovimientos
	INNER JOIN genCancMov ON  genCancMov.Asiento_Id_Ap = Cobranza.Asiento_Id and 
			genCancMov.CuotaNro = Cobranza.CuotaNro
	INNER JOIN genMovCuotas ON genMovCuotas.Asiento_Id = genCancMov.Asiento_Id and
		genCancMov.CuotaNro = genMovCuotas.CuotaNro
	INNER JOIN conAsientos as AsiFactura ON  AsiFactura.conAsientos = genMovCuotas.Asiento_Id
	INNER JOIN venMovimientos as Factura ON  Factura.venMovimientos = genMovCuotas.Asiento_Id
	INNER JOIN venVendedores ON venVendedores.venVendedores = Factura.Vendedor_Id
	INNER JOIN tesRengMovi ON  tesRengMovi.tesMovimientos = conAsientos.conAsientos
	INNER JOIN conMovCont ON  conMovCont.conAsientos = tesRengMovi.tesMovimientos AND 
							  conMovCont.Renglon = 	tesRengMovi.conRenglon
	LEFT JOIN (tesCTlink INNER JOIN tesCheqTerceros ON tesCTlink.tesCheqTerceros = tesCheqTerceros.tesCheqTerceros) ON 
		tesCTlink.tesMovimientos = tesRengMovi.tesMovimientos and 
		tesCTlink.conRenglon = tesRengMovi.conRenglon
WHERE
	tesRengMovi.TipomovCont  =  1 and 
	venMovimientos.venTipoMov = 'C' and 
	conAsientos.Fecha BETWEEN @FechaDesde AND @FechaHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
	venCobradores.Cobrador_Id Between @CobradorDesde and @CobradorHasta and 
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientos.Anulado = 0 and 
	conAsientos.Posteado = 1 and 
	AsiFactura.Anulado = 0 and 
	AsiFactura.Posteado = 1 ) AS XXX
GROUP BY Cliente_Id, RazonSocial, FechaCobranza, Cobranza, 
		Vendedor_Id, DescripcionVendedor, Cobrador_Id, DescripcionCobrador, 
		TotalCobrado
ORDER BY 1,2,3

GO
	

	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venAplicaciones.sql*/

-- INF_venAplicaciones  '20180101','20180630',' ','ZZZ',1
DROP Procedure INF_venAplicaciones 
GO
CREATE Procedure INF_venAplicaciones 
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Empresa_Id INT
)
AS

SELECT  venClientes.Cliente_Id, venClientes.RazonSocial,
	genAsiSegmentos.Asiento_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,	genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,
	genAsiSegmentos.Segmento4N) as ComprobantePag, 
	genCancMov.FechaAplicacion,
	genAsiSegmentosf.Asiento_Id as Asiento_idf, 
	dbo.Segmento(genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C,
	genAsiSegmentosF.Segmento2C,genAsiSegmentosF.Segmento3C,genAsiSegmentosF.Segmento4C,
	genAsiSegmentosF.Segmento1N,	genAsiSegmentosF.Segmento2N,genAsiSegmentosF.Segmento3N,
	genAsiSegmentosF.Segmento4N) as ComprobanteFact, 
	genCancMov.Importe, genCancMov.CuotaNro
	
from genAsiSegmentos INNER JOIN conAsientos ON
genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN genCancMov ON
genCancMov.Asiento_Id_Ap = conAsientos.conAsientos
inner join genAsiSegmentos as genAsiSegmentosF on
genAsiSegmentosF.Asiento_Id = genCancMov.Asiento_Id
INNER JOIN conAsientos as conAsientosF ON 
conAsientosF.conAsientos = genAsiSegmentosF.Asiento_Id
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = conAsientosF.conAsientos
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientosF.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id and 
	venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and 
	genCancMov.FechaAplicacion between @FechaDesde and @FechaHasta
ORDER BY 1, 3, 5
	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venClientes.sql*/
	-- Inf_venClientes  1, ' ','ZZZ',' ','zzz'
DROP PROCEDURE Inf_venClientes 
GO
CREATE PROCEDURE Inf_venClientes 
(
	@Empresa Int, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15), 
	@VendedorDesde VarChar(5),
	@VendedorHasta VarChar(5)
)
AS

SELECT venClientes.Cliente_id, venClientes.RazonSocial, 
	venClieHabitual.Sucursal, venClieHabitual.NombreFantasia, 
	genEntidades.Cuit, genEntidades.TipoDoc, genEntidades.IdFiscal,
	venCondPago.CondPagoCli_id, venCondPago.Descripcion as DescripcionCondPago, 
	venListasPrecios.ListaPrecio_Id, venListasPrecios.Descripcion as DescripcionLP,
	venZona.Zona_Id, venZona.Descripcion AS DescripcionZona, 
	venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVend,
	venFormaEntrega.FormaEntrega_Id,  venFormaEntrega.RazonSocial as DescripcionFormaEntrega,
	venClientes.Posteado, venClieHabitual.Inactivo, venClientes.Empresa_Id,
	venClieHabitual.MetodoDePago, CASE WHEN venClieHabitual.MetodoDePago = '99' THEN 'PPD' ELSE 'PUE' END AS NMetodoPago, 
	venClientes.LimiteCredito, genMonedas.Moneda_Id, venClientes.Bonificacion1, 
	venClientes.Bonificacion2, venClientes.Bonificacion3,  venCondFiscal.CondFisc_Id, 
	venClieHabitual.Direccion1_Fact, venClieHabitual.NroExterior_Fact, 
	venClieHabitual.NroInterior_Fact, 	venClieHabitual.Direccion2_Fact, 
	venClieHabitual.Localidad_Fact, venClieHabitual.CodPostal_Fact, 
	genProvincias.Provincia_Id as Provincia_id_Fact, 
	genPaises.Pais_Id as Pais_Id_Fact, venCobradores.Cobrador_Id, 
	venClieHabitual.EMail, venClieHabitual.Telefonos , 
	isnull(conCentro1.Centro1_Id,'') Centro1_Id, isnull(conCentro1.Descripcion,'') DescripcionC1,
	isnull(conCentro2.Centro2_Id,'') Centro2_Id, isnull(conCentro2.Descripcion,'') Descripcion21
FROM venClientes 
INNER JOIN genEntidades ON genEntidades.genEntidades = venClientes.genEntidades
INNER JOIN venClieHabitual ON venClientes.genEntidades =  venClieHabitual.genEntidades
INNER JOIN venCondPago on venClieHabitual.CondPagoCli_id =  venCondPago.venCondPago 
INNER JOIN venListasPrecios ON venListasPrecios.venListasPrecios = venClieHabitual.ListaPrecio_Id
INNER JOIn venZona ON venZona.venZona = venClieHabitual.Zona_Id
INNER JOIN venVendedores ON venVendedores.venVendedores = venClieHabitual.Vendedor_Id
INNER JOIN venFormaEntrega ON venFormaEntrega.venFormaEntrega = venClieHabitual.FormaEntrega_Id
INNER JOIN genMonedas ON genMonedas.genMonedas =venClientes.MonedaLimCred
INNER JOIN venCondFiscal ON venCondFiscal.venCondFiscal = venClientes.CondFisc_Id
INNER JOIN genProvincias ON genProvincias.genProvincias = venClieHabitual.Provincia_Id_Fact
INNER JOIN genPaises ON genPaises.genPaises = venClieHabitual.Pais_Id_Fact
INNER JOIN venCobradores ON venCobradores.venCobradores =  venClieHabitual.Cobrador_Id
LEFT JOIN conCentro1 ON conCentro1.conCentro1 = venClieHabitual.Centro1_Id
LEFT JOIN conCentro2 ON conCentro2.conCentro2 = venClieHabitual.Centro2_Id
WHERE
	@Empresa = ISNULL(venClientes.Empresa_Id,@Empresa) and 
	venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta
ORDER BY 2

GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_venComisCobradores.sql*/
drop procedure inf_venComisCobradores
go
create procedure inf_venComisCobradores
(
    @CobradorDesde varchar(5),
    @CobradorHasta varchar(5),
    @FechaDesde datetime,
    @FechaHasta datetime,
    @Empresa_Id int
)
as
select venCobradores.Cobrador_Id, dbo.Segmento(Segmento_Id, Segmento1C, Segmento2C, Segmento3C, Segmento4C, Segmento1N, Segmento2N, Segmento3N, Segmento4N) as Asiento,
Fecha, venMovimientos.Importe as Total, round(Importe*venCobradores.Comision/100,2) as Comision, venCobradores.Comision as Porcentaje from venMovimientos
inner join conAsientos on conAsientos.conAsientos=venMovimientos.venMovimientos
inner join venCobradores on venMovimientos.Cobrador_Id=venCobradores.venCobradores
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id=conAsientos.conAsientos
inner join venTipoMov on venTipoMov.venTipoMov=venMovimientos.venTipoMov
inner join venSubTipoMov on venMovimientos.venSubTipoMov_Id=venSubTipoMov.venSubTipoMov
where venMovimientos.venTipoMov = 'C' and 
venSubTipoMov.AfectaComVenta=1 and
venCobradores.Cobrador_Id between @CobradorDesde and @CobradorHasta and
conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and conAsientos.Empresa_Id=@Empresa_Id and conAsientos.Posteado=1 and conAsientos.Anulado=0
go

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venCompSaldo.sql*/

-- Inf_venCompSaldo  '20200731','00348 BAUCOM','00348 BAUCOM',1
DROP PROCEDURE Inf_venCompSaldo 
GO
CREATE PROCEDURE Inf_venCompSaldo 
(
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Empresa_Id INT

)
AS

SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,@FechaHasta), @Empresa_Id) as Cambio
INTO #CAMBIO
FROM genMonedas



SELECT venClientes.Cliente_Id , venClientes.RazonSocial,
	dbo.Segmento(genAsiSegmentos.Segmento_id, 
		genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
		genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
		genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
		genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as Comprobante, 
		venMovimientos.Importe as MontoOriginal,
		conAsientos.Fecha, (venMovimientos.Saldo +
		ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id = venMovimientos.venMovimientos AND 
			genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			genCancMov.FechaAplicacion > @FechaHasta and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)+
	ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id_ap = venMovimientos.venMovimientos AND 
			genCancMov.Asiento_Id = conAsientos.conAsientos and 
			genCancMov.FechaAplicacion > @FechaHasta and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0))* venTipoMov.Signo * Cambio.Cambio as Saldo, 
				conAsientos.Fecha, (venMovimientos.Saldo +
		ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id = venMovimientos.venMovimientos AND 
			genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			genCancMov.FechaAplicacion > @FechaHasta and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)+
	ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id_ap = venMovimientos.venMovimientos AND 
			genCancMov.Asiento_Id = conAsientos.conAsientos and 
			genCancMov.FechaAplicacion > @FechaHasta and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0))* venTipoMov.Signo as SaldoOri, 
			genMonedas.Moneda_Id, Cambio.Cambio, 
			(select max(genMovCuotas.FechaVencimiento) from 
				genMovCuotas where
					genMovCuotas.Asiento_Id = venMovimientos.venMovimientos) as FechaVencimiento
from venMovimientos INNER JOIN conAsientos ON
	venMovimientos.venMovimientos = conAsientos.conAsientos
	inner join venClientes ON 
	venClientes.genEntidades = venMovimientos.Cliente_Id
	inner join genAsiSegmentos ON
	genAsiSegmentos.Asiento_Id =conAsientos.conAsientos
	inner join venTipoMov ON
	venTipoMov.venTipoMov = venMovimientos.venTipoMov
	INNER JOIN #CAMBIO Cambio ON 
	Cambio.genMonedas = conAsientos.Moneda_Id
	INNER JOIN genMonedas ON 
	genMonedas.genMonedas =conAsientos.Moneda_Id
	WHERE
		conAsientos.Anulado = 0 AND 
		conAsientos.Posteado = 1 AND 
		venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and
		conAsientos.Fecha <= @FechaHasta and 
		conAsientos.Empresa_Id = @Empresa_Id and 
		(venMovimientos.Saldo +
		ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id = venMovimientos.venMovimientos AND 
			genCancMov.Asiento_Id_Ap = conAsientos.conAsientos and 
			genCancMov.FechaAplicacion > @FechaHasta and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)+
	ISNULL((SELECT SUM(Importe) from genCancMov, conAsientos Where
			genCancMov.Asiento_Id_ap = venMovimientos.venMovimientos AND 
			genCancMov.Asiento_Id = conAsientos.conAsientos and 
			genCancMov.FechaAplicacion > @FechaHasta and 
			conAsientos.Anulado = 0 and 
			conAsientos.Posteado = 1),0)) <> 0
order by 1, 5,3
	
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_venComsVendedores.sql*/
drop procedure inf_venComisVendedores
go
create procedure inf_venComisVendedores
(
    @VendedorDesde varchar(5),
    @VendedorHasta varchar(5),
    @FechaDesde datetime,
    @FechaHasta datetime,
    @SobreCobrado SiNo,
    @Empresa_Id int
)
as
if(@SobreCobrado=1)
begin
select venVendedores.Vendedor_Id, dbo.Segmento(Segmento_Id, Segmento1C, Segmento2C, Segmento3C, Segmento4C, Segmento1N, Segmento2N, Segmento3N, Segmento4N) as Asiento,
Fecha, venTipoMov.Signo*SubTotalBonif as SubTotal, venTipoMov.Signo*(Importe-SubTotalBonif) as Impuestos, venTipoMov.Signo*Importe as Total, venTipoMov.Signo*round(SubTotalBonif*venVendedores.Comision/100,2) as Comision, venVendedores.Comision as Porcentaje from venMovimientos
inner join conAsientos on conAsientos.conAsientos=venMovimientos.venMovimientos
inner join venVendedores on venMovimientos.Vendedor_Id=venVendedores.venVendedores
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id=conAsientos.conAsientos
inner join venTipoMov on venTipoMov.venTipoMov=venMovimientos.venTipoMov
inner join venSubTipoMov on venMovimientos.venSubTipoMov_Id=venSubTipoMov.venSubTipoMov
where venMovimientos.venTipoMov in('F','R') and 
venSubTipoMov.AfectaComVenta=1 and
venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and conAsientos.Empresa_Id=@Empresa_Id and conAsientos.Posteado=1 and conAsientos.Anulado=0
end
else
BEGIN
select venVendedores.Vendedor_Id, dbo.Segmento(Segmento_Id, Segmento1C, Segmento2C, Segmento3C, Segmento4C, Segmento1N, Segmento2N, Segmento3N, Segmento4N) as Asiento,
Fecha, genCancMov.Importe*venMovimientos.SubTotalBonif/venMovimientos.Importe as SubTotal, 
gencancmov.Importe*(venMovimientos.Importe-venMovimientos.SubTotalBonif)/venMovimientos.Importe as Impuestos, genCancMov.Importe as Total, 
round(genCancMov.Importe*venMovimientos.SubTotalBonif/venMovimientos.Importe*venVendedores.Comision/100,2) as Comision, 
venVendedores.Comision as Porcentaje from venMovimientos
inner join conAsientos on conAsientos.conAsientos=venMovimientos.venMovimientos
inner join venVendedores on venMovimientos.Vendedor_Id=venVendedores.venVendedores
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id=conAsientos.conAsientos
inner join genCancMov on genCancMov.Asiento_Id=conAsientos.conAsientos or genCancMov.Asiento_Id_Ap=conAsientos.conAsientos
inner join venMovimientos venMovimientosAP on venMovimientosAP.venMovimientos=genCancMov.Asiento_Id or venMovimientosAP.venMovimientos=genCancMov.Asiento_Id_Ap and venMovimientos.venTipoMov='C'
inner join venSubTipoMov on venMovimientos.venSubTipoMov_Id=venSubTipoMov.venSubTipoMov
where 
venSubTipoMov.AfectaComVenta=1 and
venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
conAsientos.Fecha BETWEEN @FechaDesde and @FechaHasta and conAsientos.Empresa_Id=@Empresa_Id AND
venMovimientos.Importe!=0 and conAsientos.Posteado=1 and conAsientos.Anulado=0
end
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venContribMarg.sql*/


-- Inf_venContribMarg '20210401','20210430',' ','ZZZ',' ','zzz',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ',0,0,1
-- Inf_venContribMarg '20200401','20200430',' ','ZZZ',' ','ZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ',0,1,1
-- Inf_venContribMarg '20200901','20200930',' ','ZZZ',' ','ZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ','T',0,0,1
-- Inf_venContribMarg '20200401','20200430',' ','ZZZ',' ','ZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ',' ','ZZZZ','V',1,1,1

DROP Procedure Inf_venContribMarg
GO
Create Procedure Inf_venContribMarg
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@ProductoDesde VarChar(15),
	@ProductoHasta VarChar(15),
	@SucursalDesde VarChar(15),
	@SucursalHasta VarChar(15),
	@RegionDesde VarChar(5),
	@RegionHasta VarChar(5),
	@ZonaDesde  VarChar(5),
	@ZonaHasta  VarChar(5),
	@VendedorDesde  VarChar(5),
	@VendedorHasta  VarChar(5),
	@TipoDesde VarChar(5),
	@TipoHasta VarChar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15),
	@AgruparPor Char(1),
	@Resumido Bit, 
	@PorGrupo Bit,
	@Empresa_Id Int
)
AS

select CASE @AgruparPor 
	WHEN 'C' Then Cliente_Id 
	WHEN 'V' Then Vendedor_Id 
	WHEN 'T' Then Tipo_Id 
	ELSE ' ' END AS Agrupador ,
	CASE @AgruparPor 
	WHEN 'C' Then RazonSocial 
	WHEN 'V' Then Nombre
	WHEN 'T' Then DescripcionTipo
	ELSE ' ' END AS DescripcionAgrupador ,
	Familia_Id,  DescripcionFamilia, 
	case when @PorGrupo=1 then Grupo_Id else ' ' end as Grupo_Id, 
	case when @PorGrupo=1 then DescripcionGrupo else ' ' end as DescripcionGrupo, 
	case when @Resumido=0 then Producto_Id else ' ' end Producto_Id, 
	case when @Resumido=0 then Descripcion else ' ' end Descripcion, 
	case when @Resumido=0 then Medida_Id else ' ' end Medida_Id, 
	case when @Resumido=0 then Clase else ' ' end Clase, 
	Sum(CantidadVenta) CantidadVenta,
	Sum(MontoLista) MontoLista	, 
	Convert(Numeric(18,4),case when sum(CantidadVenta)=0 then 0 else SUM(MontoLista) / SUM(CantidadVenta) end) PPLista, 
	SUM(MontoVenta) AS MontoVenta, 
	Convert(Numeric(18,4),case when Sum(CantidadVenta)=0 then 0 else sum(MontoVenta) / sum(CantidadVenta) end) PPVenta, 

	Convert(Numeric(18,2),case when Sum(Montolista)=0 then 0 else sum(MontoLista-MontoVenta) / sum(MontoLista) end )*100 as PorDto,
	SUM(MontoCosto) AS MontoCosto, 
	Convert(Numeric(18,4),case when sum(CantidadVenta)=0 then 0 else SUM(MontoCosto) / SUM(CantidadVenta) end)  PPCosto, 
	sum(Contribucion) Contribucion, 
	Convert(Numeric(18,2),Case when SUM(MontoVenta)=0 then 0 else (SUM(Contribucion) / sum(MontoVenta) * 100) end ) PorContrib

from (
SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkProductos.Clase,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as CantidadVenta, 
		Convert(Numeric(18,2),SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * (venMovConStockCr.PrecioLista - 
		CASE WHEN venListasPrecios.LlevaImpuestoInclu = 1 and venMovConStockCr.PrecioForm!=0 THEN
			venMovConStockCr.PrecioLista * ( venMovConStockCr.PrecioFormImpuesto /venMovConStockCr.PrecioForm ) ELSE 0 END  ) / case when venMovConStockCr.Factor!=0 And venSubTipoMov.TipoPrecioForm != 'S' then venMovConStockCr.Factor else 1 end   * conAsientos.Cambio)) as MontoLista,
		Convert(Numeric(18,2),SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio)) as MontoVenta,
		Convert(Numeric(18,2), case when clase in ('E','-') THEN 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * isnull(stkMoviCuerpo.CostoUnitario,0) )ELSE 0 END)  as MontoCosto,
		Convert(Numeric(18,2),case when clase in ('E','-') THEN 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) ELSE 0 END ) -
		Convert(Numeric(18,2),case when clase in ('E','-') THEN 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * isnull(stkMoviCuerpo.CostoUnitario,0) ) ELSE 0 END ) as Contribucion,
		ISNULL(stkFamilias.Familia_Id,'') AS Familia_Id, ISNULL(stkFamilias.Descripcion,'') DescripcionFamilia,
		ISNULL(stkGrupos.Grupo_Id,'') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,'')  DescripcionGrupo,
		venClientes.Cliente_Id, venClientes.RazonSocial, venVendedores.Vendedor_Id, venVendedores.Nombre, 
		stkTipos.Tipo_Id, stkTipos.Descripcion as DescripcionTipo
FROM stkProductos INNER JOIN stkUniMed ON 
stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON
venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON 
conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON
genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id
LEFT JOIN (venMovStkHist INNER JOIN  stkMoviCuerpo ON
venMovStkHist.stkMoviCabe = stkMoviCuerpo.stkMoviCabe AND
venMovStkHist.Renglon = stkMoviCuerpo.Renglon ) ON
venMovConStockCr.venMovimientos = venMovStkHist.venMovimientos and 
venMovConStockCr.RenglonCuerpo =venMovStkHist.RenglonCuerpo
INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
							  venClieHabitual.Sucursal = venMovimientos.Sucursal
INNER JOIN venZona ON venZona.venZona = venClieHabitual.Zona_Id
INNER JOIN venRegion ON venRegion.venRegion = venClieHabitual.Region_Id
INNER JOIN venTiposClie ON venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
INNER JOIN venVendedores ON  venVendedores.venVendedores = venMovimientos.Vendedor_Id
INNER JOIN stkTipos ON stkTipos.stkTipos = stkProductos.Tipo_Id
LEFT JOIN stkFamilias ON  stkFamilias.stkFamilias = stkProductos.Familia_Id
LEFT JOIN stkGrupos ON  stkGrupos.stkGrupos = stkProductos.Grupo_Id
INNER JOIN venMovConStock ON  venMovConStock.venMovimientos= venMovimientos.venMovimientos
INNER JOIN venListasPrecios ON  venListasPrecios.venListasPrecios = venMovConStock.ListaPrecio_Id
WHERE
	stkProductos.Clase != 'C' AND 
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	conAsientos.Fecha Between @FechaDesde and @FechaHasta and
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	venZona.Zona_Id Between @ZonaDesde and @ZonaHasta and
	venRegion.Region_Id Between @RegionDesde and @RegionHasta and
	venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and 
	venTiposClie.TipoClie_Id Between @TipoDesde and @TipoHasta and 
	ISNULL(stkFamilias.Familia_Id,'') Between @FamiliaDesde and @FamiliaHasta and 
	ISNULL(stkGrupos.Grupo_Id,'') Between @GrupoDesde and @GrupoHasta 
GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, 	stkUniMed.Medida_Id, 
	stkProductos.Clase, stkFamilias.Familia_Id, stkFamilias.Descripcion,stkProductos.stkProductos, 
		stkGrupos.Grupo_Id, stkGrupos.Descripcion,
		venClientes.Cliente_Id, venClientes.RazonSocial, venVendedores.Vendedor_Id, venVendedores.Nombre, 
		stkTipos.Tipo_Id, stkTipos.Descripcion 
having SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0
UNION ALL -- combos

SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkProductos.Clase,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as CantidadVenta, 
		Convert(Numeric(18,2),SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * (venMovConStockCr.PrecioLista - 
		CASE WHEN venListasPrecios.LlevaImpuestoInclu = 1 and venMovConStockCr.PrecioForm!=0  THEN
		venMovConStockCr.PrecioLista * ( venMovConStockCr.PrecioFormImpuesto /venMovConStockCr.PrecioForm) ELSE 0 END )/ case when venMovConStockCr.Factor!=0 then venMovConStockCr.Factor else 1 end   * conAsientos.Cambio)) as MontoLista,
		Convert(Numeric(18,2),SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio)) as MontoVenta,
		Convert(Numeric(18,2), SUM(venTipomov.Signo * isnull(stkMoviCuerpo.Costo,0)))  as MontoCosto,
		Convert(Numeric(18,2),SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio)) -
		Convert(Numeric(18,2), SUM(venTipomov.Signo * isnull(stkMoviCuerpo.Costo,0))) as Contribucion,
		ISNULL(stkFamilias.Familia_Id,'') AS Familia_Id, ISNULL(stkFamilias.Descripcion,'') DescripcionFamilia,
		ISNULL(stkGrupos.Grupo_Id,'') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,'')  DescripcionGrupo,
		venClientes.Cliente_Id, venClientes.RazonSocial, venVendedores.Vendedor_Id, venVendedores.Nombre, 
		stkTipos.Tipo_Id, stkTipos.Descripcion as DescripcionTipo
FROM stkProductos INNER JOIN stkUniMed ON 
stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON
venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON 
conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON
genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id
LEFT JOIN (SELECT venMovStkHist.venMovimientos, venMovStkHist.RenglonCuerpo,
SUM(stkMoviCuerpo.Cantidad *  stkMoviCuerpo.CostoUnitario)  as Costo
from venMovStkHist
INNER JOIN  stkMoviCuerpoCombo ON 
venMovStkHist.stkMoviCabe = stkMoviCuerpoCombo.stkMoviCabe  AND
venMovStkHist.Renglon = stkMoviCuerpoCombo.Renglon
inner JOIN stkMoviCuerpo ON
stkMoviCuerpo.stkMoviCabe = stkMoviCuerpoCombo.stkMoviCabeComponente AND
stkMoviCuerpo.Renglon = stkMoviCuerpoCombo.RenglonComponente 
GROUP BY venMovStkHist.venMovimientos, venMovStkHist.RenglonCuerpo ) AS stkMoviCuerpo ON
venMovConStockCr.venMovimientos = stkMoviCuerpo.venMovimientos and 
venMovConStockCr.RenglonCuerpo =stkMoviCuerpo.RenglonCuerpo
INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
							  venClieHabitual.Sucursal = venMovimientos.Sucursal
INNER JOIN venZona ON venZona.venZona = venClieHabitual.Zona_Id
INNER JOIN venRegion ON venRegion.venRegion = venClieHabitual.Region_Id
INNER JOIN venTiposClie ON venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
INNER JOIN venVendedores ON  venVendedores.venVendedores = venMovimientos.Vendedor_Id
INNER JOIN stkTipos ON stkTipos.stkTipos = stkProductos.Tipo_Id
LEFT JOIN stkFamilias ON  stkFamilias.stkFamilias = stkProductos.Familia_Id
LEFT JOIN stkGrupos ON  stkGrupos.stkGrupos = stkProductos.Grupo_Id
INNER JOIN venMovConStock ON  venMovConStock.venMovimientos= venMovimientos.venMovimientos
INNER JOIN venListasPrecios ON  venListasPrecios.venListasPrecios = venMovConStock.ListaPrecio_Id
WHERE
	stkProductos.Clase = 'C' AND 
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	conAsientos.Fecha Between @FechaDesde and @FechaHasta and
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	venZona.Zona_Id Between @ZonaDesde and @ZonaHasta and
	venRegion.Region_Id Between @RegionDesde and @RegionHasta and
	venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and 
	venTiposClie.TipoClie_Id Between @TipoDesde and @TipoHasta and 
	ISNULL(stkFamilias.Familia_Id,'') Between @FamiliaDesde and @FamiliaHasta and 
	ISNULL(stkGrupos.Grupo_Id,'') Between @GrupoDesde and @GrupoHasta 
GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, 	stkUniMed.Medida_Id, 
	stkProductos.Clase, stkFamilias.Familia_Id, stkFamilias.Descripcion,stkProductos.stkProductos, 
		stkGrupos.Grupo_Id, stkGrupos.Descripcion,
		venClientes.Cliente_Id, venClientes.RazonSocial, venVendedores.Vendedor_Id, venVendedores.Nombre, 
		stkTipos.Tipo_Id, stkTipos.Descripcion 
having SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0

union all

SELECT stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, stkProductos.Clase,
		0 as CantidadVenta, 
		0 as MontoLista,
		0 as MontoVenta,
		SUM(stkMoviCuerpoReva.ImporteAjusteCosto) ,
		-SUM(stkMoviCuerpoReva.ImporteAjusteCosto) as Contribucion,
		ISNULL(stkFamilias.Familia_Id,'') AS Familia_Id, ISNULL(stkFamilias.Descripcion,'') DescripcionFamilia,
		ISNULL(stkGrupos.Grupo_Id,'') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,'')  DescripcionGrupo,
		' ' Cliente_Id, ' ' RazonSocial, ' ' Vendedor_Id, ' ' Nombre, 
		stkTipos.Tipo_Id, stkTipos.Descripcion 
		 from 
		    stkProductos INNER JOIN stkMoviCuerpoReva ON
			stkMoviCuerpoReva.Producto_Id = stkProductos.stkProductos 
			INNER JOIN conAsientos AS Revaluo ON 
			stkMoviCuerpoReva.stkMoviCabe = Revaluo.conAsientos 
			INNER JOIN genSucursalesEmpr AS SucReva ON SucReva.genSucursalesEmpr = Revaluo.Sucursal
			INNER JOIN stkUniMed ON  stkUniMed.stkUniMed = stkProductos.Medida_Id
			LEFT JOIN stkFamilias ON  stkFamilias.stkFamilias = stkProductos.Familia_Id
			LEFT JOIN stkGrupos ON  stkGrupos.stkGrupos = stkProductos.Grupo_Id
			INNER JOIN stkTipos ON stkTipos.stkTipos = stkProductos.Tipo_Id
			Where
			stkMoviCuerpoReva.ImporteAjusteCosto <> 0 and 
			Revaluo.Anulado = 0 and 
			Revaluo.Posteado = 1 and 
			Revaluo.Empresa_Id = @Empresa_Id and 
			Revaluo.Fecha between @FechaDesde and @FechaHasta and 
			SucReva.Sucursal BETWEEN @SucursalDesde and @SucursalHasta AND 
			@ClienteDesde = ' ' AND 
			stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
			@ZonaDesde =' ' AND 
			@RegionDesde =' ' AND 
			@VendedorDesde =' ' AND 
			@TipoDesde = ' ' AND 
			ISNULL(stkFamilias.Familia_Id,'') Between @FamiliaDesde and @FamiliaHasta and 
			ISNULL(stkGrupos.Grupo_Id,'') Between @GrupoDesde and @GrupoHasta 

GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, 	stkUniMed.Medida_Id, 
		stkProductos.Clase, stkFamilias.Familia_Id, stkFamilias.Descripcion,stkProductos.stkProductos, 
		stkGrupos.Grupo_Id, stkGrupos.Descripcion, stkTipos.Tipo_Id, stkTipos.Descripcion 
		) as xxx
GROUP BY Familia_Id,  DescripcionFamilia, 
case when @Resumido=0 then Producto_Id else ' ' end ,	case when @Resumido=0 then Descripcion else ' ' end ,
	case when @Resumido=0 then Medida_Id else ' ' end ,	case when @Resumido=0 then Clase else ' ' end , 
	case when @PorGrupo=1 then Grupo_Id else ' ' end , 	case when @PorGrupo=1 then DescripcionGrupo else ' ' end ,
	CASE @AgruparPor 
	WHEN 'C' Then Cliente_Id 
	WHEN 'V' Then Vendedor_Id 
	WHEN 'T' Then Tipo_Id 
	ELSE ' ' END ,
	CASE @AgruparPor 
	WHEN 'C' Then RazonSocial 
	WHEN 'V' Then Nombre
	WHEN 'T' Then DescripcionTipo
	ELSE ' ' END 
HAVING Sum(CantidadVenta) <> 0
ORDER BY 1



GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_venCorteDocumentacion.sql*/
drop procedure inf_venSegSTR
go
create procedure inf_venSegSTR
(
@pFechaHasta datetime
)
as
select genSegmentos.Segmento_Id, genSegmentos.Descripcion, dbo.Segmento(genAsiSegmentos.Segmento_Id, 
genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
MAX(genAsiSegmentos.Segmento1N) , genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N,
genAsiSegmentos.Segmento4N ) as SegmentoSTR
from genAsiSegmentos inner join venMovimientos on genAsiSegmentos.Asiento_Id=venMovimientos.venMovimientos
inner join genSegmentos on genSegmentos.genSegmentos=genAsiSegmentos.Segmento_Id
inner join conAsientos on conAsientos.conAsientos=genAsiSegmentos.Asiento_Id
where conAsientos.Fecha<@pFechaHasta
group by genSegmentos.Segmento_Id, genSegmentos.Descripcion, genAsiSegmentos.Segmento_Id,  genAsiSegmentos.Segmento2N,
genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N, genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,
genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C
order by 1
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venCotizaciones.sql*/
DROP PROCEDURE INF_venCotizPrincipal
GO
CREATE PROCEDURE INF_venCotizPrincipal  (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)

	AS

	

	Select venCotizSegmento.venCotizaciones, 
	dbo.Segmento(venCotizSegmento.Segmento_Id, venCotizSegmento.Segmento1C,
	venCotizSegmento.Segmento2C, venCotizSegmento.Segmento3C, venCotizSegmento.Segmento4C, 
	venCotizSegmento.Segmento1N, venCotizSegmento.Segmento2N, venCotizSegmento.Segmento3N, 
	venCotizSegmento.Segmento4N) as SegmentoStr, 
	genSegmentos.Segmento_Id, venCotizSegmento.Segmento1C,
	venCotizSegmento.Segmento2C, venCotizSegmento.Segmento3C, venCotizSegmento.Segmento4C, 
	venCotizSegmento.Segmento1N, venCotizSegmento.Segmento2N, venCotizSegmento.Segmento3N, venCotizSegmento.Segmento4N, 
	venCotizaciones.Fecha, venCotizaciones.Fecha_Registro , venCotizaciones.Cambio,
	venClientes.Cliente_Id, ISNULL(venCotizCliente.RazonSocial, venClientes.RazonSocial) as RazonSocial, 
	ISNULL(venCotizCliente.CUIT, genEntidades.Cuit) Cuit,
	ISNULL(venCotizCliente.RazonSocial, venClieHabitual.NombreFantasia) as NombreFantasia , 
	ISNULL(venCotizCliente.Direccion1, venClieHabitual.Direccion1_Fact) Direccion1_Fact, 
	ISNULL(venCotizCliente.NroExterior, venClieHabitual.NroExterior_Fact) NroExterior_Fact,
	ISNULL(venCotizCliente.NroInterior, venClieHabitual.NroInterior_Fact) NroInterior_Fact,
	ISNULL(venCotizCliente.Direccion2, venClieHabitual.Direccion2_Fact ) as Direccion2_Fact, 
	ISNULL(venCotizCliente.Localidad, venClieHabitual.Localidad_Fact) Localidad_Fact, 
	ISNULL(venCotizCliente.CodigoPostal, venClieHabitual.CodPostal_Fact) CodPostal_Fact, 
	ISNULL(genProvinciasE.Provincia_Id, genProvincias.Provincia_Id) AS Provincia_Id_Fact,
	ISNULL(genProvinciasE.Descripcion, genProvincias.Descripcion) AS DescripcionProvincia_Id_Fact, 
	ISNULL(genProvinciasE.CodFiscal, genProvincias.CodFiscal) as CodFiscalProv,
	ISNULL(genPaisesE.Pais_Id, genPaises.Pais_Id) as Pais_Id_Fact, 
	ISNULL(genPaisesE.Descripcion, genPaises.Descripcion) as DescripcionPais_Id,
	ISNULL(genPaisesE.CodFiscal, genPaises.CodFiscal) as CodFiscalPais, 
	venSubTipoMov.SubTipoMov_Id, venSubTipoMov.Descripcion as DescripcionSubTipoMov,
	venCotizaciones.ImporteTotal as Importe, venCotizaciones.Observaciones, 
	venCotizaciones.UsoCfdi, 
	venCotizaciones.MetodoPago as FormaPago, EntidadBasica.Descripcion as DescripcionFormaPago,
	/*venCotizaciones.TipoProceso, venCotizaciones.TipoComite, venCotizaciones.idContabilidad,*/
	genMonedas.Moneda_Id, genMonedas.Descripcion AS DescripcionMoneda, 
		venCondPago.CondPagoCli_Id,	venCondPago.Descripcion DescripcionCondPago, ImporteTotal,
		venCotizaciones.Bonificacion1, venCotizaciones.Bonificacion2, venCotizaciones.Bonificacion3, 
		venCotizaciones.Bonificacion4, venCotizaciones.Bonificacion5, 
		genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as NombreUsuarios, 
		genUsuarios.Email as EMailUsuario, venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVendedor, 
		venCotizaciones.Vigencia, venClieHabitual.EMail as MailCliente, 
		venClieHabitual.Telefonos as TelefonoCliente
	From venCotizSegmento
	Inner join genSegmentos on venCotizSegmento.Segmento_Id = genSegmentos.genSegmentos
	INNER JOIN venCotizaciones ON venCotizaciones.venCotizaciones = venCotizSegmento.venCotizaciones
	INNER JOIN genEntidades ON genEntidades.genEntidades =venCotizaciones.Cliente_Id 
	Inner join venClientes ON venClientes.genEntidades = genEntidades.genEntidades 
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venCotizaciones.Cliente_Id and 
		venClieHabitual.Sucursal =venCotizaciones.Sucursal
	INNER JOIN genProvincias ON	genProvincias.genProvincias = venClieHabitual.Provincia_Id_Fact
	INNER JOIN genPaises ON	genPaises.genPaises = venClieHabitual.Pais_Id_Fact
	INNER JOIN venSubTipoMov ON	venSubTipoMov.venSubTipoMov = venCotizaciones.SubTipoMov_Id
	INNER JOIN genMonedas ON genMonedas.genMonedas = venCotizaciones.Moneda_Id
	/*left join genEntidadesBasicasValor NEntidadBasica on NEntidadBasica.Entidad_Id=7 and NEntidadBasica.Dominio_Id='MX' and NEntidadBasica.Clave=venCotizaciones.NMetodoPago*/
	left join genEntidadesBasicasValor EntidadBasica on EntidadBasica.Entidad_Id=6 and EntidadBasica.Dominio_Id='MX' and EntidadBasica.Clave=venCotizaciones.MetodoPago
	inner join venTipoMov on venTipoMov.venTipoMov=venSubTipoMov.venTipoMov
	Inner Join venCondFiscal On venCondFiscal.venCondFiscal = venClientes.CondFisc_Id
	Inner Join venCondPago On venCondPago.venCondPago = venCotizaciones.CondPagoCli_Id
	INNER JOIN venVendedores ON  venVendedores.venVendedores = venCotizaciones.Vendedor_Id
	inner join genUsuarios ON  genUsuarios.genUsuarios = venCotizaciones.Usuario_Id
	LEFT join (venCotizCliente  INNER JOIN genProvincias genProvinciasE ON 
		genProvinciasE.genProvincias = venCotizCliente.Provincia_Id
		INNER JOIN genPaises genPaisesE ON genPaisesE.genPaises = venCotizCliente.Pais_Id)
		ON  venCotizCliente.Cotizacion_Id = venCotizaciones.venCotizaciones
	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		venCotizSegmento.Segmento1C = @pSegmento1C and 
		venCotizSegmento.Segmento2C = @pSegmento2C and 
		venCotizSegmento.Segmento3C = @pSegmento3C and 
		venCotizSegmento.Segmento4C = @pSegmento4C and 
		venCotizSegmento.Segmento1N = @pSegmento1N and 
		venCotizSegmento.Segmento2N = @pSegmento2N and  
		venCotizSegmento.Segmento3N = @pSegmento3N and  
		venCotizSegmento.Segmento4N = @pSegmento4N 
			

GO


DROP PROCEDURE INF_venCotizCuerpo
GO
CREATE PROCEDURE INF_venCotizCuerpo (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)


	AS

	SELECT venCotizCuerpo.Renglon_Co, stkProductos.Producto_Id, stkProductos.UrlProd,
		stkProductos.Descripcion, stkProductos.DescripcionDetallada, stkProductos.Description, 
		stkUniMed.Medida_Id as MedidaProd, stkUniMed.CodigoFiscal as FiscalMedidaProd,
		MedidaMov.Medida_Id as MedidaMov, MedidaMov.CodigoFiscal as FiscalMedidaMov,
		venCotizCuerpo.CantidadPedida, venCotizCuerpo.CantidadOriginal, 
		venCotizCuerpo.PrecioForm, venCotizCuerpo.PrecioLista, venCotizCuerpo.PrecioVenta, 
		venCotizCuerpo.Observaciones, 
		venCotizCuerpo.CantidadPedida*venCotizCuerpo.PrecioVenta SubTotal,
		stkDepositos.Deposito_Id
		
	from venCotizCuerpo inner join venCotizSegmento ON
		venCotizCuerpo.Cotizacion_Id = venCotizSegmento.venCotizaciones
		INNER JOIN genSegmentos ON 
		venCotizSegmento.Segmento_Id = genSegmentos.genSegmentos
		INNER JOIN stkProductos ON 
		stkProductos.stkProductos = venCotizCuerpo.Producto_Id
		inner join stkUniMed on 
		stkUniMed.stkUniMed = stkProductos.Medida_Id
		inner join stkUniMed as MedidaMov on 
		MedidaMov.stkUniMed = venCotizCuerpo.Medida_Id
		inner join stkDepositos ON stkDepositos.stkDepositos = venCotizCuerpo.Deposito_Id
	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		venCotizSegmento.Segmento1C = @pSegmento1C and 
		venCotizSegmento.Segmento2C = @pSegmento2C and 
		venCotizSegmento.Segmento3C = @pSegmento3C and 
		venCotizSegmento.Segmento4C = @pSegmento4C and 
		venCotizSegmento.Segmento1N = @pSegmento1N and 
		venCotizSegmento.Segmento2N = @pSegmento2N and  
		venCotizSegmento.Segmento3N = @pSegmento3N and  
		venCotizSegmento.Segmento4N = @pSegmento4N  
	ORDER BY 1

GO


DROP PROCEDURE INF_venCotizExpedi
GO
CREATE PROCEDURE INF_venCotizExpedi (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)
	as
	

SELECT genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion, genSucursalesEmpr.Serie,
		genSucursalesEmpr.Direccion, genSucursalesEmpr.Localidad, 
		genProvincias.Provincia_Id,genProvincias.Descripcion as DescripcionProvincia,
		genPaises.Pais_Id, genPaises.Descripcion as DescripcionPais,
		genSucursalesEmpr.CodigoPostal
		FROM venCotizaciones INNER JOIN venCotizSegmento ON 	venCotizSegmento.venCotizaciones= venCotizaciones.venCotizaciones
		INNER JOIN genUsuarios ON genUsuarios.genUsuarios = venCotizaciones.Usuario_Id
		LEFT JOIN genUsuariosSucursal ON genUsuariosSucursal.Usuario_Id = genUsuarios.genUsuarios AND 
					genUsuariosSucursal.Empresa_Id = venCotizaciones.Empresa_Id
		INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = ISNULL(genUsuariosSucursal.Sucursal_Id, genUsuarios.Sucursal)
		INNER JOIN genSegmentos ON genSegmentos.genSegmentos = venCotizSegmento.Segmento_Id
		INNER JOIN genProvincias ON  genProvincias.genProvincias = genSucursalesEmpr.Provincia_Id 
		INNER JOIN genPaises ON  genPaises.genPaises = genSucursalesEmpr.Pais_Id
		Where 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		venCotizSegmento.Segmento1C = @pSegmento1C and 
		venCotizSegmento.Segmento2C = @pSegmento2C and 
		venCotizSegmento.Segmento3C = @pSegmento3C and 
		venCotizSegmento.Segmento4C = @pSegmento4C and 
		venCotizSegmento.Segmento1N = @pSegmento1N and 
		venCotizSegmento.Segmento2N = @pSegmento2N and  
		venCotizSegmento.Segmento3N = @pSegmento3N and  
		venCotizSegmento.Segmento4N = @pSegmento4N and
		venCotizSegmento.Empresa_Id = @pEmpresa_Id
		order by 2




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_VenEdoCta.sql*/
DROP PROCEDURE Inf_VenEdoCta
GO


CREATE PROCEDURE Inf_VenEdoCta(
@ClienteDesde VarChar(15), 
@ClienteHasta VarChar(15), 
@Pendiente bit, 
@FechaDesde DateTime, 
@FechaHasta DateTime,
@Empresa Int,
@VendedorDesde VarChar(5), 
@VendedorHasta VarChar(5), 
@Moneda_Id VarChar(5)=NULL
)

AS



if @Moneda_Id = ''
	set @Moneda_Id = NULL

SELECT venVendedores.Vendedor_Id, venVendedores.Nombre, venClientes.Cliente_Id, venClientes.RazonSocial, 
	conAsientos.Fecha,
	venClieHabitual.Telefonos, venClieHabitual.EMail, venClieHabitual.Contactos,
	venClieHabitual.Direccion1_Fact, venClieHabitual.CodPostal_Fact, venClieHabitual.Localidad_Fact,
	genProvincias.Descripcion Provincia , genPaises.Descripcion Pais, venCondPago.Descripcion CondPago,
	venMovimientos.venMovimientos, venTipoMov.TipoMovResumido, venTipoMov.Descripcion  Tipomovs, 
	venSubTipoMov.SubTipoMov_Id, venSubTipoMov.Descripcion as DescripcionSubTipo,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C,
	genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
	genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) Segmento, 
	 case when venTipoMov.Signo=1  then 
		--CASE WHEN @Pendiente=1 THEN  genMovCuotas.Saldo ELSE genMovCuotas.Importe END 
		genMovCuotas.Importe else 0 end 
		* case When @Moneda_Id IS NULL THEN dbo.func_TipoCambio(conAsientos.Moneda_id, @FechaHasta, @Empresa) else 1 end as Debe,
	case when venTipoMov.Signo=-1  then 
		--CASE WHEN @Pendiente=1 THEN  genMovCuotas.Saldo ELSE genMovCuotas.Importe END  
		genMovCuotas.Importe else 0 end 
		* case When @Moneda_Id IS NULL THEN dbo.func_TipoCambio(conAsientos.Moneda_id, @FechaHasta, @Empresa) else 1 end as Haber, 
	CASE WHEN @Pendiente=1 THEN  genMovCuotas.Saldo else genMovCuotas.Importe end * venTipoMov.Signo 
	* case When @Moneda_Id IS NULL THEN dbo.func_TipoCambio(conAsientos.Moneda_id, @FechaHasta, @Empresa) else 1 end as Saldo, 
	CASE WHEN @Pendiente=1 THEN  genMovCuotas.Saldo else genMovCuotas.Importe end * venTipoMov.Signo 
	* case When @Moneda_Id IS NULL THEN dbo.func_TipoCambio(conAsientos.Moneda_id, @FechaHasta, @Empresa) else 1 end as SaldoAcum, 
	genMovCuotas.CuotaNro, genMovCuotas.FechaVencimiento, genMonedas.Moneda_Id, conAsientos.Cambio, 
	genUsuarios.Apellido_y_Nombres, conAsientos.FechaRegistro,
	(SELECT SUM(A.Saldo*D.Signo* CASE WHEN @Moneda_Id IS NULL 
	THEN dbo.func_TipoCambio(F.Moneda_id, GETDATE(), @Empresa) ELSE 1 END) SaldoV 
	FROM genMovCuotas A 
	INNER JOIN venMovimientos B ON A.Asiento_Id = B.venMovimientos
	INNER JOIN conAsientos F ON F.conAsientos = A.Asiento_Id
	INNER JOIN venSubTipoMov C ON C.venSubTipoMov = B.venSubTipoMov_Id
	INNER JOIN venTipoMov D ON D.venTipoMov = C.venTipoMov
	WHERE 
	f.anulado = 0 and 
	f.posteado = 1 and 
	B.Cliente_Id = venMovimientos.Cliente_Id AND
	A.FechaVencimiento < GETDATE()) SaldoV,
	(SELECT SUM(A.Saldo*D.Signo* CASE WHEN @Moneda_Id IS NULL 
	THEN dbo.func_TipoCambio(F.Moneda_id, GETDATE(), @Empresa) ELSE 1 END) SaldoV 
	FROM genMovCuotas A 
	INNER JOIN venMovimientos B ON A.Asiento_Id = B.venMovimientos
	INNER JOIN conAsientos F ON F.conAsientos = A.Asiento_Id
	INNER JOIN venSubTipoMov C ON C.venSubTipoMov = B.venSubTipoMov_Id
	INNER JOIN venTipoMov D ON D.venTipoMov = C.venTipoMov
	WHERE 
	f.anulado = 0 and 
	f.posteado = 1 and 
	B.Cliente_Id = venMovimientos.Cliente_Id AND
	A.FechaVencimiento >= GETDATE()) SaldoA
FROM venMovimientos 
INNER JOIN venClientes ON venMovimientos.Cliente_Id= venClientes.genEntidades
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id = venMovimientos.venMovimientos
INNER JOIN conAsientos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
INNER JOIN genMovCuotas ON genMovCuotas.Asiento_Id =venMovimientos.venMovimientos
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
inner join genUsuarios ON genUsuarios.genUsuarios = conAsientos.Usuario_Id
INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
	venClieHabitual.Sucursal = venClientes.SucursalPredeter
inner join venVendedores ON venVendedores.venVendedores = venClieHabitual.Vendedor_Id
INNER JOIN genProvincias ON venClieHabitual.Provincia_Id_Fact = genProvincias.genProvincias
INNER JOIN genPaises ON venClieHabitual.Pais_Id_Fact = genPaises.genPaises
INNER JOIN venCondPago ON venCondPago.venCondPago = venClieHabitual.CondPagoCli_Id
WHERE
	conAsientos.Empresa_Id =@Empresa and conAsientos.Anulado = 0 And
	conAsientos.Posteado = 1 and 
	venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	((genMovCuotas.Saldo > 0  and @Pendiente = 1) or (
			conAsientos.Fecha between @FechaDesde and @FechaHasta and 
				@Pendiente = 0)) and 
				genMonedas.Moneda_Id = ISNULL(@Moneda_Id, genMonedas.Moneda_Id)
UNION ALL 
SELECT venVendedores.Vendedor_Id, venVendedores.Nombre, venClientes.Cliente_Id, venClientes.RazonSocial, 
	DATEADD(dd,-1,@FechaDesde) as Fecha, 
		venClieHabitual.Telefonos, venClieHabitual.EMail, venClieHabitual.Contactos,
		venClieHabitual.Direccion1_Fact, venClieHabitual.CodPostal_Fact, venClieHabitual.Localidad_Fact,
		genProvincias.Descripcion Provincia , genPaises.Descripcion Pais, venCondPago.Descripcion CondPago,
		0 as venMovimientos,  ' ' TipoMov, 'Saldo Inicial' as Tipomovs, 
		' ' SubTipoMov_Id, 'Saldo Inicial' as DescripcionSubTipo,
		'Saldo Inicial' Segmento, 
	
	case when  
		SUM(genMovCuotas.Importe *venTipoMov.Signo ) > 0
	 then 
		SUM(genMovCuotas.Importe *venTipoMov.Signo ) ELSE 0 END as Debe,
	case when  
		SUM(genMovCuotas.Importe *venTipoMov.Signo ) < 0
	 then 
		-SUM(genMovCuotas.Importe *venTipoMov.Signo) ELSE 0  END as Haber,
	SUM(genMovCuotas.Importe *venTipoMov.Signo ) as Saldo, 
	SUM(genMovCuotas.Importe *venTipoMov.Signo ) as SaldoAcum, 
	0 CuotaNro,
	DATEADD(dd,-1,@FechaDesde) as FechaVenc,  genMonedas.Moneda_Id, 1 Cambio, 
	' ' Apellido_y_Nombres,DATEADD(dd,-1,@FechaDesde),
	(SELECT SUM(A.Saldo*D.Signo* CASE WHEN @Moneda_Id IS NULL 
	THEN dbo.func_TipoCambio(F.Moneda_id, GETDATE(), @Empresa) ELSE 1 END) SaldoV 
	FROM genMovCuotas A 
	INNER JOIN venMovimientos B ON A.Asiento_Id = B.venMovimientos
	INNER JOIN conAsientos F ON F.conAsientos = A.Asiento_Id
	INNER JOIN venSubTipoMov C ON C.venSubTipoMov = B.venSubTipoMov_Id
	INNER JOIN venTipoMov D ON D.venTipoMov = C.venTipoMov
	WHERE 
	f.anulado = 0 and 
	f.posteado = 1 and 
	B.Cliente_Id = venMovimientos.Cliente_Id AND
	A.FechaVencimiento < GETDATE()) SaldoV,
	(SELECT SUM(A.Saldo*D.Signo* CASE WHEN @Moneda_Id IS NULL 
	THEN dbo.func_TipoCambio(F.Moneda_id, GETDATE(), @Empresa) ELSE 1 END) SaldoV 
	FROM genMovCuotas A 
	INNER JOIN venMovimientos B ON A.Asiento_Id = B.venMovimientos
	INNER JOIN conAsientos F ON F.conAsientos = A.Asiento_Id
	INNER JOIN venSubTipoMov C ON C.venSubTipoMov = B.venSubTipoMov_Id
	INNER JOIN venTipoMov D ON D.venTipoMov = C.venTipoMov
	WHERE 
	f.anulado = 0 and 
	f.posteado = 1 and 
	B.Cliente_Id = venMovimientos.Cliente_Id AND
	A.FechaVencimiento >= GETDATE()) SaldoA

FROM venMovimientos 
INNER JOIN venclientes ON venMovimientos.Cliente_Id= venClientes.genEntidades
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id = venMovimientos.venMovimientos
INNER JOIN conAsientos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
INNER JOIN genMovCuotas ON genMovCuotas.Asiento_Id =venMovimientos.venMovimientos
INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
inner join genUsuarios ON genUsuarios.genUsuarios = conAsientos.Usuario_Id
INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
	venClieHabitual.Sucursal = venClientes.SucursalPredeter
inner join venVendedores ON venVendedores.venVendedores = venClieHabitual.Vendedor_Id
INNER JOIN genProvincias ON venClieHabitual.Provincia_Id_Fact = genProvincias.genProvincias
INNER JOIN genPaises ON venClieHabitual.Pais_Id_Fact = genPaises.genPaises
INNER JOIN venCondPago ON venCondPago.venCondPago = venClieHabitual.CondPagoCli_Id
WHERE
	conAsientos.Empresa_Id =@Empresa and conAsientos.Anulado = 0 And
	conAsientos.Posteado = 1 and 
	venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	conAsientos.Fecha < @FechaDesde and
	@Pendiente = 0 and
	genMonedas.Moneda_Id = ISNULL(@Moneda_Id, genMonedas.Moneda_Id)
GROUP BY genMonedas.Moneda_Id,  venVendedores.Vendedor_Id, venVendedores.Nombre, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
		venClieHabitual.Telefonos, venClieHabitual.EMail, 
		venClieHabitual.Contactos,
		venClieHabitual.Direccion1_Fact, venClieHabitual.CodPostal_Fact, venClieHabitual.Localidad_Fact,
		genProvincias.Descripcion, genPaises.Descripcion, venCondPago.Descripcion, venMovimientos.Cliente_Id
Having SUM(genMovCuotas.Importe *venTipoMov.Signo ) <> 0
ORDER BY 1,3, 5, 14

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venFactProdPend.sql*/
-- Inf_venFactProdPend ' ','ZZZ', 1
DROP Procedure Inf_venFactProdPend
GO
CREATE Procedure Inf_venFactProdPend(
	@SucursalDesde VarChar(25),
	@SucursalHasta VarChar(25),
	@Empresa_Id int
)

AS

SELECT  genAsiSegmentos.Asiento_Id, conAsientos.Fecha, venMovConStockCr.RenglonCuerpo, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) as Comprobante, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	venMovConStockCr.CantPendiente , venMovConStockCr.CantFacturada
	FROM genAsiSegmentos inner join conAsientos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venMovimientos ON 
	venMovimientos.venMovimientos = conAsientos.conAsientos
	INNER JOIN venMovConStockCr ON 
	venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
	INNER JOIN stkProductos ON 
	stkProductos.stkProductos = venMovConStockCr.Producto_Id
	INNER JOIN stkUniMed ON 
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN venClientes ON
	venClientes.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN genSucursalesEmpr ON 
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	where
		venMovimientos.venTipoMov = 'F' AND 
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa_Id AND 
		venMovConStockCr.CantPendiente > 0 AND 
		genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta
order by 2,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venFactuCabe.sql*/

--INF_venFactuCabe  1, 'FC',2,0,0,0,'FC','3464','A',' '
--INF_venFactuCuerpo 1, 'FC',1,0,0,0,'F','0001',' ',' '
--INF_venFactuImpuestos 1, 'FC',766,0,0,0,'F','0004','A',' '
-- INF_venFactuComRel 1, 'FC',1,0,0,0,'F','0001',' ',' '
--INF_venFactuINE 1, 'FC',1,0,0,0,'F','0001',' ',' '

DROP PROCEDURE INF_venFactuCabe 
GO
CREATE PROCEDURE INF_venFactuCabe (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)
	as
	Select N, Impuesto_Id, Descripcion, Importe Into ##FacImpuestos From (
		Select ROW_NUMBER() OVER( ORDER BY TipoImpuesto ) as N, SPOrig.* From
		(SELECT venImpuestos.Impuesto_Id, venImpuestos.Descripcion, venMovImpuestos.Importe, venImpuestos.TipoImpuesto
		FROM venMovImpuestos 
		INNER JOIN venImpuestos ON venMovImpuestos.Impuesto_Id = venImpuestos.venImpuestos
		Inner Join genAsiSegmentos On genAsiSegmentos.Asiento_Id = venMovImpuestos.venMovimientos
		Where 
		genAsiSegmentos.Segmento_Id = dbo.FuncFKgenSegmentos(@pSegmento_Id) and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N And
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
		) SpOrig) a


	Select genAsiSegmentos.Asiento_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoStr, 
	genSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N, 
	conAsientos.Fecha, conAsientos.FechaRegistro, conAsientos.Cambio,
	venClientes.Cliente_Id, venClientes.RazonSocial, genEntidades.Cuit,
	venClieHabitual.NombreFantasia, venClieHabitual.Direccion1_Fact, 
	venClieHabitual.NroExterior_Fact, venClieHabitual.NroInterior_Fact,
	venClieHabitual.Direccion2_Fact, venClieHabitual.Localidad_Fact, 
	venClieHabitual.CodPostal_Fact, genProvincias.Provincia_Id AS Provincia_Id_Fact,
	genProvincias.Descripcion AS DescripcionProvincia_Id_Fact, genProvincias.CodFiscal as CodFiscalProv,
	genPaises.Pais_Id as Pais_Id_Fact, genPaises.Descripcion as DescripcionPais_Id,

	venClieHabitual.Direccion1_Entr, 
	venClieHabitual.NroExterior_Entr, venClieHabitual.NroInterior_Entr,
	venClieHabitual.Direccion2_Entr, venClieHabitual.Localidad_Entr, 
	venClieHabitual.CodPostal_Entr, genProvinciasE.Provincia_Id AS Provincia_Id_Entr,
	genProvinciasE.Descripcion AS DescripcionProvincia_Id_Entr, 
	genPaisesE.Pais_Id as Pais_Id_Entr, genPaisesE.Descripcion as DescripcionPaisEntr,
	venSubTipoMov.SubTipoMov_Id, 
	venSubTipoMov.Descripcion as DescripcionSubTipoMov,
	venMovimientos.Importe, conAsientos.Observaciones, 
	venMovimientosFiscal.ClaveFiscal, venMovimientosFiscal.Fecha as FechaFiscal, venMovimientosMetodoPago.UsoCfdi, 
	venMovimientosMetodoPago.MetodoPago as FormaPago, EntidadBasica.Descripcion as DescripcionFormaPago
	, venMovimientosMetodoPago.NMetodoPago, NEntidadBasica.Descripcion as NMetodoPagoDescripcion,
	venMovimientosFiscal.SelloDigital, venMovimientosFiscal.FechaString as FechaTimbre, 
	venMovimientosFiscal.SelloFiscal, venMovimientosFiscal.NoCertificadoFiscal, 
	venMovimientosFiscal.NoCertificadoPropio, venMovimientosFiscal.RfcProvCertif, 
	venMovimientosFiscal.TipoProceso, venMovimientosFiscal.TipoComite, venMovimientosFiscal.idContabilidad,
	genAsiSegmentos.Segmento1N,venTipoMov.Signo, genMonedas.Moneda_Id, genMonedas.Descripcion AS DescripcionMoneda, 
	genMonedas.CodigoFiscal as MonedaFiscal, venCondFiscal.CondFisc_Id, venCondFiscal.Descripcion DescripcionCondFiscal, venCondFiscal.CodigoFiscal,
	IsNull(venMovimientosFiscal.Comprobante_Id, 0) TipoComprobante, venCondPago.CondPagoCli_Id,
	venCondPago.Descripcion DescripcionCondPago, venTipoMov.Descripcion DescripcionTipoMov,
		IsNull(Imp1.Impuesto_Id, '') Imp1,
		IsNull(Imp1.Descripcion, '') ImpDesc1,
		IsNull(Imp1.Importe, 0) ImpImporte1,
		IsNull(Imp2.Impuesto_Id, '') Imp2,
		IsNull(Imp2.Descripcion, '') ImpDesc2,
		IsNull(Imp2.Importe, 0) ImpImporte2,
		IsNull(Imp3.Impuesto_Id, '') Imp3,
		IsNull(Imp3.Descripcion, '') ImpDesc3,
		IsNull(Imp3.Importe, 0) ImpImporte3,
		IsNull(Imp4.Impuesto_Id, '') Imp4,
		IsNull(Imp4.Descripcion, '') ImpDesc4,
		IsNull(Imp4.Importe, 0) ImpImporte4,
		IsNull(Imp5.Impuesto_Id, '') Imp5,
		IsNull(Imp5.Descripcion, '') ImpDesc5,
		IsNull(Imp5.Importe, 0) ImpImporte5,
		venMovimientos.Bonificacion1 + venMovimientos.Bonificacion2 + venMovimientos.Bonificacion3 + venMovimientos.Bonificacion4 + venMovimientos.Bonificacion5 Bonificacion,
	venClientes.CbuBanco, (Select Max(FechaVencimiento) From genMovCuotas Where genMovCuotas.Asiento_Id = venMovimientos.venMovimientos) FechaVencimiento, 
		ISNULL(dbo.Segmento(venPediSegmentos.Segmento_Id, venPediSegmentos.Segmento1C,
		venPediSegmentos.Segmento2C,venPediSegmentos.Segmento3C, venPediSegmentos.Segmento4C,
		venPediSegmentos.Segmento1N, venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,
		venPediSegmentos.Segmento4N), ' ') AS Pedido,
		ISNULL(venPedidos.CliOrdenCompra,' ') AS CliOrdenCompra,
		ISNULL(venPedidos.venNroPedido,' ') AS venNroPedido, 
		venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVendedor, 
		genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as NombreUsuario, genUsuarios.Email as eMailUsuario,
		venClieHabitual.EMail MailCliente, venClieHabitual.Telefonos TelefonoCliente, 
		Usos.Descripcion as DescUsoCfdi, genTiposDoc.TipoDoc,
		CAST(
             CASE
                  WHEN conAsientos.Anulado = 1 or conAsientosAnul.FechaAnulacion is not null
                     THEN 1
                  ELSE 0
             END AS bit) as Anulado

	From genAsiSegmentos 
	Inner join genSegmentos on genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
	INNER JOIN venMovimientos ON venMovimientos.venMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN conAsientos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genEntidades ON genEntidades.genEntidades =venMovimientos.Cliente_Id 
	Inner join venClientes ON venClientes.genEntidades = genEntidades.genEntidades 
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id and 
		venClieHabitual.Sucursal =venMovimientos.Sucursal
	INNER JOIN genProvincias ON	genProvincias.genProvincias = venClieHabitual.Provincia_Id_Fact
	INNER JOIN genPaises ON	genPaises.genPaises = venClieHabitual.Pais_Id_Fact
	INNER JOIN genProvincias genProvinciasE ON	genProvinciasE.genProvincias = venClieHabitual.Provincia_Id_Entr
	INNER JOIN genPaises genPaisesE ON	genPaisesE.genPaises = venClieHabitual.Pais_Id_Entr
	INNER JOIN venSubTipoMov ON	venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	INNER JOIN genMonedas ON genMonedas.genMonedas = conAsientos.Moneda_Id
	LEFT JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
	INNER JOIN genUsuarios ON  genUsuarios.genUsuarios = conAsientos.Usuario_Id
	LEFT JOIN venMovimientosFiscal ON venMovimientosFiscal.venMovimientos = venMovimientos.venMovimientos
	left join venMovimientosMetodoPago on venMovimientosMetodoPago.venMovimientos=venMovimientos.venMovimientos
	left join genEntidadesBasicasValor NEntidadBasica on NEntidadBasica.Entidad_Id=7 and NEntidadBasica.Dominio_Id='MX' and NEntidadBasica.Clave=venMovimientosMetodoPago.NMetodoPago
	left join genEntidadesBasicasValor EntidadBasica on EntidadBasica.Entidad_Id=6 and EntidadBasica.Dominio_Id='MX' and EntidadBasica.Clave=venMovimientosMetodoPago.MetodoPago
	left join genEntidadesBasicasValor Usos on Usos.Entidad_Id=4 and Usos.Dominio_Id='MX' and Usos.Clave=venMovimientosMetodoPago.UsoCfdi
	inner join venTipoMov on venTipoMov.venTipoMov=venMovimientos.venTipoMov
	LEFT Join venCondFiscal On venCondFiscal.venCondFiscal = venClientes.CondFisc_Id
	LEFT Join venCondPago On venCondPago.venCondPago = venMovimientos.CondPagoCli_Id
	Left Join ##FacImpuestos Imp1 On Imp1.N = 1
	Left Join ##FacImpuestos Imp2 On Imp2.N = 2
	Left Join ##FacImpuestos Imp3 On Imp3.N = 3
	Left Join ##FacImpuestos Imp4 On Imp4.N = 4
	Left Join ##FacImpuestos Imp5 On Imp5.N >= 5
	LEFT join ((SELECT DISTINCT venMovConStockCrPed.venMovimientos, 
		venMovConStockCrPed.venPedidos  FROM venMovConStockCrPed) as venMovConStockCrPed 
		inner join venPedidos ON  venMovConStockCrPed.venPedidos = venPedidos.venPedidos
		INNER JOIN venPediSegmentos ON 	venPediSegmentos.venPedidos = venPedidos.venPedidos) ON
		venMovConStockCrPed.venMovimientos = venMovimientos.venMovimientos
	CROSS JOIN genInstalacion
	Left Join genTiposDoc On genTiposDoc.TipoDoc = genEntidades.TipoDoc and 
		genTiposDoc.Dominio_Id =genInstalacion.Dominio_Id
	/*
	Left Join _FacImpuestos Imp1 On Imp1.N = 1
	Left Join _FacImpuestos Imp2 On Imp2.N = 2
	Left Join _FacImpuestos Imp3 On Imp3.N = 3
	Left Join _FacImpuestos Imp4 On Imp4.N = 4
	Left Join _FacImpuestos Imp5 On Imp5.N >= 5
	*/
	left join conAsientosAnul on conAsientos.conAsientos= conAsientosAnul.Asiento_Id
	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N  and 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
UNION ALL -- CARTA PORTE TRAE EL CLIENTE EN NUKK
	Select genAsiSegmentos.Asiento_Id, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) as SegmentoStr, 
	genSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N, 
	conAsientos.Fecha, conAsientos.FechaRegistro, conAsientos.Cambio,
	' ' Cliente_Id, genEmpresas.RazonSocial, genEmpresas.Cuit,
	genEmpresas.RazonSocial, genEmpresas.Calle, 
	genEmpresas.NoExterior, genEmpresas.NoInterior,
	genEmpresas.Colonia, genEmpresas.Localidad, 
	genEmpresas.CodigoPostal, genProvincias.Provincia_Id AS Provincia_Id_Fact,
	genProvincias.Descripcion AS DescripcionProvincia_Id_Fact, genProvincias.CodFiscal as CodFiscalProv,
	genPaises.Pais_Id as Pais_Id_Fact, genPaises.Descripcion as DescripcionPais_Id,
	genSucursalesEmpr.Direccion, 
	' ', ' ',
	' ', genSucursalesEmpr.Localidad, 
	genSucursalesEmpr.CodigoPostal, genProvinciasE.Provincia_Id AS Provincia_Id_Entr,
	genProvinciasE.Descripcion AS DescripcionProvincia_Id_Entr, 
	genPaisesE.Pais_Id as Pais_Id_Entr, genPaisesE.Descripcion as DescripcionPaisEntr,
	venSubTipoMov.SubTipoMov_Id, 
	venSubTipoMov.Descripcion as DescripcionSubTipoMov,
	venMovimientos.Importe, conAsientos.Observaciones, 
	venMovimientosFiscal.ClaveFiscal, venMovimientosFiscal.Fecha as FechaFiscal, venMovimientosMetodoPago.UsoCfdi, 
	venMovimientosMetodoPago.MetodoPago as FormaPago, EntidadBasica.Descripcion as DescripcionFormaPago
	, venMovimientosMetodoPago.NMetodoPago, NEntidadBasica.Descripcion as NMetodoPagoDescripcion,
	venMovimientosFiscal.SelloDigital, venMovimientosFiscal.FechaString as FechaTimbre, 
	venMovimientosFiscal.SelloFiscal, venMovimientosFiscal.NoCertificadoFiscal, 
	venMovimientosFiscal.NoCertificadoPropio, venMovimientosFiscal.RfcProvCertif, 
	venMovimientosFiscal.TipoProceso, venMovimientosFiscal.TipoComite, venMovimientosFiscal.idContabilidad,
	genAsiSegmentos.Segmento1N,venTipoMov.Signo, 'XXX' Moneda_Id, ' ' AS DescripcionMoneda, 
	'XXX' as MonedaFiscal, ' ' CondFisc_Id, ' ' DescripcionCondFiscal, ' ' CodigoFiscal,
	IsNull(venMovimientosFiscal.Comprobante_Id, 0) TipoComprobante, ' ' CondPagoCli_Id,
	' ' DescripcionCondPago, venTipoMov.Descripcion DescripcionTipoMov,
		IsNull(Imp1.Impuesto_Id, '') Imp1,
		IsNull(Imp1.Descripcion, '') ImpDesc1,
		IsNull(Imp1.Importe, 0) ImpImporte1,
		IsNull(Imp2.Impuesto_Id, '') Imp2,
		IsNull(Imp2.Descripcion, '') ImpDesc2,
		IsNull(Imp2.Importe, 0) ImpImporte2,
		IsNull(Imp3.Impuesto_Id, '') Imp3,
		IsNull(Imp3.Descripcion, '') ImpDesc3,
		IsNull(Imp3.Importe, 0) ImpImporte3,
		IsNull(Imp4.Impuesto_Id, '') Imp4,
		IsNull(Imp4.Descripcion, '') ImpDesc4,
		IsNull(Imp4.Importe, 0) ImpImporte4,
		IsNull(Imp5.Impuesto_Id, '') Imp5,
		IsNull(Imp5.Descripcion, '') ImpDesc5,
		IsNull(Imp5.Importe, 0) ImpImporte5,
		venMovimientos.Bonificacion1 + venMovimientos.Bonificacion2 + venMovimientos.Bonificacion3 + venMovimientos.Bonificacion4 + venMovimientos.Bonificacion5 Bonificacion,
		' ' CbuBanco, (Select Max(FechaVencimiento) From genMovCuotas Where genMovCuotas.Asiento_Id = venMovimientos.venMovimientos) FechaVencimiento, 
		ISNULL(dbo.Segmento(venPediSegmentos.Segmento_Id, venPediSegmentos.Segmento1C,
		venPediSegmentos.Segmento2C,venPediSegmentos.Segmento3C, venPediSegmentos.Segmento4C,
		venPediSegmentos.Segmento1N, venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,
		venPediSegmentos.Segmento4N), ' ') AS Pedido,
		ISNULL(venPedidos.CliOrdenCompra,' ') AS CliOrdenCompra,
		ISNULL(venPedidos.venNroPedido,' ') AS venNroPedido, 
		' ' Vendedor_Id, ' ' as NombreVendedor, 
		genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as NombreUsuario, genUsuarios.Email as eMailUsuario,
		' ' MailCliente, ' ' TelefonoCliente, 
		Usos.Descripcion as DescUsoCfdi, 0 TipoDoc,
		CAST(
             CASE
                  WHEN conAsientos.Anulado = 1 or conAsientosAnul.FechaAnulacion is not null
                     THEN 1
                  ELSE 0
             END AS bit) as Anulado

	From genAsiSegmentos 
	Inner join genSegmentos on genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
	INNER JOIN venMovimientos ON venMovimientos.venMovimientos = genAsiSegmentos.Asiento_Id
	INNER JOIN conAsientos ON conAsientos.conAsientos = genAsiSegmentos.Asiento_Id
	INNER JOIN genEmpresas ON  genEmpresas.genEmpresas = conAsientos.Empresa_Id
	INNER JOIN genProvincias ON	genProvincias.genProvincias = genEmpresas.Provincia_Id
	INNER JOIN genPaises ON	genPaises.genPaises = genEmpresas.Pais_Id
	INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	INNER JOIN genProvincias genProvinciasE ON	genProvinciasE.genProvincias = genSucursalesEmpr.Provincia_Id
	INNER JOIN genPaises genPaisesE ON	genPaisesE.genPaises = genSucursalesEmpr.Pais_Id
	INNER JOIN venSubTipoMov ON	venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	INNER JOIN genUsuarios ON  genUsuarios.genUsuarios = conAsientos.Usuario_Id
	LEFT JOIN venMovimientosFiscal ON venMovimientosFiscal.venMovimientos = venMovimientos.venMovimientos
	left join venMovimientosMetodoPago on venMovimientosMetodoPago.venMovimientos=venMovimientos.venMovimientos
	left join genEntidadesBasicasValor NEntidadBasica on NEntidadBasica.Entidad_Id=7 and NEntidadBasica.Dominio_Id='MX' and NEntidadBasica.Clave=venMovimientosMetodoPago.NMetodoPago
	left join genEntidadesBasicasValor EntidadBasica on EntidadBasica.Entidad_Id=6 and EntidadBasica.Dominio_Id='MX' and EntidadBasica.Clave=venMovimientosMetodoPago.MetodoPago
	left join genEntidadesBasicasValor Usos on Usos.Entidad_Id=4 and Usos.Dominio_Id='MX' and Usos.Clave=venMovimientosMetodoPago.UsoCfdi
	inner join venTipoMov on venTipoMov.venTipoMov=venMovimientos.venTipoMov
	--Inner Join venCondFiscal On venCondFiscal.venCondFiscal = venClientes.CondFisc_Id
	--Inner Join venCondPago On venCondPago.venCondPago = venMovimientos.CondPagoCli_Id
	Left Join ##FacImpuestos Imp1 On Imp1.N = 1
	Left Join ##FacImpuestos Imp2 On Imp2.N = 2
	Left Join ##FacImpuestos Imp3 On Imp3.N = 3
	Left Join ##FacImpuestos Imp4 On Imp4.N = 4
	Left Join ##FacImpuestos Imp5 On Imp5.N >= 5
	LEFT join ((SELECT DISTINCT venMovConStockCrPed.venMovimientos, 
		venMovConStockCrPed.venPedidos  FROM venMovConStockCrPed) as venMovConStockCrPed 
		inner join venPedidos ON  venMovConStockCrPed.venPedidos = venPedidos.venPedidos
		INNER JOIN venPediSegmentos ON 	venPediSegmentos.venPedidos = venPedidos.venPedidos) ON
		venMovConStockCrPed.venMovimientos = venMovimientos.venMovimientos
	CROSS JOIN genInstalacion
	/*
	Left Join _FacImpuestos Imp1 On Imp1.N = 1
	Left Join _FacImpuestos Imp2 On Imp2.N = 2
	Left Join _FacImpuestos Imp3 On Imp3.N = 3
	Left Join _FacImpuestos Imp4 On Imp4.N = 4
	Left Join _FacImpuestos Imp5 On Imp5.N >= 5
	*/
	left join conAsientosAnul on conAsientos.conAsientos= conAsientosAnul.Asiento_Id
	Where
		venMovimientos.Cliente_Id IS NULL AND 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N  and 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id		
Drop table ##FacImpuestos

GO

DROP PROCEDURE INF_venFactuCuerpo
GO
CREATE PROCEDURE INF_venFactuCuerpo (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)


	AS

	SELECT venMovConStockCr.RenglonCuerpo, stkProductos.Producto_Id, 
		stkProductos.Descripcion, stkProductos.DescripcionDetallada, stkProductos.Description, 
		stkUniMed.Medida_Id as MedidaProd, stkUniMed.CodigoFiscal as FiscalMedidaProd,
		MedidaMov.Medida_Id as MedidaMov, MedidaMov.CodigoFiscal as FiscalMedidaMov,
		Alterna.Medida_Id as MedidaAlterna,
		venMovConStockCr.CantFacturada, venMovConStockCr.CantOriginal, 
		venMovConStockCr.CantEntregada, venMovConStockCr.CantidadAlternaForm as CantidadAlterna, 
		venMovConStockCr.PrecioForm, venMovConStockCr.PrecioLista, venMovConStockCr.PrecioVenta, 
		venMovConStockCr.PrecioFormImpuesto, venMovConStockCr.PrecioFormImpuestoBon, 
		venMovConStockCr.PrecioFormImpuestoTot, venMovConStockCr.Observaciones, 
		venMovconStockcr.Bonificacion,
		--Convert(Numeric(18,2), (CantFacturada*PrecioForm * (1-Bonificacion/100))) as SubTotal, FM Arreglamos con AJ volver a la vida el campo original
		venMovConStockCr.SubTotal,
		venMovConStockCr.SubTotalFormImpuesto, 
		stkProductos.CodigoFiscal as ClaveSat,
		/* para MEXICO */
		ISNULL((SELECT SUM(venMovCSImpuestos.Importe) 
			from venMovCSImpuestos inner join venImpuestos ON 
				venMovCSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovCSImpuestos.venMovimientos = venMovConStockCr.venMovimientos AND 
				venMovCSImpuestos.RenglonCuerpo = venMovConStockCr.RenglonCuerpo
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '002'),0) as IVA,
		ISNULL((SELECT SUM(venMovCSImpuestos.Importe) 
			from venMovCSImpuestos inner join venImpuestos ON 
				venMovCSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovCSImpuestos.venMovimientos = venMovConStockCr.venMovimientos  and 
				venMovCSImpuestos.RenglonCuerpo = venMovConStockCr.RenglonCuerpo
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '001'),0) as ISR,
		ISNULL((SELECT SUM(venMovCSImpuestos.Importe) 
			from venMovCSImpuestos inner join venImpuestos ON 
				venMovCSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovCSImpuestos.venMovimientos = venMovConStockCr.venMovimientos  and 
				venMovCSImpuestos.RenglonCuerpo = venMovConStockCr.RenglonCuerpo
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '003'),0) as IEPS, 
				
		ISNULL((SELECT TOP 1
		ISNULL(comDespachos.Anio,'XX') + '  ' + ISNULL(comDespachos.Aduana_id,'XX')+'  '+
			ISNULL(comDespachos.Patente,'XXXX')	+ '  ' +
			left('0000000', 7-len(Ltrim(str(ISNULL(comDespachos.Pedimento,0),7))))+ Ltrim(str(ISNULL(comDespachos.Pedimento,0),7)) 
			From venMovStkHist INNER JOIN stkMoviDespa ON
				venMovConStockCr.venMovimientos =  venMovStkHist.venMovimientos and 
				venMovConStockCr.RenglonCuerpo = venMovStkHist.RenglonCuerpo and 
				stkMoviDespa.stkMoviCabe = venMovStkHist.stkMoviCabe and 
				stkMoviDespa.Renglon  = venMovStkHist.Renglon
				INNER JOIN comDespachos ON 
				comDespachos.comDespachos = stkMoviDespa.Despacho_Id
				Where
				comDespachos.Pedimento > 0 ),' ')  as Despacho, 
				' ' as Serie, '' Predial
				
		
	from venMovConStockCr inner join genAsiSegmentos ON
		venMovConStockCr.venMovimientos = genAsiSegmentos.Asiento_Id
		INNER JOIN genSegmentos ON 
		genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
		INNER JOIN stkProductos ON 
		stkProductos.stkProductos = venMovConStockCr.Producto_Id
		inner join stkUniMed on 
		stkUniMed.stkUniMed = stkProductos.Medida_Id
		inner join stkUniMed as MedidaMov on 
		MedidaMov.stkUniMed = venMovConStockCr.Medida_Id
		LEFT OUTER JOIN stkUniMed AS Alterna on
		Alterna.stkUniMed = stkProductos.MedidaAlterna

	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N  AND 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id And
		NOT EXISTS(SELECT 1 FROM stkMoviSerie INNER JOIN venMovStkHist ON
			stkMoviSerie.stkMoviCabe = venMovStkHist.stkMoviCabe AND 
			stkMoviSerie.Renglon =venMovStkHist.Renglon AND 
			venMovStkHist.venMovimientos = venMovConStockCr.venMovimientos and 
			venMovStkHist.RenglonCuerpo = venMovConStockCr.RenglonCuerpo )
UNION ALL -- SERIE

	SELECT venMovConStockCr.RenglonCuerpo, stkProductos.Producto_Id, 
		stkProductos.Descripcion, stkProductos.DescripcionDetallada, stkProductos.Description, 
		stkUniMed.Medida_Id as MedidaProd, stkUniMed.CodigoFiscal as FiscalMedidaProd,
		MedidaMov.Medida_Id as MedidaMov, MedidaMov.CodigoFiscal as FiscalMedidaMov,
		Alterna.Medida_Id as MedidaAlterna,
		stkMoviSerie.Cantidad,  stkMoviSerie.Cantidad CantOriginal, 
		stkMoviSerie.Cantidad CantEntregada, venMovConStockCr.CantidadAlternaForm as CantidadAlterna, 
		venMovConStockCr.PrecioForm, venMovConStockCr.PrecioLista, venMovConStockCr.PrecioVenta, 
		venMovConStockCr.PrecioFormImpuesto, venMovConStockCr.PrecioFormImpuestoBon, 
		venMovConStockCr.PrecioFormImpuestoTot, venMovConStockCr.Observaciones, 
		venMovconStockcr.Bonificacion, 
		venMovConStockCr.SubTotal, venMovConStockCr.SubTotalFormImpuesto,
		stkProductos.CodigoFiscal as ClaveSat,
		/* para MEXICO */
		ISNULL((SELECT SUM(venMovCSImpuestos.Importe) 
			from venMovCSImpuestos inner join venImpuestos ON 
				venMovCSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovCSImpuestos.venMovimientos = venMovConStockCr.venMovimientos 
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '002'),0) as IVA,
		ISNULL((SELECT SUM(venMovCSImpuestos.Importe) 
			from venMovCSImpuestos inner join venImpuestos ON 
				venMovCSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovCSImpuestos.venMovimientos = venMovConStockCr.venMovimientos 
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '001'),0) as ISR,
		ISNULL((SELECT SUM(venMovCSImpuestos.Importe) 
			from venMovCSImpuestos inner join venImpuestos ON 
				venMovCSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovCSImpuestos.venMovimientos = venMovConStockCr.venMovimientos 
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '003'),0) as IEPS, 
				
		ISNULL((SELECT TOP 1
		ISNULL(comDespachos.Anio,'XX') + '  ' + ISNULL(comDespachos.Aduana_id,'XX')+'  '+
			ISNULL(comDespachos.Patente,'XXXX')	+ '  ' +
			left('0000000', 7-len(Ltrim(str(ISNULL(comDespachos.Pedimento,0),7))))+ Ltrim(str(ISNULL(comDespachos.Pedimento,0),7)) 
			From venMovStkHist INNER JOIN stkMoviDespa ON
				venMovConStockCr.venMovimientos =  venMovStkHist.venMovimientos and 
				venMovConStockCr.RenglonCuerpo = venMovStkHist.RenglonCuerpo and 
				stkMoviDespa.stkMoviCabe = venMovStkHist.stkMoviCabe and 
				stkMoviDespa.Renglon  = venMovStkHist.Renglon
				INNER JOIN comDespachos ON 
				comDespachos.comDespachos = stkMoviDespa.Despacho_Id
				Where
				comDespachos.Pedimento > 0),' ') as Despacho, 
				stkMoviSerie.Serie, '' Predial
				
		
	from 
		venMovConStockCr inner join venMovStkHist ON
			venMovStkHist.venMovimientos = venMovConStockCr.venMovimientos and 
			venMovStkHist.RenglonCuerpo = venMovConStockCr.RenglonCuerpo
			INNER JOIN stkMoviSerie ON
			stkMoviSerie.stkMoviCabe = venMovStkHist.stkMoviCabe AND 
			stkMoviSerie.Renglon =venMovStkHist.Renglon
		INNER JOIN  genAsiSegmentos ON
		venMovConStockCr.venMovimientos = genAsiSegmentos.Asiento_Id
		INNER JOIN genSegmentos ON 
		genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
		INNER JOIN stkProductos ON 
		stkProductos.stkProductos = venMovConStockCr.Producto_Id
		inner join stkUniMed on 
		stkUniMed.stkUniMed = stkProductos.Medida_Id
		inner join stkUniMed as MedidaMov on 
		MedidaMov.stkUniMed = venMovConStockCr.Medida_Id
		LEFT OUTER JOIN stkUniMed AS Alterna on
		Alterna.stkUniMed = stkProductos.MedidaAlterna

	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N And
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
	
union all
	SELECT venMovDetalle.conRenglon RenglonCuerpo, venMovDetalle.Producto_Id, 
		venMovDetalle.Detalle, venMovDetalle.Detalle DescripcionDetallada, venMovDetalle.Detalle Description, 
		stkUniMed.Medida_Id as MedidaProd, stkUniMed.CodigoFiscal as FiscalMedidaProd,
		stkUniMed.Medida_Id as MedidaMov, stkUniMed.CodigoFiscal as FiscalMedidaMov,
		' ' MedidaAlterna,
		venMovDetalle.Cantidad, venMovDetalle.Cantidad CantOriginal, 
		venMovDetalle.Cantidad CantEntregada, 0 as CantidadAlterna, 
		venMovDetalle.ImporteUnitario as PrecioForm, venMovDetalle.ImporteUnitario PrecioLista, 
		venMovDetalle.ImporteUnitario PrecioVenta, 
		venMovDetalle.ImporteUnitarioDelImpuesto PrecioFormImpuesto, venMovDetalle.ImporteUnitarioDelImpuesto PrecioFormImpuestoBon, 
		venMovDetalle.ImporteUnitarioDelImpuesto * venMovDetalle.Cantidad PrecioFormImpuestoTot, 
		'' as Observaciones, 
		0.00 Bonificacion,
		Convert(Numeric(19,2),venMovDetalle.Cantidad * venMovDetalle.ImporteUnitario) as SubTotal  , 
		Convert(Numeric(19,2),venMovDetalle.ImporteUnitarioDelImpuesto * venMovDetalle.Cantidad) SubTotalFormImpuesto, 
		venMovDetalle.CodigoFiscal as ClaveSat, 
		/* para MEXICO */
		ISNULL((SELECT SUM(venMovSSImpuestos.Importe) 
			from venMovSSImpuestos inner join venImpuestos ON 
				venMovSSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovSSImpuestos.conRenglon = venmovDetalle.conRenglon and 
				venMovSSImpuestos.venMovimientos = venMovDetalle.venMovimientos 
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '002'),0) as IVA,
		ISNULL((SELECT SUM(venMovSSImpuestos.Importe) 
			from venMovSSImpuestos inner join venImpuestos ON 
				venMovSSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovSSImpuestos.conRenglon = venmovDetalle.conRenglon and 
				venMovSSImpuestos.venMovimientos = venMovDetalle.venMovimientos 
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '001'),0) as ISR,
		ISNULL((SELECT SUM(venMovSSImpuestos.Importe) 
			from venMovSSImpuestos inner join venImpuestos ON 
				venMovSSImpuestos.Impuesto_Id = venImpuestos.venImpuestos AND 
				venMovSSImpuestos.conRenglon = venmovDetalle.conRenglon and 
				venMovSSImpuestos.venMovimientos = venMovDetalle.venMovimientos 
				INNER JOIN impTipoImpuesto ON 
				impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				Where
				impTipoImpuesto.Referencia02 = '003'),0) as IEPS, 
				' ' as Despacho, ' ' as Serie, isnull(venMoviPredial.CuentaPredial,'') as Predial
		
	from venMovDetalle inner join genAsiSegmentos ON
		venMovDetalle.venMovimientos = genAsiSegmentos.Asiento_Id
		INNER JOIN genSegmentos ON 
		genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
		Left outer join stkUniMed on 
		stkUniMed.stkUniMed = venMovDetalle.Medida_Id
		LEFT JOIN venMoviPredial ON 
		venMoviPredial.venMovimientos = venMovDetalle.venMovimientos and 
		venMoviPredial.conRenglon  = 	venMovDetalle.conRenglon
		
	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
		-- CARTA PORTE
UNION ALL
SELECT venCompCartaPorteMercancia.Renglon RenglonCuerpo, ' ' Producto_Id, 
		venCompCartaPorteMercancia.Descripcion, venCompCartaPorteMercancia.Descripcion, venCompCartaPorteMercancia.Descripcion, 
		stkUniMed.Medida_Id as MedidaProd, stkUniMed.CodigoFiscal as FiscalMedidaProd,
		stkUniMed.Medida_Id as MedidaMov, stkUniMed.CodigoFiscal as FiscalMedidaMov,
		' ' as MedidaAlterna,
		venCompCartaPorteMercancia.Cantidad CantFacturada, venCompCartaPorteMercancia.Cantidad CantOriginal, 
		venCompCartaPorteMercancia.Cantidad CantEntregada, 0 as CantidadAlterna, 
		0 PrecioForm, 0 PrecioLista, 0 PrecioVenta, 
		0 PrecioFormImpuesto, 0 PrecioFormImpuestoBon, 
		0 PrecioFormImpuestoTot, '' Observaciones, 
		0 Bonificacion,
		--Convert(Numeric(18,2), (CantFacturada*PrecioForm * (1-Bonificacion/100))) as SubTotal, FM Arreglamos con AJ volver a la vida el campo original
		0 SubTotal,
		0 SubTotalFormImpuesto, 
		venCompCartaPorteMercancia.BienesTransp as ClaveSat,
		/* para MEXICO */
		0 as IVA,
		0 as ISR,
		0 as IEPS, 	''	 as Despacho, 
				' ' as Serie, '' Predial
		
	from venCompCartaPorteMercancia inner join genAsiSegmentos ON
		venCompCartaPorteMercancia.venMovimientos = genAsiSegmentos.Asiento_Id
		INNER JOIN genSegmentos ON 
		genAsiSegmentos.Segmento_Id = genSegmentos.genSegmentos
		inner join stkUniMed on 
		stkUniMed.stkUniMed = venCompCartaPorteMercancia.Medida_Id
		inner join venMovimientos ON  venMovimientos.venMovimientos = venCompCartaPorteMercancia.venmovimientos
	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N  AND 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id AND 
		venMovimientos.venTipomov = 'M'
	ORDER BY 1

GO


DROP PROCEDURE INF_venFactuImpuestos
GO
CREATE PROCEDURE INF_venFactuImpuestos(
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)


	AS
	Select * From (
		Select ROW_NUMBER() OVER( ORDER BY TipoImpuesto ) as N, SPOrig.* From
		(SELECT venImpuestos.Impuesto_Id, venImpuestos.Descripcion, venImpuestos.TipoImpuesto,
		venMovImpuestos.BaseImponible, venMovImpuestos.Porcentaje, venMovImpuestos.Importe
		FROM venMovImpuestos 
		INNER JOIN venImpuestos ON venMovImpuestos.Impuesto_Id = venImpuestos.venImpuestos
		inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id = venMovImpuestos.venMovimientos
		INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
	Where
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id ) SpOrig
	) a
	order by 1



GO

DROP PROCEDURE INF_venFactuComRel
GO
CREATE PROCEDURE INF_venFactuComRel (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)


	AS



	SELECT TipoRelacion, venMovimientosFiscal.ClaveFiscal UUID 
	FROM venMovimientosCFDIR INNER JOIN venMovimientosFiscal ON
		venMovimientosCFDIR.venMovimientosR = venMovimientosFiscal.venMovimientos
		INNER JOIN genAsiSegmentos ON 
		genAsiSegmentos.Asiento_Id =venMovimientosCFDIR.venMovimientos
		INNER JOIN genSegmentos ON 
		genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		Where 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N  and 
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
		order by 2

GO


DROP PROCEDURE INF_venFactuINE
GO
CREATE PROCEDURE INF_venFactuINE (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)


	AS



	SELECT Ambito, ClaveIdentidad , idContabilidad 
		FROM venMovimientosFiscalINE	INNER JOIN genAsiSegmentos ON 
		genAsiSegmentos.Asiento_Id =venMovimientosFiscalINE.venMovimientos
		INNER JOIN genSegmentos ON 
		genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		Where 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
		order by 2

GO


DROP PROCEDURE INF_venFactuExpedicion
GO
CREATE PROCEDURE INF_venFactuExpedicion (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)


	AS



	SELECT genSucursalesEmpr.Sucursal, genSucursalesEmpr.Descripcion, genSucursalesEmpr.Serie,
		genSucursalesEmpr.Direccion, genSucursalesEmpr.Localidad, 
		genProvincias.Provincia_Id,genProvincias.Descripcion as DescripcionProvincia,
		genPaises.Pais_Id, genPaises.Descripcion as DescripcionPais,
		genSucursalesEmpr.CodigoPostal, genSucursalesEmpr.Telefono
		FROM genAsiSegmentos INNER JOIN conAsientos ON 	genAsiSegmentos.Asiento_Id =conAsientos.conAsientos 
		INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		INNER JOIN genSegmentos ON genSegmentos.genSegmentos = genAsiSegmentos.Segmento_Id
		INNER JOIN genProvincias ON  genProvincias.genProvincias = genSucursalesEmpr.Provincia_Id 
		INNER JOIN genPaises ON  genPaises.genPaises = genSucursalesEmpr.Pais_Id
		Where 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
		order by 2

GO



DROP PROCEDURE INF_venFactuCartaPorte
GO
CREATE PROCEDURE INF_venFactuCartaPorte (
	@pEmpresa_Id int, 
	@pSegmento_Id VarChar(10), 
	@pSegmento1N int,
	@pSegmento2N int,
	@pSegmento3N int,
	@pSegmento4N int,
	@pSegmento1C VarChar(20),
	@pSegmento2C VarChar(20),
	@pSegmento3C VarChar(20),
	@pSegmento4C VarChar(20)

	)
as

SELECT venCamiones.Patente_Id as Camion_Id,  venCamiones.ConfVehicular, venCamiones.Marca, venCamiones.Modelo, 
	venCamiones.NroPermisoSCT, venCamiones.NroPoliza, venCamiones.NombreAseg,
	ISNULL(venCamiones.AseguraMedAmb,'') AseguraMedAmb, ISNULL(venCamiones.PolizaMedAmbiente,'') PolizaMedAmbiente,
	ISNULL(venCamiones.AseguraCarga,'') AseguraCarga, ISNULL(venCamiones.PolizaCarga,'') PolizaCarga,
	ISNULL(venCamiones.PrimaSeguro,0) PrimaSeguro,
	ISNULL(Remolque1.Patente_Id,'') Remolque1, Remolque1.Marca MarcaR1, Remolque1.Modelo ModeloR1, Remolque1.ConfVehicular ConfVehicularR1,
	ISNULL(Remolque1.AseguraMedAmb,'') AseguraMedAmbR1, ISNULL(Remolque1.PolizaMedAmbiente,'') PolizaMedAmbienteR1,
	ISNULL(Remolque1.AseguraCarga,'') AseguraCargaR1, ISNULL(Remolque1.PolizaCarga,'') PolizaCargaR1,
	ISNULL(Remolque1.PrimaSeguro,0) PrimaSeguroR1,
	ISNULL(Remolque2.Patente_Id,'') Remolque2, Remolque2.Marca MarcaR2, Remolque2.Modelo ModeloR2, Remolque2.ConfVehicular ConfVehicularR2,
	ISNULL(Remolque2.AseguraMedAmb,'') AseguraMedAmbR2, ISNULL(Remolque2.PolizaMedAmbiente,'') PolizaMedAmbienteR2,
	ISNULL(Remolque2.AseguraCarga,'') AseguraCargaR2, ISNULL(Remolque2.PolizaCarga,'') PolizaCargaR2,
	ISNULL(Remolque2.PrimaSeguro,0) PrimaSeguroR2,
	venOperadores.Operador_Id, venOperadores.RfcOperador, venOperadores.NombreOperador, 
	venOperadores.NumLicencia, venOperadores.Calle, venOperadores.NumeroExterior, venOperadores.Numerointerior, 
	venOperadores.Colonia, venOperadores.Localidad, venOperadores.Municipio, venOperadores.Estado, genPaises.CodFiscal Pais
FROM venCompCartaPorte 
	inner join venCamiones ON  venCamiones.venCamiones = venCompCartaPorte.Camion_Id
	left join venCamiones Remolque1 ON  Remolque1.venCamiones = venCompCartaPorte.Remolque1
	left join venCamiones Remolque2 ON  Remolque2.venCamiones = venCompCartaPorte.Remolque2
	inner join venOperadores ON venOperadores.venOperadores =venCompCartaPorte.Operador_Id
	INNER JOIN genPaises ON genPaises.genPaises = venOperadores.Pais
	inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id = venCompCartaPorte.venmovimientos
	inner join genSegmentos on genSegmentos.genSegmentos  = genAsiSegmentos.Segmento_Id
WHERE 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id

go


drop procedure INF_venFactuOrigenes
go
create procedure INF_venFactuOrigenes
(
@pEmpresa_Id int, 
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS

select  venCompCartaPorteOrigen.venMovimientos, venCompCartaPorteOrigen.Ubicacion, venCompCartaPorteOrigen.idOrigen, 
venCompCartaPorteOrigen.RFCRemitente, venCompCartaPorteOrigen.NombreRemitente, 
venCompCartaPorteOrigen.NumRegIdTrib, genPaises.CodFiscal as ResidenciaFiscal, venCompCartaPorteOrigen.NumEstacion, 
venCompCartaPorteOrigen.FechaHoraSalida, venCompCartaPorteOrigen.Calle, venCompCartaPorteOrigen.NumeroExterior, 
venCompCartaPorteOrigen.Numerointerior, venCompCartaPorteOrigen.Colonia as c_Colonia, 
	isnull(genColonias.NombreAsentamiento,'') as NombreAsentamiento, 
	venCompCartaPorteOrigen.Localidad as c_Localidad, ISNULL(genlocalidades.Descripcion,'') AS Localidad, 
	venCompCartaPorteOrigen.Municipio as c_Municipio, ISNULL(genMunicipios.Descripcion,'')  as Municipio,
	venCompCartaPorteOrigen.Estado, venCompCartaPorteOrigen.CodigoPostal, 
	genPaisesD.Descripcion Pais
from venCompCartaPorteOrigen
	inner join  genPaises on  genPaises.genPaises = venCompCartaPorteOrigen.ResidenciaFiscal
	left join genColonias on  genColonias.c_Colonia = venCompCartaPorteOrigen.Colonia and 
			genColonias.c_CodigoPostal = venCompCartaPorteOrigen.CodigoPostal
	left join  genlocalidades ON  genlocalidades.c_Localidad = venCompCartaPorteOrigen.Localidad and 
		genlocalidades.c_Estado = venCompCartaPorteOrigen.Estado
	LEFT JOIN genMunicipios ON  genMunicipios.c_Municipio = venCompCartaPorteOrigen.Municipio and 
			genMunicipios.c_Estado = venCompCartaPorteOrigen.Estado
	inner join  genPaises genPaisesD ON genPaisesD.genPaises = venCompCartaPorteOrigen.Pais
	inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id = venCompCartaPorteOrigen.venmovimientos
	inner join genSegmentos on genSegmentos.genSegmentos  = genAsiSegmentos.Segmento_Id
WHERE 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id


go


drop procedure INF_venFactuDestinos
go
create procedure INF_venFactuDestinos
(
@pEmpresa_Id int, 
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS

select  venCompCartaPorteDestino.venMovimientos, venCompCartaPorteDestino.Ubicacion, venCompCartaPorteDestino.IdDestino, 
venCompCartaPorteDestino.RFCDestinatario, venCompCartaPorteDestino.NombreDestinatario, 
venCompCartaPorteDestino.NumRegIdTrib, genPaises.CodFiscal as ResidenciaFiscal, venCompCartaPorteDestino.NumEstacion, 
venCompCartaPorteDestino.FechaHoraProgLlegada, venCompCartaPorteDestino.Calle, venCompCartaPorteDestino.NumeroExterior, 
venCompCartaPorteDestino.Numerointerior, venCompCartaPorteDestino.Colonia as c_Colonia, 
	isnull(genColonias.NombreAsentamiento,'') as NombreAsentamiento, 
	venCompCartaPorteDestino.Localidad as c_Localidad, ISNULL(genlocalidades.Descripcion,'') AS Localidad, 
	venCompCartaPorteDestino.Municipio as c_Municipio, ISNULL(genMunicipios.Descripcion,'')  as Municipio,
	venCompCartaPorteDestino.Estado, venCompCartaPorteDestino.CodigoPostal, 
	genPaisesD.Descripcion Pais
from venCompCartaPorteDestino
	inner join  genPaises on  genPaises.genPaises = venCompCartaPorteDestino.ResidenciaFiscal
	left join genColonias on  genColonias.c_Colonia = venCompCartaPorteDestino.Colonia AND 
			genColonias.c_CodigoPostal = venCompCartaPorteDestino.CodigoPostal
	left join  genlocalidades ON  genlocalidades.c_Localidad = venCompCartaPorteDestino.Localidad and 
			genlocalidades.c_Estado = venCompCartaPorteDestino.Estado
	LEFT JOIN genMunicipios ON  genMunicipios.c_Municipio = venCompCartaPorteDestino.Municipio and 
		genMunicipios.c_Estado = venCompCartaPorteDestino.Estado
	inner join  genPaises genPaisesD ON genPaisesD.genPaises = venCompCartaPorteDestino.Pais
inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id = venCompCartaPorteDestino.venmovimientos
	inner join genSegmentos on genSegmentos.genSegmentos  = genAsiSegmentos.Segmento_Id
WHERE 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
go



drop procedure INF_venFactuCPMercancias
go
create procedure INF_venFactuCPMercancias
(
@pEmpresa_Id int, 
@pSegmento_Id VarChar(10), 
@pSegmento1N int,
@pSegmento2N int,
@pSegmento3N int,
@pSegmento4N int,
@pSegmento1C VarChar(20),
@pSegmento2C VarChar(20),
@pSegmento3C VarChar(20),
@pSegmento4C VarChar(20)
)
AS

select venCompCartaPorteMercancia.Renglon, venCompCartaPorteMercancia.BienesTransp, venCompCartaPorteMercancia.ClaveSTCC,
	venCompCartaPorteMercancia.Descripcion, venCompCartaPorteMercancia.Cantidad, stkUniMed.CodigoFiscal, 
	venCompCartaPorteMercancia.Dimensiones, venCompCartaPorteMercancia.MaterialPeligroso, venCompCartaPorteMercancia.Embalaje, 
	venCompCartaPorteMercancia.CveMaterialPeligroso,
	venCompCartaPorteMercancia.PesoEnKg, venCompCartaPorteMercancia.ValorMercancia, 
		venCompCartaPorteMercancia.FraccionArancelaria, venCompCartaPorteMercancia.UUIDComercioExt
	from venCompCartaPorteMercancia 
	inner join stkUniMed ON stkUniMed.stkUniMed = venCompCartaPorteMercancia.Medida_id
	inner join genAsiSegmentos ON genAsiSegmentos.Asiento_Id = venCompCartaPorteMercancia.venmovimientos
	inner join genSegmentos on genSegmentos.genSegmentos  = genAsiSegmentos.Segmento_Id
	WHERE 
		genSegmentos.Segmento_Id =  @pSegmento_Id and
		genAsiSegmentos.Segmento1C = @pSegmento1C and 
		genAsiSegmentos.Segmento2C = @pSegmento2C and 
		genAsiSegmentos.Segmento3C = @pSegmento3C and 
		genAsiSegmentos.Segmento4C = @pSegmento4C and 
		genAsiSegmentos.Segmento1N = @pSegmento1N and 
		genAsiSegmentos.Segmento2N = @pSegmento2N and  
		genAsiSegmentos.Segmento3N = @pSegmento3N and  
		genAsiSegmentos.Segmento4N = @pSegmento4N and
		genAsiSegmentos.Empresa_Id = @pEmpresa_Id
	order by 1
go



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venImpCobrados.sql*/
-- Inf_venImpCobrados 1, '20180101','20180630', ' ','zzzz',' ','ZZZZ'

DROP PROCEDURE Inf_venImpCobrados
GO
CREATE PROCEDURE Inf_venImpCobrados
(
	@Empresa_id int, 
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ImpuestoDesde VarChar(5),
	@ImpuestoHasta VarChar(5), 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15)
)
AS

SELECT venImpuestos.Impuesto_Id, venImpuestos.Descripcion AS DescripcionImpuesto,
	ISNULL(venClientes.Cliente_Id,'') Cliente_Id, 
	ISNULL(venClientes.RazonSocial,'Deposito No Identificado') RazonSocial, 
	conAsientos.Fecha, asiCobranza.Fecha as FechaCobra,
	dbo.Segmento(genAsiSegmentosC.Segmento_Id, genAsiSegmentosC.Segmento1C, 
	genAsiSegmentosC.Segmento2C, genAsiSegmentosC.Segmento3C, genAsiSegmentosC.Segmento4C, 
	genAsiSegmentosC.Segmento1N, genAsiSegmentosC.Segmento2N, genAsiSegmentosC.Segmento3N, 
	genAsiSegmentosC.Segmento4N) as Cobranza,
	ISNULL(asiFactura.Fecha,@FechaDesde)   AS FechaFactura,
	isnull(dbo.Segmento(genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C, 
	genAsiSegmentosF.Segmento2C, genAsiSegmentosF.Segmento3C, genAsiSegmentosF.Segmento4C, 
	genAsiSegmentosF.Segmento1N, genAsiSegmentosF.Segmento2N, genAsiSegmentosF.Segmento3N, 
	genAsiSegmentosF.Segmento4N),'') as Factura, 
	tesIdentifica.Cartera_Id, Banco.Cartera_Id as Banco, 
	venMovImpTraslado.BaseImponible, venMovImpTraslado.Monto+ venMovImpTraslado.DifCambio Monto, 
	venMovImpTraslado.DifCambio, 	venMovImpTraslado.TotalCobro
	
FROM 
	venMovImpTraslado inner join venMovimientos ON 
	venMovImpTraslado.venMovimientos = venMovimientos.venMovimientos
	left JOIN venClientes ON
	venClientes.genEntidades = venMovimientos.Cliente_Id
	left JOIN conAsientos asiFactura ON
	asiFactura.conAsientos = venMovimientos.venMovimientos
	inner join conAsientos ON
	conAsientos.conAsientos = venMovImpTraslado.Asiento_Id
	inner join tesMovimientos ON
	tesMovimientos.tesMovimientos = venMovImpTraslado.tesMovimientos
	inner join conAsientos AS asiCobranza ON
	asiCobranza.conAsientos = tesMovimientos.tesMovimientos
	left join genAsiSegmentos AS genAsiSegmentosf ON
	genAsiSegmentosf.Asiento_Id = venMovimientos.venMovimientos
	INNER JOIN genAsiSegmentos as genAsiSegmentosC ON
	genAsiSegmentosC.Asiento_Id = tesMovimientos.tesMovimientos
	INNER JOIN venImpuestos ON
	venImpuestos.venImpuestos = venMovImpTraslado.Impuesto_Id
	INNER JOIN tesIdentifica ON
	tesIdentifica.tesIdentifica = venMovImpTraslado.Cartera_Id
	left join tesIdentifica as Banco ON 
	Banco.tesIdentifica = venMovImpTraslado.Banco_Id
WHERE
	conAsientos.Anulado = 0 and 
	asiFactura.Anulado = 0 and 
	asiCobranza.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa_id And 
	venClientes.Cliente_Id between @ClienteDesde And @ClienteHasta and 
	venImpuestos.Impuesto_Id between @ImpuestoDesde And @ImpuestoHasta AND 
	conAsientos.Fecha between @FechaDesde And @FechaHasta
order by 1,3,5 
GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venLibros.sql*/
-- FM 16/08/2021 Que traiga los importes en pesos y no que los multiplique ac?. Exento solo resta las BI que son IVA --
-- inf_venLibros 'LIVAV', '20210706','20210707',' ','zzzz', 1,1
--exec inf_venlibrosCabecera 'LIVAV', '20210706','20210706',' ','zzzz', 1,1

drop PROCEDURE Inf_venLibros
go
CREATE PROCEDURE Inf_venLibros (
@Libro_Id VarChar(5), 
@FechaDesde DateTime, 
@FechaHasta DateTime,
@SucursalDesde VarChar(4),
@SucursalHasta VarChar(4),
@Empresa Int, 
@SoloPendientes bit
)
as

IF @SoloPendientes = 0
BEGIN

SELECT XXX.Fecha, XXX.SegmentoStr, XXX.TipoMovResumido, XXX.Cliente_Id , XXX.ClaveFiscal, XXX.Cuit, 
XXX.RazonSocial, SUM(XXX.Columna01*xxx.Signo) as Columna01,
	SUM(XXX.Columna02*xxx.Signo) as Columna02, SUM(XXX.Columna03*xxx.Signo) as Columna03,
		SUM(XXX.Columna04*xxx.Signo) as Columna04, SUM(XXX.Columna05*xxx.Signo) as Columna05, 
		 SUM(XXX.Columna06*xxx.Signo) as Columna06,  SUM(XXX.Columna07*xxx.Signo) as Columna07, 
		  SUM(XXX.Columna08*xxx.Signo) as Columna08,  SUM(XXX.Columna09*xxx.Signo) as Columna09, 
		   SUM(XXX.Columna10*xxx.Signo) as Columna10,  SUM(XXX.Columna11*xxx.Signo) as Columna11, 
		    SUM(XXX.Columna12*xxx.Signo) as Columna12, 
				xxx.venMovimientos, xxx.Provincia_Id, xxx.DescripcionProvincia

FROM (


SELECT venMovimientos.venMovimientos, conAsientos.Fecha, 
	Venclientes.Cliente_Id,
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as SegmentoStr,
	venTipoMov.TipoMovResumido, conAsientos.Cambio, venTipoMov.Signo,
	ISNULL(venMovimientosFiscal.ClaveFiscal, ' ') as ClaveFiscal, 
	genEntidades.Cuit, case when conASientos.Anulado=0 then  venClientes.RazonSocial else 'Anulado' end RazonSocial, 
	Case when venLibrosImpuestos.Columna = 1 and conASientos.Anulado=0 then
	case  venLibrosImpuestos.TipoRenglon 
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end  AS Columna01,
		Case when venLibrosImpuestos.Columna = 2 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end  AS Columna02,
		
		Case when venLibrosImpuestos.Columna = 3 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna03,
		
		Case when venLibrosImpuestos.Columna = 4 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna04,
		
		Case when venLibrosImpuestos.Columna = 5 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna05,

				Case when venLibrosImpuestos.Columna = 6 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna06,

		Case when venLibrosImpuestos.Columna = 7 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna07,

		Case when venLibrosImpuestos.Columna = 8 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna08,

				Case when venLibrosImpuestos.Columna = 9 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna09,

				Case when venLibrosImpuestos.Columna = 10 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna10,

				Case when venLibrosImpuestos.Columna = 11 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna11,

				Case when venLibrosImpuestos.Columna = 12 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end  AS Columna12,
		genProvincias.Provincia_Id, genProvincias.Descripcion DescripcionProvincia
FROM venMovimientos 
INNER JOIN conAsientos ON venMovimientos.venMovimientos = conAsientos.conAsientos
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
	LEFT JOIN venMovimientosFiscal ON venMovimientosFiscal.venMovimientos = venMovimientos.venMovimientos
	INNER JOIN genEntidades ON genEntidades.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN venClientes ON venClientes.genEntidades = genEntidades.genEntidades
	INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id 
	INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
	inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	CROSS JOIN (venLibrosImpuestos Inner Join venLibros On venLibros.venLibros = venLibrosImpuestos.venLibros)
	Inner Join venClieHabitual On venClieHabitual.genEntidades = venMovimientos.Cliente_Id And venClieHabitual.Sucursal = venMovimientos.Sucursal
	Inner Join genProvincias On genProvincias.genProvincias = venClieHabitual.Provincia_Id_Fact
	CROSS JOIN geninstalacion
WHERE 
conAsientos.Posteado = 1 and
(geninstalacion.Dominio_Id != 'MX' OR venMovimientosFiscal.ClaveFiscal IS NOT NULL) AND 
conAsientos.Fecha between @FechaDesde and @FechaHasta and  
genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
conAsientos.Empresa_Id = @Empresa and
isnull(venLibros.Empresa_Id,@Empresa) = @Empresa And venLibros.Libro_Id = @Libro_Id And
venTipoMov.venTipoMov in ('F','R','D', 'I', 'B', 'E')) AS XXX
group by XXX.Fecha, XXX.SegmentoStr, XXX.ClaveFiscal, XXX.Cuit, XXX.Cliente_Id,
XXX.RazonSocial, xxx.venMovimientos, XXX.TipoMovResumido, xxx.venMovimientos, xxx.Provincia_Id, xxx.DescripcionProvincia
ORDER BY 1,2
END
ELSE
BEGIN

SELECT XXX.Fecha, XXX.SegmentoStr, XXX.TipoMovResumido, XXX.ClaveFiscal, XXX.Cliente_Id, XXX.Cuit, 
XXX.RazonSocial, SUM(XXX.Columna01*xxx.Signo) as Columna01,
	SUM(XXX.Columna02*xxx.Signo) as Columna02, SUM(XXX.Columna03*xxx.Signo) as Columna03,
		SUM(XXX.Columna04*xxx.Signo) as Columna04, SUM(XXX.Columna05*xxx.Signo) as Columna05, 
		 SUM(XXX.Columna06*xxx.Signo) as Columna06,  SUM(XXX.Columna07*xxx.Signo) as Columna07, 
		  SUM(XXX.Columna08*xxx.Signo) as Columna08,  SUM(XXX.Columna09*xxx.Signo) as Columna09, 
		   SUM(XXX.Columna10*xxx.Signo) as Columna10,  SUM(XXX.Columna11*xxx.Signo) as Columna11, 
		    SUM(XXX.Columna12*xxx.Signo) as Columna12, 
				xxx.venMovimientos, xxx.Provincia_Id, xxx.DescripcionProvincia

FROM (


SELECT venMovimientos.venMovimientos, conAsientos.Fecha, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, 
	genAsiSegmentos.Segmento1C,genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C,genAsiSegmentos.Segmento4C,
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N,genAsiSegmentos.Segmento4N) as SegmentoStr,
	venTipoMov.TipoMovResumido, conAsientos.Cambio, venTipoMov.Signo, venclientes.Cliente_Id,
	ISNULL(venMovimientosFiscal.ClaveFiscal, ' ') as ClaveFiscal, 
	genEntidades.Cuit, case when conASientos.Anulado=0 then  venClientes.RazonSocial else 'Anulado' end RazonSocial, 
	Case when venLibrosImpuestos.Columna = 1 and conASientos.Anulado=0 then
	case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end  AS Columna01,
		Case when venLibrosImpuestos.Columna = 2 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end  AS Columna02,
		
		Case when venLibrosImpuestos.Columna = 3 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna03,
		
		Case when venLibrosImpuestos.Columna = 4 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna04,
		
		Case when venLibrosImpuestos.Columna = 5 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna05,

				Case when venLibrosImpuestos.Columna = 6 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna06,

		Case when venLibrosImpuestos.Columna = 7 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna07,

		Case when venLibrosImpuestos.Columna = 8 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna08,

				Case when venLibrosImpuestos.Columna = 9 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 

		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna09,

				Case when venLibrosImpuestos.Columna = 10 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 

		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna10,

				Case when venLibrosImpuestos.Columna = 11 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 

		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end AS Columna11,

				Case when venLibrosImpuestos.Columna = 12 and conASientos.Anulado=0 then
		case  venLibrosImpuestos.TipoRenglon
		WHEN 'TO' THEN
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')
		WHEN 'IM' THEN 
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos
				Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And conMovCont.Renglon = venMovImpuestos.conRenglon
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 

		WHEN 'GR' THEN 		 
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos and 
				venMovimpuestos.Impuesto_Id = venLibrosImpuestos.Impuesto_Id),0) 
		WHEN 'EX' THEN 		 
			(Select Sum(Importe) Importe From conMovCont Where conMovCont.conAsientos = venMovimientos.venMovimientos And conMovCont.Clase = 'CLI')  -
			ISNULL((SELECT SUM(BaseImponibleMonedaNac) FROM venMovimpuestos
				Inner Join venImpuestos On venImpuestos.venImpuestos = venMovImpuestos.Impuesto_Id
				Inner Join impTipoImpuesto On impTipoImpuesto.TipoImpuesto = venImpuestos.TipoImpuesto
				where
				venMovimpuestos.venMovimientos = venMovimientos.venMovimientos And impTipoImpuesto.Referencia01 = 'IVA'),0) -
			ISNULL((SELECT SUM(conMovCont.Importe) FROM venMovimpuestos 
			Inner Join conMovCont On conMovCont.conAsientos = venMovImpuestos.venMovimientos And
						conMovCont.Renglon = venMovImpuestos.conRenglon And conMovCont.conAsientos = venMovimientos.venMovimientos),0) 
		else 0 END else 0 end 
		* case when @SoloPendientes = 1 then venMovimientos.Saldo / venMovimientos.Importe else 1 end  AS Columna12,
		genProvincias.Provincia_Id, genProvincias.Descripcion DescripcionProvincia
FROM (SELECT venMovimientos.venMovimientos, venMovimientos.Cliente_Id, 
	venMovimientos.venSubTipoMov_Id, venmovimientos.Sucursal, venMovimientos.venTipoMov, 
	venMovimientos.Importe, venMovimientos.Saldo +
		ISNULL((SELECT sum(genCancMov.importe) from genCancMov , conAsientos
			Where
				conAsientos.conAsientos =genCancMov.Asiento_Id_Ap and
				conAsientos.Anulado = 0 and
				genCancMov.Asiento_Id = venMovimientos.venMovimientos and 
				genCancMov.FechaAplicacion > @FechaHasta),0) +
				ISNULL((SELECT sum(genCancMov.importe) from genCancMov , conAsientos
			Where
				conAsientos.conAsientos =genCancMov.Asiento_Id and
				conAsientos.Anulado = 0 and
				genCancMov.Asiento_Id_ap = venMovimientos.venMovimientos and 
				genCancMov.FechaAplicacion > @FechaHasta),0) as Saldo
	From venMovimientos) AS venMovimientos 
INNER JOIN conAsientos ON venMovimientos.venMovimientos = conAsientos.conAsientos
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_id = conAsientos.conAsientos
	LEFT JOIN venMovimientosFiscal ON venMovimientosFiscal.venMovimientos = venMovimientos.venMovimientos
	INNER JOIN genEntidades ON genEntidades.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN venClientes ON venClientes.genEntidades = genEntidades.genEntidades
	INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id 
	INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
	inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	CROSS JOIN (venLibrosImpuestos Inner Join venLibros On venLibros.venLibros = venLibrosImpuestos.venLibros)
	Inner Join venClieHabitual On venClieHabitual.genEntidades = venMovimientos.Cliente_Id And venClieHabitual.Sucursal = venMovimientos.Sucursal
	Inner Join genProvincias On genProvincias.genProvincias = venClieHabitual.Provincia_Id_Fact
	CROSS JOIN genInstalacion
WHERE 
(geninstalacion.Dominio_Id != 'MX' OR venMovimientosFiscal.ClaveFiscal IS NOT NULL) AND 
conAsientos.Fecha <= @FechaHasta and  
conAsientos.Anulado = 0 and 
conAsientos.Posteado = 1 and 
venMovimientos.Saldo > 0 and 
genSucursalesEmpr.Sucursal between @SucursalDesde And @SucursalHasta and 
conAsientos.Empresa_Id = @Empresa and
ISNULL(venLibros.Empresa_Id,@Empresa) = @Empresa And venLibros.Libro_Id = @Libro_Id And
venTipoMov.venTipoMov in ('F','R','D', 'I', 'B', 'E')) AS XXX
group by XXX.Fecha, XXX.SegmentoStr, XXX.ClaveFiscal, XXX.Cuit, XXX.Cliente_Id,
XXX.RazonSocial, xxx.venMovimientos, XXX.TipoMovResumido, xxx.venMovimientos, xxx.Provincia_Id, xxx.DescripcionProvincia
ORDER BY 1,2

END

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venLibrosCabecera.sql*/


drop PROCEDURE Inf_venLibrosCabecera
go
CREATE PROCEDURE Inf_venLibrosCabecera (
@Libro_Id VarChar(5), 
@FechaDesde DateTime, 
@FechaHasta DateTime,
@SucursalDesde VarChar(4),
@SucursalHasta VarChar(4),
@Empresa_Id Int,
@SoloPendientes bit
)
as

SELECT ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 1 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna01, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 2 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna02, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 3 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna03, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 4 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna04, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 5 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna05,			 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 6 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna06, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 7 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna07, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 8 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna08, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 9 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna09, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 10 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna10, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 11 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna11, 
			ISNULL((SELECT Titulo from venLibrosColumnas where Columna = 12 and 
			venLibros = dbo.FuncFKvenLIbros(@Libro_id)), ' ') as Columna12
			go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_venLimiteCredito.sql*/
-- inf_venLimiteCredito ' ','ZZZ',' ','ZZ',1,1,1
DROP PROCEDURE inf_venLimiteCredito
GO

CREATE PROCEDURE inf_venLimiteCredito
(
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@VendedorDesde VarChar(5),
	@VendedorHasta VarChar(5),
	@Empresa_Id Int, 
	@SoloConCredito Bit,
	@SoloExcedido Bit
)
AS

SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,dbo.FechaActual()), @Empresa_Id) as Cambio
INTO #CAMBIO
FROM genMonedas

SELECT Cliente_Id, RazonSocial, LimiteCredito, Moneda_Id, CondPagoCli_Id, DescripcionCP, 
	LimiteCredito, Saldo, LimiteCredito-Saldo as Disponible
FROM (
SELECT venClientes.Cliente_Id, venClientes.RazonSocial, 
	venClientes.LimiteCredito, genMonedas.Moneda_Id, 
	venCondPago.CondPagoCli_Id, venCondPago.Descripcion as DescripcionCP, 
	ISNULL((SELECT SUM(venMovimientos.Saldo* venTipoMov.Signo * Cambio.Cambio)
	from venMovimientos INNER JOIN venTipoMov ON 
		venMovimientos.venTipoMov = venTipoMov.venTipoMov and 
		venMovimientos.Cliente_id = venClientes.genEntidades
		INNER JOIN conAsientos ON conAsientos.conAsientos = venMovimientos.venMovimientos
		INNER JOIN #CAMBIO AS Cambio ON Cambio.genMonedas = conAsientos.Moneda_Id
		Where
			conAsientos.Posteado = 1 and 
			conAsientos.Anulado = 0),0) / Cambio.Cambio as Saldo 
	
FROM venClientes INNER JOIN venClieHabitual ON
	venClientes.genEntidades = venClieHabitual.genEntidades AND
	venClientes.SucursalPredeter = venClieHabitual.Sucursal
	INNER JOIN genMonedas ON  genMonedas.genMonedas = venClientes.MonedaLimCred
	INNER JOIN genEmpresas ON  genEmpresas.genEmpresas = @Empresa_Id
	INNER JOIN venVendedores ON venVendedores.venVendedores = venClieHabitual.Vendedor_Id
	INNER JOIN #CAMBIO Cambio ON Cambio.genMonedas = venclientes.MonedaLimCred
	INNER JOIN venCondPago ON venCondPago.venCondPago = venClieHabitual.CondPagoCli_Id
WHERE
	venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	ISNULL(venClientes.Empresa_Id,@Empresa_Id) = @Empresa_Id ) as XXX
WHERE
	(@SoloConCredito = 0 OR LimiteCredito > 0 ) AND 
	(@SoloExcedido = 0 OR Saldo  > LimiteCredito)
ORDER BY 1

GO
	

	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venListaPrecios.sql*/
-- Inf_venListaPrecios ' ','zzz',1
DROP PROCEDURE Inf_venListaPrecios
GO
CREATE PROCEDURE Inf_venListaPrecios
(
	@ListaDesde VarChar(15),
	@ListaHasta VarChar(15),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@Empresa Int
)

AS

SELECT venListasPrecios.ListaPrecio_Id, venListasPrecios.Descripcion as DescripcionLista, 
	venListasPrecios.Inactivo, venListasPrecios.Posteado, 
	genMonedas.Moneda_Id,
	stkProductos.Producto_Id, stkProductos.Descripcion as DescripcionProducto, 
	venListasPrecProd.PrecioLista, venListasPrecProd.PrecioPromocion, 
	venListasPrecProd.AdmiteRegalo, stkFamilias.Familia_Id, stkFamilias.Descripcion as DescripcionFamilia
From venListasPrecios INNER JOIN genMonedas ON
	venListasPrecios.Moneda_Id = genMonedas.genMonedas
	INNER JOIN venListasPrecProd ON
	venListasPrecProd.ListaPrecio_Id = venListasPrecios.venListasPrecios
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = venListasPrecProd.Producto_Id
	LEFT JOIN stkFamilias ON  stkFamilias.stkFamilias = stkProductos.Familia_Id
	Where
	venListasPrecios.ListaPrecio_Id between @ListaDesde and @ListaHasta and
	isnull(stkFamilias.Familia_Id,' ') between @FamiliaDesde and @FamiliaHasta and
	@Empresa = ISNULL( venListasPrecios.Empresa_Id, @Empresa)
ORDER BY 1,6
GO
	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venMercAutorizada.sql*/
-- INF_venMercAutorizada @Segmento_Id ='REPARTO', @Segmento1N=1,@Segmento2N=0,	@Segmento3N= 0,@Segmento4N= 0,@Segmento1C= '0001',@Segmento2C= '  ',@Segmento3C=' ',	@Segmento4C= ' ',@Empresa =1

drop PROCEDURE INF_venMercAutorizada
GO

CREATE PROCEDURE INF_venMercAutorizada
(@Segmento_Id VarChar(10),
 @Segmento1N INT,
 @Segmento2N INT,
 @Segmento3N INT,
 @Segmento4N INT,
 @Segmento1C VarChar(20),
 @Segmento2C VarChar(20),
 @Segmento3C VarChar(20),
 @Segmento4C VarChar(20),
 @Empresa int
 )

AS

SELECT  dbo.Segmento(venRepaSegmentos.Segmento_Id, venRepaSegmentos.Segmento1C, venRepaSegmentos.Segmento2C
	, venRepaSegmentos.Segmento3C, venRepaSegmentos.Segmento4C, venRepaSegmentos.Segmento1N
	, venRepaSegmentos.Segmento2N, venRepaSegmentos.Segmento3N, venRepaSegmentos.Segmento4N) as Segmento,
	stkProductos.Producto_id, stkProductos.Descripcion, 
	SUM(venRepaPedi.CantidadForm) AS CantidadForm, stkUniMed.Medida_Id,
	SUM(venRepaPedi.CantidadAlternaForm) AS CantidadAlternaForm, 
	ISNULL(stkUniMedMA.Medida_Id,' ') as MedidaAlterna, 
	stkProductos.ClaseAlterna
	FROM venRepaSegmentos inner join venReparto ON
	venRepaSegmentos.venReparto = venReparto.venReparto
	INNER JOIN venRepaPedi ON
	venRepaPedi.venReparto =venReparto.venReparto
	INNER JOIN venPediCuerpo ON
	venPediCuerpo.venPedidos =venRepaPedi.venPedidos AND 
	venPediCuerpo.Renglon_Pe =venRepaPedi.Renglon_Pe
	INNER JOIN stkProductos ON
	stkProductos.stkProductos = venPediCuerpo.Producto_Id
	INNER JOIN genSegmentos ON
	genSegmentos.genSegmentos = venRepaSegmentos.Segmento_Id
	INNER JOIN stkUniMed ON
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	LEFT OUTER JOIN stkUniMed  as stkUniMedMA ON 
	stkUniMedMA.stkUniMed = stkProductos.MedidaAlterna
	WHERE
	genSegmentos.Segmento_Id = @Segmento_Id and 
	venRepaSegmentos.Segmento1C = @Segmento1C and  
	venRepaSegmentos.Segmento2C = @Segmento2C and 
	venRepaSegmentos.Segmento3C = @Segmento3C and  
	venRepaSegmentos.Segmento4C = @Segmento4C and 
	venRepaSegmentos.Segmento1N = @Segmento1N and 
	venRepaSegmentos.Segmento2N = @Segmento2N and 
	venRepaSegmentos.Segmento3N = @Segmento3N and  
	venRepaSegmentos.Segmento4N = @Segmento4N and 
	venRepaSegmentos.Empresa_Id = @Empresa 
GROUP BY venRepaSegmentos.Segmento_Id, venRepaSegmentos.Segmento1C, venRepaSegmentos.Segmento2C
	, venRepaSegmentos.Segmento3C, venRepaSegmentos.Segmento4C, venRepaSegmentos.Segmento1N
	, venRepaSegmentos.Segmento2N, venRepaSegmentos.Segmento3N, venRepaSegmentos.Segmento4N,
	stkProductos.Producto_id, stkProductos.Descripcion, stkUniMed.Medida_Id, stkUniMedMA.Medida_Id,
	stkProductos.ClaseAlterna
order by 2


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\inf_venMovimientosXSubTipoMov.sql*/

-- inf_venMovimientosXSubTipoMov 'FCSTK','FCSTK', '20200401','20200430',0
-- inf_venMovimientosXSubTipoMov 'FCSTK','FCSTK', '20200401','20200430',1
drop procedure inf_venMovimientosXSubTipoMov
go
create procedure inf_venMovimientosXSubTipoMov
(
@venSubTipoMovDesde varchar(5),
@venSubTipoMovHasta varchar(5),
@FechaDesde datetime,
@FechaHasta datetime,
@Detallado sino,
@Empresa_Id Int
)
as
if @Detallado=1
begin
--Detallado
select dbo.Segmento(Segmento_Id,Segmento1C,Segmento2C,Segmento3C,Segmento4C,Segmento1N,Segmento2N,Segmento3N,Segmento4N) as SegmentoSTR ,
venClientes.Cliente_Id, venClientes.RazonSocial as RazonSocialCliente, conAsientos.Fecha, venSubTipoMov.SubTipoMov_Id,
venSubTipoMov.Descripcion as DescripcionSubTipoMov, venMovimientos.Importe * conAsientos.Cambio Importe
From venMovimientos
inner join conAsientos on venMovimientos=conAsientos 
inner join genAsiSegmentos on genAsiSegmentos.Asiento_Id=venMovimientos
inner join venSubTipoMov on venMovimientos.venSubTipoMov_Id= venSubTipoMov.venSubTipoMov
inner join venClientes on venMovimientos.Cliente_Id= venClientes.genEntidades
inner join venTipoMov on venTipoMov.venTipoMov=venMovimientos.venTipoMov
where 
SubTipoMov_Id between @venSubTipoMovDesde and @venSubTipoMovHasta and 
conAsientos.Fecha between @FechaDesde and @FechaHasta and 
conAsientos.Anulado = 0 and 
conAsientos.Posteado=1 and 
conAsientos.Empresa_Id = @Empresa_Id
end
else
begin
--Resumen
select 
venSubTipoMov.SubTipoMov_Id, venSubTipoMov.Descripcion as DescripcionSubTipoMov, sum(Importe*venTipoMov.Signo * conAsientos.Cambio) as Importe
from venMovimientos
inner join venSubTipoMov on venMovimientos.venSubTipoMov_Id= venSubTipoMov.venSubTipoMov
inner join conAsientos on venMovimientos=conAsientos 
inner join venTipoMov on venTipoMov.venTipoMov=venMovimientos.venTipoMov
where 
SubTipoMov_Id between @venSubTipoMovDesde and @venSubTipoMovHasta and 
conAsientos.Fecha between @FechaDesde and @FechaHasta and 
conAsientos.Anulado = 0 and 
conAsientos.Posteado=1 and
conAsientos.Empresa_Id = @Empresa_Id
group by venSubTipoMov.SubTipoMov_Id, venSubTipoMov.Descripcion 
end
go
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPedArtPendDeta.sql*/

-- INF_venPedArtPendDeta ' ','zzz',' ','zzz',' ','zzz',1

DROP PROCEDURE INF_venPedArtPendDeta
GO
CREATE PROCEDURE INF_venPedArtPendDeta (
@VendedorDesde Char(5),
@VendedorHasta Char(5), 
@ClienteDesde Char(15),
@ClienteHasta Char(15),
@ProductoDesde Char(25),
@ProductoHasta Char(25),
@Empresa int)

AS
select stkProductos.Producto_id, stkProductos.Descripcion as DescripcionProducto, 
venPediSegmentos.venPedidos, dbo.Segmento(venPediSegmentos.Segmento_Id,
venPediSegmentos.Segmento1C, venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N) as Segmento, venClientes.Cliente_Id, 
venClientes.RazonSocial  , venPedidos.Fecha, venPediCuerpo.FechaEntrega,
venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVen,
genMonedas.Moneda_Id, 
convert(Numeric(18,6), (venPediCuerpo.CantidadPedida -  venPediCuerpo.CantidadRemitida) / venPediCuerpo.Factor) as CantidadPendiente,
convert(Numeric(18,6), ((venPediCuerpo.CantidadPedida -  venPediCuerpo.CantidadRemitida) / venPediCuerpo.Factor)* venPediCuerpo.precioVenta) as Precio
,venPediCuerpo.PrecioVenta*venPedidos.Cambio as PrecioBase,venPediCuerpo.CantidadPedida as CantidadOriginal
From venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join venPediCuerpo ON
venPediCuerpo.venPedidos = venpedidos.venpedidos 
inner join stkProductos ON
stkProductos.stkProductos = venPediCuerpo.Producto_Id
inner join stkUniMed ON
stkUniMed.stkUniMed = venPedicuerpo.Medida_Id
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado <> 'R' AND 
	venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
	venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta And
	stkProductos.Producto_Id Between @ProductoDesde And @ProductoHasta And
	venPediCuerpo.CantidadPedida >  venPediCuerpo.CantidadRemitida and 
	venPediCuerpo.Pendiente = 1 and 
	venPedidos.Estado NOT IN ('T','N','R')
ORDER BY 1,3,4,5,6,7,8
	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPedArtPendRes.sql*/

-- INF_venPedArtPendRes ' ','zzz',1

DROP PROCEDURE INF_venPedArtPendRes
GO
CREATE PROCEDURE INF_venPedArtPendRes (
@VendedorDesde Char(5),
@VendedorHasta Char(5),
@ClienteDesde Char(15),
@ClienteHasta Char(15),
@ProductoDesde Char(25),
@ProductoHasta Char(25),
@Empresa int)

AS
select stkProductos.Producto_id, stkProductos.Descripcion as DescripcionProducto, 
SUM(convert(Numeric(18,6), (venPediCuerpo.CantidadPedida -  venPediCuerpo.CantidadRemitida) / venPediCuerpo.Factor)) as CantidadPendiente, 
ISNULL(stkExistencia.Cantidad,0) AS Existencia, 
ISNULL((select sum(stkExistencia.Cantidad) from stkExistencia where
	stkExistencia.Producto_Id= stkProductos.stkProductos and 
	stkExistencia.Empresa_Id = @Empresa ) ,0) AS ExistenciaTotal 
From venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join venPediCuerpo ON
venPediCuerpo.venPedidos = venpedidos.venpedidos 
inner join stkProductos ON
stkProductos.stkProductos = venPediCuerpo.Producto_Id
inner join stkUniMed ON
stkUniMed.stkUniMed = venPedicuerpo.Medida_Id
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
left join stkExistencia ON stkExistencia.Producto_Id= venPediCuerpo.Producto_Id and 
stkExistencia.Deposito_Id = venPediCuerpo.Deposito_Id and 
stkExistencia.Empresa_Id = @Empresa 
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado <> 'R' AND 
	venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
	venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta And
	stkProductos.Producto_Id Between @ProductoDesde And @ProductoHasta And
	venPediCuerpo.CantidadPedida >  venPediCuerpo.CantidadRemitida and 
	venPediCuerpo.Pendiente = 1 and 
	venPedidos.Estado NOT IN ('T','N','R')
GROUP BY stkProductos.Producto_id, stkProductos.Descripcion 	, stkExistencia.Cantidad, 
stkProductos.stkProductos
ORDER BY 1
	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPedCliente.sql*/

-- INF_venPedCliente ' ','zzz','20190501','20190531',1
-- se supone que son Ingresados y no pendientes

DROP PROCEDURE INF_venPedCliente
GO
CREATE PROCEDURE INF_venPedCliente (
@ClienteDesde VarChar(15),
@ClienteHasta VarChar(15),
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@Empresa int)

AS
DECLARE @FechaHasta1 DateTime 
SET @FechaHasta1 = DATEADD(ms,-31,DATEADD(dd,1,@FechaHasta))
SELECT venClientes.Cliente_Id,  venClientes.RazonSocial,  
venPediSegmentos.venPedidos,  dbo.Segmento(venPediSegmentos.Segmento_Id,
venPediSegmentos.Segmento1C, venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N) as Segmento, venPedidos.Fecha, 
venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVen,
venPedidos.ImporteTotal, genMonedas.Moneda_id,
stkProductos.Producto_id, stkProductos.Descripcion as DescripcionProducto, 
venPediCuerpo.CantidadOriginal, 
convert(Numeric(18,6), (venPediCuerpo.CantidadPedida -  venPediCuerpo.CantidadRemitida) / venPediCuerpo.Factor) as CantidadPendiente,
venPediCuerpo.PrecioVenta as Precio, venPediCuerpo.PrecioVenta*venPedidos.Cambio as PrecioBase, venPedidos.CliOrdenCompra
FROM venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join venPediCuerpo ON
venPediCuerpo.venPedidos = venpedidos.venpedidos 
inner join stkProductos ON
stkProductos.stkProductos = venPediCuerpo.Producto_Id
inner join stkUniMed ON
stkUniMed.stkUniMed = venPedicuerpo.Medida_Id
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado <> 'R' AND 
	VenClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and
	/*venPediCuerpo.CantidadPedida >  venPediCuerpo.CantidadRemitida and 
	venPediCuerpo.Pendiente = 1 and */
	-- venPedidos.Estado NOT IN ('T','N','R') and 
	venPedidos.Fecha between @FechaDesde And @FechaHasta1
ORDER BY 1,3,4,5,6,7,8,9,10



	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPedEstados.sql*/
-- INF_venPedEstados '20190501','20190531',1,'002','002',1

DROP PROCEDURE INF_venPedEstados
GO
CREATE PROCEDURE INF_venPedEstados (
@FechaDesde DateTime,
@FechaHasta DateTime,
@Pendientes bit, 
@VendedorDesde Char(5),
@VendedorHasta Char(5),
@Empresa int
)

AS
SELECT 
venPediSegmentos.venPedidos, 
dbo.Segmento(genSegmentos.genSegmentos,
 venPediSegmentos.Segmento1C,  
venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N) as SegmentoStr, venClientes.Cliente_Id, 
venpedidos.Sucursal as SucCliente,
venClientes.RazonSocial  , venPedidos.Fecha, venPedidos.Fecha_Registro,
venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVen,
genMonedas.Moneda_id, 
Convert(Numeric(18,2),SUM(venPediCuerpo.CantidadPedida*venPediCuerpo.PrecioVenta)) as MontoMO,
Convert(Numeric(18,2),SUM((venPediCuerpo.CantidadPedida-venPediCuerpo.CantidadFacturada)*venPediCuerpo.PrecioVenta)) as MontoPendienteMO,
Convert(Numeric(18,2),SUM(venPediCuerpo.CantidadPedida*venPediCuerpo.PrecioVenta*venPedidos.Cambio)) as Monto,
Convert(Numeric(18,2),SUM((venPediCuerpo.CantidadPedida-venPediCuerpo.CantidadFacturada)*venPediCuerpo.PrecioVenta*venPedidos.Cambio)) as MontoPendiente,
venPedidos.Estado, 
case when venPedidos.UsuarioAutoriz_Id is null and venPedidos.Motivo_Id is not null and 
	venPedidos.Estado = 'P' THEN 1 ELSE 0 END AS RetenidoEnCredito, 
case when (select count(1) from venPediCuerpo  LEFT JOIN stkExistencia ON
	stkExistencia.Producto_Id  = venPediCuerpo.Producto_Id and 
	stkExistencia.Deposito_Id = venPediCuerpo.Deposito_Id
	Where
	venPediCuerpo.venPedidos = venPediSegmentos.venPedidos and 
	(venPediCuerpo.CantidadPedida - venPediCuerpo.CantidadRemitida) > ISNULL(stkExistencia.Cantidad,0) ) > 0
	then 1 else 0 end as FaltaStock, ISNULL(venPedidos.Observaciones,'') AS Observaciones ,
	@Pendientes Pend, @VendedorDesde VendD ,@VendedorHasta VendH 
From venpedidos 
INNER JOIN venPediSegmentos ON venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join venPediCuerpo ON venPediCuerpo.venPedidos = venpedidos.venpedidos 
inner join stkProductos ON stkProductos.stkProductos = venPediCuerpo.Producto_Id
inner join stkUniMed ON stkUniMed.stkUniMed = venPedicuerpo.Medida_Id
inner join genMonedas ON genMonedas.genMonedas = venPedidos.Moneda_Id
INNER JOIN genSegmentos ON genSegmentos.Segmento_Id = 'NP' 
WHERE
	venPedidos.Empresa_id = @Empresa AND
	venVendedores.Vendedor_Id BETWEEN @VendedorDesde AND @VendedorHasta AND
	venpedidos.Estado <> 'R' AND 
	((@Pendientes=0 AND venPedidos.Fecha Between @FechaDesde and @FechaHasta) OR
	(@Pendientes=1 AND venPedidos.Estado NOT IN ('N','T')))
GROUP BY venPediSegmentos.venPedidos, venPediSegmentos.Segmento1C,  
venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N, venClientes.Cliente_Id, 
venClientes.RazonSocial  , venPedidos.Fecha, 
venVendedores.Vendedor_Id, venVendedores.Nombre,
genMonedas.Moneda_id, venPedidos.Estado, venPedidos.Motivo_Id,
venPedidos.UsuarioAutoriz_Id, genSegmentos.genSegmentos, venPedidos.Fecha_Registro, 
venPedidos.Observaciones, venpedidos.Sucursal 
ORDER BY 2,3,4,5,6,7,8 
	
	
	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPediAutorizados.sql*/

-- INF_venPediAutorizados ' ','zzz', '20170101', '20170630',1

DROP PROCEDURE INF_venPediAutorizados
GO
CREATE PROCEDURE INF_venPediAutorizados (
@VendedorDesde Char(5),
@VendedorHasta Char(5), 
@FechaDesde DateTime, @FechaHasta DateTime,
@Empresa int )

AS
select venPediSegmentos.venPedidos, dbo.Segmento(venPediSegmentos.Segmento_Id,
venPediSegmentos.Segmento1C, venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N) as Segmento, venClientes.Cliente_Id, 
venClientes.RazonSocial  , venPedidos.Fecha, 
venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVen,
venpedidos.ImporteTotal, genMonedas.Moneda_id,
genUsuarios.Usuario_Id, genUsuarios.Apellido_y_Nombres as NombreUsuario
From venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join genUsuarios ON 
venpedidos.UsuarioAutoriz_id =genUsuarios.genUsuarios
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado <> 'R' AND 
	venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
	DATEADD(dd, 0, DATEDIFF(dd, 0, venPedidos.FechaAutorizo)) between @FechaDesde and @FechaHasta --FM que filtre solo por Date y no por Time
ORDER BY 2,3,4,5,6,7,8,9
	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPediCabe.sql*/
DROP PROCEDURE INF_venPediCabe 
GO
CREATE PROCEDURE INF_venPediCabe  (
    @Empresa_Id int, 
    @Segmento_Id VarChar(10), 
    @Segmento1N int,
    @Segmento2N int,
    @Segmento3N int,
    @Segmento4N int,
    @Segmento1C VarChar(20),
    @Segmento2C VarChar(20),
    @Segmento3C VarChar(20),
    @Segmento4C VarChar(20)

    )

    AS
    SELECT venPediSegmentos.venPedidos, 
    dbo.Segmento(venPediSegmentos.Segmento_Id, venPediSegmentos.Segmento1C,
    venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, venPediSegmentos.Segmento4C, 
    venPediSegmentos.Segmento1N, venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N, 
    venPediSegmentos.Segmento4N) AS SegmentoStr, 
    genSegmentos.Segmento_Id, venPediSegmentos.Segmento1C,
    venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, venPediSegmentos.Segmento4C, 
    venPediSegmentos.Segmento1N, venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N, venPediSegmentos.Segmento4N, 
    venPedidos.Fecha, venPedidos.Fecha_Registro , venPedidos.Cambio,
    venClientes.Cliente_Id, venClientes.RazonSocial, genEntidades.Cuit,
    venClieHabitual.NombreFantasia, venClieHabitual.Direccion1_Fact, 
    venClieHabitual.NroExterior_Fact, venClieHabitual.NroInterior_Fact,
    venClieHabitual.Direccion2_Fact, venClieHabitual.Localidad_Fact, 
    venClieHabitual.CodPostal_Fact, genProvincias.Provincia_Id AS Provincia_Id_Fact,
    genProvincias.Descripcion AS DescripcionProvincia_Id_Fact, genProvincias.CodFiscal AS CodFiscalProv,
    genPaises.Pais_Id AS Pais_Id_Fact, genPaises.Descripcion AS DescripcionPais_Id,
	genPaises.CodFiscal AS CodFiscalPais, 
	venClieHabitual.Direccion1_Entr, 
    venClieHabitual.NroExterior_Entr, venClieHabitual.NroInterior_Entr,
    venClieHabitual.Direccion2_Entr, venClieHabitual.Localidad_Entr, 
    venClieHabitual.CodPostal_Entr, genProvinciasE.Provincia_Id AS Provincia_Id_Entr,
    genProvinciasE.Descripcion AS DescripcionProvincia_Id_Entr, genProvinciasE.CodFiscal AS CodFiscalProvEntr,
    genPaisesE.Pais_Id AS Pais_Id_Entr, genPaisesE.Descripcion AS DescripcionPais_Id_Entr,
    venSubTipoMov.SubTipoMov_Id, 
    venSubTipoMov.Descripcion AS DescripcionSubTipoMov,
    venPedidos.ImporteTotal AS Importe, venPedidos.Observaciones, 
    venPedidos.UsoCfdi, venPedidos.MetodoPago AS FormaPago, EntidadBasica.Descripcion as DescripcionFormaPago,
    /*venPedidos.TipoProceso, venPedidos.TipoComite, venPedidos.idContabilidad,*/
    genMonedas.Moneda_Id, genMonedas.Descripcion AS DescripcionMoneda, 
    venCondPago.CondPagoCli_Id,       venCondPago.Descripcion DescripcionCondPago, ImporteTotal, SubTotal, 
    venPedidos.ImporteTotal - ISNULL((SELECT SUM(ROUND(venPediCuerpo.CantidadPedida *venPediCuerpo.PrecioVenta,2))
		from venpediCuerpo where venPediCuerpo.venPedidos = venPedidos.venPedidos),0) AS Impuestos, 
	venPedidos.Bonificacion1, 
    venPedidos.Bonificacion2, venPedidos.Bonificacion3, venPedidos.Bonificacion4, venPedidos.Bonificacion5,
	venPedidos.CliOrdenCompra
    FROM venPediSegmentos
    INNER JOIN genSegmentos ON venPediSegmentos.Segmento_Id = genSegmentos.genSegmentos
    INNER JOIN venPedidos ON venPedidos.venPedidos = venPediSegmentos.venPedidos
    INNER JOIN genEntidades ON genEntidades.genEntidades =venPedidos.Cliente_Id 
    INNER JOIN venClientes ON venClientes.genEntidades = genEntidades.genEntidades 
    INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venPedidos.Cliente_Id and 
            venClieHabitual.Sucursal =venPedidos.Sucursal
    INNER JOIN genProvincias ON       genProvincias.genProvincias = venClieHabitual.Provincia_Id_Fact
    INNER JOIN genPaises ON    genPaises.genPaises = venClieHabitual.Pais_Id_Fact
    INNER JOIN genProvincias genProvinciasE ON       genProvinciasE.genProvincias = venClieHabitual.Provincia_Id_Entr
    INNER JOIN genPaises genPaisesE ON    genPaisesE.genPaises = venClieHabitual.Pais_Id_Entr
    INNER JOIN venSubTipoMov ON       venSubTipoMov.venSubTipoMov = venPedidos.SubTipoMov_Id
    INNER JOIN genMonedas ON genMonedas.genMonedas = venPedidos.Moneda_Id
    /*left join genEntidadesBasicasValor NEntidadBasica on NEntidadBasica.Entidad_Id=7 and NEntidadBasica.Dominio_Id='MX' and NEntidadBasica.Clave=venPedidos.NMetodoPago*/
    LEFT JOIN genEntidadesBasicasValor EntidadBasica on EntidadBasica.Entidad_Id=6 and EntidadBasica.Dominio_Id='MX' and EntidadBasica.Clave=venPedidos.MetodoPago
    INNER JOIN venTipoMov on venTipoMov.venTipoMov=venSubTipoMov.venTipoMov
    INNER JOIN venCondFiscal On venCondFiscal.venCondFiscal = venClientes.CondFisc_Id
    INNER JOIN venCondPago On venCondPago.venCondPago = venPedidos.CondPagoCli_Id
    WHERE
			venPediSegmentos.Empresa_Id = @Empresa_Id And
            genSegmentos.Segmento_Id =  @Segmento_Id and
            venPediSegmentos.Segmento1C = @Segmento1C and 
            venPediSegmentos.Segmento2C = @Segmento2C and 
            venPediSegmentos.Segmento3C = @Segmento3C and 
            venPediSegmentos.Segmento4C = @Segmento4C and 
            venPediSegmentos.Segmento1N = @Segmento1N and 
            venPediSegmentos.Segmento2N = @Segmento2N and  
            venPediSegmentos.Segmento3N = @Segmento3N and  
            venPediSegmentos.Segmento4N = @Segmento4N 


GO


DROP PROCEDURE INF_venPediCuerpo
GO
CREATE PROCEDURE INF_venPediCuerpo (
	@Empresa_Id int, 
	@Segmento_Id VarChar(10), 
	@Segmento1N int,
	@Segmento2N int,
	@Segmento3N int,
	@Segmento4N int,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
	)
	AS
	SELECT venPediCuerpo.Renglon_Pe, stkProductos.Producto_Id, 
		stkProductos.Descripcion, stkProductos.DescripcionDetallada, stkProductos.Description, 
		stkUniMed.Medida_Id as MedidaProd, stkUniMed.CodigoFiscal as FiscalMedidaProd,
		MedidaMov.Medida_Id as MedidaMov, MedidaMov.CodigoFiscal as FiscalMedidaMov,
		venPediCuerpo.CantidadPedida, venPediCuerpo.CantidadOriginal, 
		venPediCuerpo.PrecioForm, venPediCuerpo.PrecioLista, venPediCuerpo.PrecioVenta, 
		venPediCuerpo.Observaciones, venPediCuerpo.Bonificacion, 
		venPediCuerpo.CantidadPedida*venPediCuerpo.PrecioVenta SubTotal, venPediCuerpo.FechaEntrega
	FROM venPediCuerpo 
		INNER JOIN venPediSegmentos ON venPediCuerpo.venPedidos = venPediSegmentos.venPedidos
		INNER JOIN genSegmentos ON venPediSegmentos.Segmento_Id = genSegmentos.genSegmentos
		INNER JOIN stkProductos ON stkProductos.stkProductos = venPediCuerpo.Producto_Id
		INNER JOIN stkUniMed ON stkUniMed.stkUniMed = stkProductos.Medida_Id
		INNER JOIN stkUniMed AS MedidaMov ON MedidaMov.stkUniMed = venPediCuerpo.Medida_Id
	WHERE
		venPediSegmentos.Empresa_Id = @Empresa_Id And
		genSegmentos.Segmento_Id =  @Segmento_Id and
		venPediSegmentos.Segmento1C = @Segmento1C and 
		venPediSegmentos.Segmento2C = @Segmento2C and 
		venPediSegmentos.Segmento3C = @Segmento3C and 
		venPediSegmentos.Segmento4C = @Segmento4C and 
		venPediSegmentos.Segmento1N = @Segmento1N and 
		venPediSegmentos.Segmento2N = @Segmento2N and  
		venPediSegmentos.Segmento3N = @Segmento3N and  
		venPediSegmentos.Segmento4N = @Segmento4N  
	ORDER BY 1

GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPediRetCreditos.sql*/
-- INF_venPediRetCreditos ' ','zzz',1

DROP PROCEDURE INF_venPediRetCreditos
GO
CREATE PROCEDURE INF_venPediRetCreditos (
@VendedorDesde Char(5),
@VendedorHasta Char(5),
@Empresa int)

AS
select venPediSegmentos.venPedidos, dbo.Segmento(venPediSegmentos.Segmento_Id,
venPediSegmentos.Segmento1C, venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N) as Segmento, venClientes.Cliente_Id, 
venClientes.RazonSocial  , venPedidos.Fecha, 
venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVen,
genMonedas.Moneda_id, venpedidos.ImporteTotal
From venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado = 'P' AND 
	-- venpedidos.Motivo_id IS NOT NULL AND 
	venpedidos.UsuarioAutoriz_id IS NULL and 
	venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta
ORDER BY 2,3,4,5,6,7,8,9
	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPedRankCliente.sql*/

-- INF_venPedRankCliente '20170101','20171231', 1

DROP PROCEDURE INF_venPedRankCliente
GO
CREATE PROCEDURE INF_venPedRankCliente (
@FechaDesde DateTime,
@FechaHasta DateTime,
@Empresa int)

AS

SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,@FechaHasta), @Empresa) as Cambio
INTO #CAMBIO
FROM genMonedas

select venClientes.Cliente_Id,  venClientes.RazonSocial,  
SUM(Convert(numeric(18,2) , venPediCuerpo.CantidadPedida * venPediCuerpo.PrecioVenta*Cambio.Cambio)) as Monto
From venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join venPediCuerpo ON
venPediCuerpo.venPedidos = venpedidos.venpedidos 
inner join stkProductos ON
stkProductos.stkProductos = venPediCuerpo.Producto_Id
inner join stkUniMed ON
stkUniMed.stkUniMed = venPedicuerpo.Medida_Id
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
inner join #CAMBIO Cambio on 
Cambio.genMonedas = genMonedas.genMonedas
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado <> 'R' AND 
	venPedidos.Fecha Between @FechaDesde and @FechaHasta
GROUP BY venClientes.Cliente_Id,  venClientes.RazonSocial 	
ORDER BY 3 Desc
	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPedVenedor.sql*/

-- INF_venPedVenedor ' ','zzz',1

DROP PROCEDURE INF_venPedVenedor
GO
CREATE PROCEDURE INF_venPedVenedor (
@VendedorDesde Char(5),
@VendedorHasta Char(5),
@Empresa int)

AS
select venPediSegmentos.venPedidos, dbo.Segmento(venPediSegmentos.Segmento_Id,
venPediSegmentos.Segmento1C, venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, 
venPediSegmentos.Segmento4C, venPediSegmentos.Segmento1N,  
venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N,   
venPediSegmentos.Segmento4N) as Segmento, venClientes.Cliente_Id, 
venClientes.RazonSocial  , venPedidos.Fecha, 
venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVen,
venpedidos.ImporteTotal, genMonedas.Moneda_id,
stkProductos.Producto_id, stkProductos.Descripcion as DescripcionProducto, 
venPediCuerpo.CantidadOriginal, 
convert(Numeric(18,6), (venPediCuerpo.CantidadPedida -  venPediCuerpo.CantidadRemitida) / venPediCuerpo.Factor) as CantidadPendiente,
venPediCuerpo.PrecioVenta as Precio, venPediCuerpo.PrecioVenta*venPedidos.Cambio as PrecioBase
From venpedidos INNER JOIN venPediSegmentos ON
venpedidos.venpedidos = venPediSegmentos.venpedidos
inner join venClientes ON
venpedidos.Cliente_Id = venClientes.genEntidades
inner join venVendedores ON 
venVendedores.venVendedores = venPedidos.Vendedor_Id
inner join venPediCuerpo ON
venPediCuerpo.venPedidos = venpedidos.venpedidos 
inner join stkProductos ON
stkProductos.stkProductos = venPediCuerpo.Producto_Id
inner join stkUniMed ON
stkUniMed.stkUniMed = venPedicuerpo.Medida_Id
inner join genMonedas ON
genMonedas.genMonedas = venPedidos.Moneda_Id
WHERE
	venPedidos.Empresa_id = @Empresa and 
	venpedidos.Estado <> 'R' AND 
	venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
	venPediCuerpo.CantidadPedida >  venPediCuerpo.CantidadRemitida and 
	venPediCuerpo.Pendiente = 1 and 
	venPedidos.Estado NOT IN ('T','N','R')
ORDER BY 2,3,4,5,6,7,8,9
	
	
	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPosfinanciera.sql*/
-- INF_venPOSFINANCIERA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'C' ,1
-- INF_venPOSFINANCIERA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'V' ,1
-- INF_venPOSFINANCIERA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'Z' ,1
-- INF_venPOSFINANCIERA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'R' ,1
-- INF_venPOSFINANCIERA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'T' ,1
-- INF_venPOSFINANCIERA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'S' ,1
DROP PROCEDURE INF_venPOSFINANCIERA
GO

CREATE PROCEDURE INF_venPOSFINANCIERA(
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Fecha DateTime, 
	@Dias Int,
	@Columna int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@VendedorDesde varchar(5),
	@VendedorHasta varchar(5),
	@RegionDesde varchar(5),
	@RegionHasta varchar(5),
	@ZonaDesde varchar(5),
	@ZonaHasta varchar(5),
	@AgruparPor Char(1),
	@Empresa Int,
	@MonedaRegional bit
)
AS
SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,dbo.FechaActual()), @Empresa) as Cambio
INTO #CAMBIO
FROM genMonedas

-- @AgruparPor C Cliente - V Vendedror - Z Zona - R Region - T tipo de Cliente - S SucursalCliente
DECLARE @Fecha1 DateTime
DECLARE @Fecha2 DateTime
DECLARE @Fecha3 DateTime
DECLARE @Fecha4 DateTime
DECLARE @Fecha5 DateTime

SET @Fecha1 = dateadd(dd, @Dias*(1-@Columna), @Fecha)
SET @Fecha2 = dateadd(dd, @Dias*(2-@Columna), @Fecha)
SET @Fecha3 = dateadd(dd, @Dias*(3-@Columna), @Fecha)
SET @Fecha4 = dateadd(dd, @Dias*(4-@Columna), @Fecha)
SET @Fecha5 = dateadd(dd, @Dias*(5-@Columna), @Fecha)



SELECT Agrupador_Id, Descripcion, Moneda_Id, SUM(Anterior) as Anterior, 
	SUM(Periodo01) as Periodo01, SUM(Periodo02) as Periodo02,  
	SUM(Periodo03) as Periodo03, SUM(Periodo04) as Periodo04,  
	SUM(Posterior)  as Posterior, SUM(Saldo) as Saldo,
		@Fecha as Fecha,
		@Fecha1 as Fecha1,@Fecha2 as Fecha2, @Fecha3 as Fecha3,
		@Fecha4 as Fecha4, @Fecha5 as Fecha5

FROM (
SELECT venClientes.Cliente_Id, genMonedas.Moneda_Id,venClientes.RazonSocial, 
	case @AgruparPor when 'C' Then  venClientes.Cliente_Id 
	when 'V' then venVendedores.Vendedor_Id
	when 'Z' Then venZona.Zona_Id
	when 'R' Then venRegion.Region_Id
	when 'T' Then venTiposClie.TipoClie_Id
	else venClientes.Cliente_Id +'-'+LTRIM(STR(venCliehabitual.Sucursal,8)) END AS Agrupador_Id,
	case @AgruparPor when 'C' Then  venClientes.RazonSocial
	when 'V' then venVendedores.Nombre
	when 'Z' Then venZona.Descripcion
	when 'R' Then venRegion.Descripcion
	when 'T' Then venTiposClie.Descripcion
	else venClieHabitual.NombreFantasia END AS Descripcion,

	(	CASE WHEN genMovCuotas.FechaVencimiento < @FECHA1 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) ))
						ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end) as Anterior ,
	(
		CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA1 And
				genMovCuotas.FechaVencimiento < @FECHA2
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov, conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) ))
			
			 ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end) as Periodo01 ,
	(
	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA2 And
				genMovCuotas.FechaVencimiento < @FECHA3
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov, conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) )) ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end) as Periodo02 ,
	(
	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA3 And
				genMovCuotas.FechaVencimiento < @FECHA4
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) )) ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end) as Periodo03 ,
	(
	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA4 And
				genMovCuotas.FechaVencimiento < @FECHA5
		 THEN
		(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) )) ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end) as Periodo04 ,
	(
	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA5
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov, conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) )) ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end) as Posterior ,

		(venTipoMov.Signo*(genMovCuotas.Saldo  +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) )
						* case when @MonedaRegional=1 then #Cambio.Cambio else 1 end)
			 AS Saldo,
			 venVendedores.Vendedor_Id, venZona.Zona_Id, venZona.Descripcion as DescripcionZona,
			 venRegion.Region_Id, venRegion.Descripcion as DescripcionRegionn, venClieHabitual.Sucursal

	
FROM venMovimientos inner join venClientes ON
	venMovimientos.Cliente_Id= venClientes.genEntidades
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = venMovimientos.venMovimientos
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genAsiSegmentos on 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venSubTipoMov ON
	venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id 
	INNER JOIN venTipoMov ON
	venTipoMov.venTipoMov = venMovimientos.venTipoMov
	INNER JOIN genMovCuotas ON
	genMovCuotas.Asiento_Id = venMovimientos.venMovimientos
	inner join genSucursalesEmpr ON 
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	inner join venVendedores on venVendedores.venVendedores=venMovimientos.Vendedor_Id
	inner join venClieHabitual on venClieHabitual.genEntidades=venMovimientos.Cliente_Id and
	venClieHabitual.Sucursal=venMovimientos.Sucursal
	inner join venZona on venZona.venZona=venClieHabitual.Zona_Id
	inner join venRegion on venRegion.venRegion=venClieHabitual.Region_Id
	INNER JOIN venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	inner join #Cambio on #CAMBIO.genMonedas=conAsientos.Moneda_Id
	WHERE
		genSucursalesEmpr.Sucursal Between @SucursalDesde and @SucursalHasta and 
		conAsientos.Fecha <= @Fecha and 
		conAsientos.Anulado = 0 and 
		venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and
		venRegion.Region_Id between @RegionDesde and @RegionHasta and
		venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
		genMovCuotas.Saldo +
		ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) <> 0 and 
		conAsientos.Empresa_Id = @Empresa ) AS XXX
GROUP BY Agrupador_Id , Moneda_Id,Descripcion
ORDER BY 1,2
OPTION (Recompile)
GO



Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venPosfinancieraDeta.sql*/
-- INF_venPOSFINANCIERADETA ' ','zzzz', '20201105', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'C' ,1
-- INF_venPOSFINANCIERADETA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'V' ,1
-- INF_venPOSFINANCIERADETA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'R' ,1
-- INF_venPOSFINANCIERADETA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'Z' ,1
-- INF_venPOSFINANCIERADETA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'T' ,1
-- INF_venPOSFINANCIERADETA ' ','zzzz', '20180930', 7, 1,' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ', 'S' ,1

DROP PROCEDURE INF_venPOSFINANCIERADETA

GO
CREATE PROCEDURE INF_venPOSFINANCIERADETA(
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Fecha DateTime, 
	@Dias Int,
	@Columna int,
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@VendedorDesde varchar(5),
	@VendedorHasta varchar(5),
	@RegionDesde varchar(5),
	@RegionHasta varchar(5),
	@ZonaDesde varchar(5),
	@ZonaHasta varchar(5),
	@AgruparPor Char(1),
	@Empresa Int,
	@MonedaRegional bit
)

AS
SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,dbo.FechaActual()), @Empresa) as Cambio
INTO #CAMBIO
FROM genMonedas

-- @AgruparPor C Cliente - V Vendedror - Z Zona - R Region - T tipo de Cliente - S SucursalCliente
DECLARE @Fecha1 DateTime
DECLARE @Fecha2 DateTime
DECLARE @Fecha3 DateTime
DECLARE @Fecha4 DateTime
DECLARE @Fecha5 DateTime

SET @Fecha1 = dateadd(dd, @Dias*(1-@Columna), @Fecha)
SET @Fecha2 = dateadd(dd, @Dias*(2-@Columna), @Fecha)
SET @Fecha3 = dateadd(dd, @Dias*(3-@Columna), @Fecha)
SET @Fecha4 = dateadd(dd, @Dias*(4-@Columna), @Fecha)
SET @Fecha5 = dateadd(dd, @Dias*(5-@Columna), @Fecha)


SELECT case @AgruparPor when 'C' Then  venClientes.Cliente_Id 
	when 'V' then venVendedores.Vendedor_Id
	when 'Z' Then venZona.Zona_Id
	when 'R' Then venRegion.Region_Id
	when 'T' Then venTiposClie.TipoClie_Id
	else venClientes.Cliente_Id +'-'+LTRIM(STR(venCliehabitual.Sucursal,8)) END AS Agrupador_Id,
	case @AgruparPor when 'C' Then  venClientes.RazonSocial
	when 'V' then venVendedores.Nombre
	when 'Z' Then venZona.Descripcion
	when 'R' Then venRegion.Descripcion
	when 'T' Then venTiposClie.Descripcion
	else venClieHabitual.NombreFantasia END AS Descripcion,
	venClientes.Cliente_Id, 	genMonedas.Moneda_Id,	conAsientos.Cambio, conAsientos.Fecha as FechaEmision, 
	genMovCuotas.FechaVencimiento, 
	venClientes.RazonSocial, 
		dbo.Segmento(genAsiSegmentos.Segmento_id, 
			genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C,
			genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C,
			genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N,
			genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento, 
		CASE WHEN genMovCuotas.FechaVencimiento < @FECHA1 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0))) 

			 ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end as Anterior ,
		CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA1 And
				genMovCuotas.FechaVencimiento < @FECHA2
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov, conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0)))  ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end as Periodo01 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA2 And
				genMovCuotas.FechaVencimiento < @FECHA3
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0)))  ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end as Periodo02 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA3 And
				genMovCuotas.FechaVencimiento < @FECHA4
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0)))  ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end as Periodo03 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA4 And
				genMovCuotas.FechaVencimiento < @FECHA5
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0)))  ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end as Periodo04 ,

	CASE WHEN genMovCuotas.FechaVencimiento >= @FECHA5
		 THEN
			(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0)))  ELSE 0 END * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end as Posterior ,

		(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0))) * case when @MonedaRegional=1 then #Cambio.Cambio else 1 end AS Saldo, 
		@Fecha as Fecha,
		@Fecha1 as Fecha1,@Fecha2 as Fecha2, @Fecha3 as Fecha3,
		@Fecha4 as Fecha4, @Fecha5 as Fecha5,
		venTiposClie.TipoClie_Id, venTiposClie.Descripcion as DescripcionTipoClie, 
		venVendedores.Vendedor_Id, venZona.Zona_Id, venZona.Descripcion as DescripcionZona,
		venRegion.Region_Id, venRegion.Descripcion as DescripcionRegionn
		
	
FROM venMovimientos inner join venClientes ON
	venMovimientos.Cliente_Id= venClientes.genEntidades
	INNER JOIN conAsientos ON
	conAsientos.conAsientos = venMovimientos.venMovimientos
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join genAsiSegmentos on 
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venSubTipoMov ON
	venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id 
	INNER JOIN venTipoMov ON
	venTipoMov.venTipoMov = venMovimientos.venTipoMov
	INNER JOIN genMovCuotas ON
	genMovCuotas.Asiento_Id = venMovimientos.venMovimientos
	inner join genSucursalesEmpr ON 
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	inner join venVendedores on venVendedores.venVendedores=venMovimientos.Vendedor_Id
	inner join venClieHabitual on venClieHabitual.genEntidades=venMovimientos.Cliente_Id and 
	venClieHabitual.Sucursal=venMovimientos.Sucursal
	inner join venRegion on venClieHabitual.Region_Id=venRegion.venRegion
	inner join venZona on venZona.venZona=venClieHabitual.Zona_Id
	inner join venTiposClie on venTiposClie.venTiposClie=venClieHabitual.TipoClie_Id
	inner join #Cambio  on #Cambio.genmonedas=conAsientos.Moneda_Id
	WHERE
		genSucursalesEmpr.Sucursal Between @SucursalDesde and @SucursalHasta and 
		conAsientos.Anulado = 0 and 
		conAsientos.Fecha <= @Fecha and 
		venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and 
		venVendedores.Vendedor_Id between @VendedorDesde and @VendedorHasta and
		venRegion.Region_Id between @RegionDesde and @RegionHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and
		(venTipoMov.Signo*(genMovCuotas.Saldo+ 
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id_Ap and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0) +
			ISNULL((select sum(genCancMov.Importe) from genCancMov , conAsientos conAsientos1
					Where
						conAsientos1.conAsientos = genCancMov.Asiento_Id and
						conAsientos1.Anulado = 0 and 
						conAsientos1.Posteado = 1 and 
						genCancMov.Asiento_Id_ap = genMovCuotas.Asiento_Id and 
						genCancMov.CuotaNro = genMovCuotas.CuotaNro And
						genCancMov.FechaAplicacion > @Fecha),0)))  <> 0 and 
		conAsientos.Empresa_Id = @Empresa 

ORDER BY 1,7,9
OPTION (RECOMPILE)
GO


	

	
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venProdCotizados.sql*/
DROP PROCEDURE Inf_venProdCotizados
GO
CREATE PROCEDURE Inf_venProdCotizados(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@Empresa_Id Int

)
as

SELECT venCotizaciones.Fecha, 
	dbo.Segmento(venCotizSegmento.Segmento_Id, venCotizSegmento.Segmento1C, venCotizSegmento.Segmento2C, 
	venCotizSegmento.Segmento3C, venCotizSegmento.Segmento4C, venCotizSegmento.Segmento1N, 
	venCotizSegmento.Segmento2N, venCotizSegmento.Segmento3N, venCotizSegmento.Segmento4N ) AS Cotizacion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	genMonedas.Moneda_Id, 
	venVendedores.Vendedor_Id, venVendedores.Nombre as NombreVendedor,
	venCotizCuerpo.Renglon_Co, stkProductos.Producto_Id, 
	stkProductos.Descripcion, stkUniMed.Medida_Id, venCotizCuerpo.CantidadOriginal, 
	venCotizCuerpo.PrecioVenta, CONVERT(numeric(18,2), venCotizCuerpo.CantidadOriginal*venCotizCuerpo.PrecioVenta) as SubTotal
FROM venCotizaciones 
INNER JOIN venCotizSegmento ON  venCotizSegmento.venCotizaciones = venCotizaciones.venCotizaciones
INNER JOIN venClientes ON  venClientes.genEntidades = venCotizaciones.Cliente_Id
INNER JOIN venCotizCuerpo ON venCotizCuerpo.Cotizacion_Id = venCotizaciones.venCotizaciones
INNER JOIN stkProductos ON  stkProductos.stkProductos = venCotizCuerpo.Producto_Id 
INNER JOIN stkUniMed ON stkUniMed.stkUniMed =venCotizCuerpo.Medida_Id
INNER JOIN genMonedas ON genMonedas.genMonedas = venCotizaciones.Moneda_Id
LEFT JOIN stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
inner join venVendedores ON venVendedores.venVendedores = venCotizaciones.Vendedor_Id
WHERE
	venCotizaciones.Fecha BETWEEN @FechaDesde AND @FechaHasta AND 
	venClientes.Cliente_Id BETWEEN @ClienteDesde AND @ClienteHasta AND 
	stkProductos.Producto_Id BETWEEN @ProductoDesde And @ProductoHasta AND
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and 
	venCotizaciones.Empresa_Id = @Empresa_Id
ORDER BY 1, 2, 7
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venRankCli.sql*/
-- INF_venRankCli '20170101','20180831',1
DROP PROCEDURE INF_venRankCli
GO
CREATE PROCEDURE INF_venRankCli @FechaDesde DateTime, @FechaHasta DateTime, @Empresa int
AS

SELECT genMonedas.genMonedas,
dbo.func_TipoCambio(genMonedas.genMonedas, DATEADD(dd,1,@FechaHasta), @Empresa) as Cambio
INTO #CAMBIO
FROM genMonedas

SELECT venClientes.Cliente_Id, venClientes.RazonSocial, 
	Convert(Numeric(18,2), SUM((venMovimientos.Importe - IsNull(Impuestos.Importe, 0)) * venTipoMov.Signo * #CAMBIO.Cambio )) as Monto
From venMovimientos 
INNER JOIN conAsientos ON venMovimientos.venMovimientos = conAsientos.conAsientos
Left Join (Select venMovImpuestos.venMovimientos conAsientos, Sum(Importe) Importe 
	From venMovImpuestos Group By venMovImpuestos.venMovimientos) Impuestos 
		On Impuestos.conAsientos = conAsientos.conAsientos
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id 
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
INNER JOIN #CAMBIO ON #CAMBIO.genMonedas = conAsientos.Moneda_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	venSubTipoMov.AfectaEstadistica = 1 and 
	venTipoMov.venTipoMov NOT IN ('N','C','P') and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
GROUP BY venClientes.Cliente_Id, venClientes.RazonSocial
ORDER BY 3 DESC
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venRemiFactAsoc.sql*/
DROP PROCEDURE Inf_venRemiFactAsoc 
GO

CREATE PROCEDURE Inf_venRemiFactAsoc 
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@SucursalDesde VarChar(25),
	@SucursalHasta VarChar(25),
	@Empresa_Id Int
)
AS

SELECT distinct genAsiSegmentos.Asiento_Id, conAsientos.Fecha as FechaRemito, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) as Remito,

	dbo.Segmento(genAsiSegmentosF.Segmento_Id, genAsiSegmentosF.Segmento1C, 
	genAsiSegmentosF.Segmento2C,genAsiSegmentosF.Segmento3C, genAsiSegmentosF.Segmento4C, 
	genAsiSegmentosF.Segmento1N, genAsiSegmentosF.Segmento2N, genAsiSegmentosF.Segmento3N, 
	genAsiSegmentosF.Segmento4N) as factura, 
	conAsientosF.Fecha as FechaFactura , 
	venClientes.Cliente_Id, venClientes.RazonSocial
FROM genAsiSegmentos 
INNER JOIN conAsientos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
INNER JOIN stkRemitos ON stkRemitos.stkMoviCabe =conAsientos.conAsientos
INNER JOIN venMovStkHist ON venMovStkHist.stkMoviCabe = stkRemitos.stkMoviCabe
INNER JOIN genAsiSegmentos genAsiSegmentosF ON genAsiSegmentosF.Asiento_Id = venMovStkHist.venMovimientos
INNER JOIN conAsientos conAsientosF ON conAsientosF.conAsientos = genAsiSegmentosF.Asiento_Id
INNER JOIN venClientes ON venClientes.genEntidades = stkRemitos.Cliente_Id
INNER JOIN genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
WHERE conAsientos.Anulado = 0 AND
	conAsientos.Empresa_Id = @Empresa_Id and 
	conAsientosF.Fecha between @FechaDesde and @FechaHasta and 
	venClientes.Cliente_Id between @ClienteDesde and @ClienteHasta and 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta
order by 2,1
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venRemiPendFact.sql*/
-- Inf_venRemiPendFact ' ','ZZZ', 1
DROP Procedure Inf_venRemiPendFact
GO
CREATE Procedure Inf_venRemiPendFact(
	@SucursalDesde VarChar(25),
	@SucursalHasta VarChar(25),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Empresa_Id int
)

AS

SELECT  
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	genAsiSegmentos.Asiento_Id, conAsientos.Fecha, stkMoviCuerpo.Renglon, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) as Comprobante, 
	stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkRemiPendFact.CantidadPendiente , stkMoviCuerpo.Cantidad, 
		stkMoviCuerpo.PrecioOriginal, stkMoviCuerpo.CostoUnitario, 
		ROUND(stkMoviCuerpo.PrecioOriginal*stkMoviCuerpo.Cantidad,2) AS MontoaFactSinIvA,
		ROUND(stkMoviCuerpo.CostoUnitario*stkMoviCuerpo.Cantidad,2) AS CostoTotal
	FROM genAsiSegmentos inner join conAsientos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN stkRemitos ON 
	stkRemitos.stkMoviCabe = conAsientos.conAsientos
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkRemitos.stkMoviCabe 
	INNER JOIN stkRemiPendFact ON 
	stkRemiPendFact.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
	stkRemiPendFact.Renglon =stkMoviCuerpo.Renglon
	INNER JOIN stkProductos ON 
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON 
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN venClientes ON
	venClientes.genEntidades = stkRemitos.Cliente_Id
	INNER JOIN genSucursalesEmpr ON 
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	where
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa_Id AND 
		stkRemiPendFact.CantidadPendiente > 0 AND 
		genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and
		venClientes.Cliente_Id BETWEEN @ClienteDesde and @ClienteHasta
order by 1,4
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venRemiPendFactRes.sql*/
-- Inf_venRemiPendFactRes ' ','ZZZ',' ','ZZZ', 1
DROP Procedure Inf_venRemiPendFactRes
GO
CREATE Procedure Inf_venRemiPendFactRes(
	@SucursalDesde VarChar(25),
	@SucursalHasta VarChar(25),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Empresa_Id int
)

AS

SELECT  
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	genAsiSegmentos.Asiento_Id, conAsientos.Fecha, 
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N) as Comprobante, 
		CONVERT(nUMERIC(18,2),SUM(ROUND(stkMoviCuerpo.PrecioOriginal*stkMoviCuerpo.Cantidad,2))) AS MontoaFactSinIvA,
		CONVERT(nUMERIC(18,2),SUM(ROUND(stkMoviCuerpo.CostoUnitario*stkMoviCuerpo.Cantidad,2))) AS CostoTotal
	FROM genAsiSegmentos inner join conAsientos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN stkRemitos ON 
	stkRemitos.stkMoviCabe = conAsientos.conAsientos
	INNER JOIN stkMoviCuerpo ON
	stkMoviCuerpo.stkMoviCabe = stkRemitos.stkMoviCabe 
	INNER JOIN stkRemiPendFact ON 
	stkRemiPendFact.stkMoviCabe = stkMoviCuerpo.stkMoviCabe and 
	stkRemiPendFact.Renglon =stkMoviCuerpo.Renglon
	INNER JOIN stkProductos ON 
	stkProductos.stkProductos = stkMoviCuerpo.Producto_Id
	INNER JOIN stkUniMed ON 
	stkUniMed.stkUniMed = stkProductos.Medida_Id
	INNER JOIN venClientes ON
	venClientes.genEntidades = stkRemitos.Cliente_Id
	INNER JOIN genSucursalesEmpr ON 
	genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	where
		conAsientos.Anulado = 0 and 
		conAsientos.Empresa_Id = @Empresa_Id AND 
		stkRemiPendFact.CantidadPendiente > 0 AND 
		genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and
		venClientes.Cliente_Id BETWEEN @ClienteDesde and @ClienteHasta
GROUP BY 	venClientes.Cliente_Id, venClientes.RazonSocial, 
	genAsiSegmentos.Asiento_Id, conAsientos.Fecha, 
	genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, 
	genAsiSegmentos.Segmento2C,genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, 
	genAsiSegmentos.Segmento4N

order by 1,4
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venReparto.sql*/
DROP PROCEDURE INF_venReparto
GO
CREATE PROCEDURE INF_venReparto  (
	@Empresa_Id INT, 
	@Segmento_Id VarChar(10), 
	@Segmento1N INT,
	@Segmento2N INT,
	@Segmento3N INT,
	@Segmento4N INT,
	@Segmento1C VarChar(20),
	@Segmento2C VarChar(20),
	@Segmento3C VarChar(20),
	@Segmento4C VarChar(20)
	)
	AS
	SELECT venRepaSegmentos.venReparto,
	dbo.Segmento(venRepaSegmentos.Segmento_Id, venRepaSegmentos.Segmento1C,
	venRepaSegmentos.Segmento2C, venRepaSegmentos.Segmento3C, venRepaSegmentos.Segmento4C, 
	venRepaSegmentos.Segmento1N, venRepaSegmentos.Segmento2N, venRepaSegmentos.Segmento3N, 
	venRepaSegmentos.Segmento4N) AS SegmentoStr, VenRepaPedi.Renglon_Rep,
	dbo.Segmento(venPediSegmentos.Segmento_Id, venPediSegmentos.Segmento1C,
	venPediSegmentos.Segmento2C, venPediSegmentos.Segmento3C, venPediSegmentos.Segmento4C, 
	venPediSegmentos.Segmento1N, venPediSegmentos.Segmento2N, venPediSegmentos.Segmento3N, 
	venPediSegmentos.Segmento4N) AS PedidoStr, VenRepaPedi.Renglon_Pe,
	genSegmentos.Segmento_Id, venRepaSegmentos.Segmento1C,
	venRepaSegmentos.Segmento2C, venRepaSegmentos.Segmento3C, venRepaSegmentos.Segmento4C, 
	venRepaSegmentos.Segmento1N, venRepaSegmentos.Segmento2N, venRepaSegmentos.Segmento3N, 
	venRepaSegmentos.Segmento4N, 
		venClientes.Cliente_Id, venClientes.RazonSocial, genEntidades.Cuit, venClieHabitual.Sucursal,
	venClieHabitual.NombreFantasia, venClieHabitual.Direccion1_Entr, genProvincias.Descripcion Provincia,
	venReparto.FechaEntrega, venReparto.FechaReparto, 
	stkProductos.Producto_Id, stkProductos.Descripcion, stkDepositos.Descripcion DescDepo,
	venPediCuerpo.CantidadPedida, venRepaPedi.CantidadForm, stkUniMed.Medida_Id, 
	ISNULL(venRepaPediSerie.Serie,'') Serie, ISNULL(venRepaPediSerie.Cantidad,venRepaPedi.CantidadForm) CantSerie, 
	ISNULL(STUFF((SELECT ' '+ A FROM (SELECT DISTINCT Ped.Observaciones A
		FROM venRepaPedi venRP
		INNER JOIN (SELECT DISTINCT venPedidos.venPedidos, venPedidos.Sucursal, venPedidos.Observaciones
		FROM venPedidos) Ped ON
		venRP.venPedidos = Ped.venPedidos AND
		VenReparto.venReparto = venRP.VenReparto AND
		VenPedidos.Sucursal = Ped.Sucursal) B
		FOR XML PATH ('')),1,1,''),'') Observaciones, venVendedores.Vendedor_Id, venVendedores.Nombre NombreVendedor,
	venPedidos.CliOrdenCompra, ISNULL(stkUbiAlmacenDefecto.Ubicacion_Id,'') AS Ubicacion_Id
	FROM venRepaSegmentos
	INNER JOIN genSegmentos ON venRepaSegmentos.Segmento_Id = genSegmentos.genSegmentos
	INNER JOIN venReparto ON venRepaSegmentos.venReparto = venReparto.venReparto
	INNER JOIN VenRepaPedi ON venReparto.venReparto = VenRepaPedi.venReparto 
	LEFT OUTER JOIN venRepaPediSerie ON  VenRepaPedi.venPedidos = venRepaPediSerie.venPedidos AND
		VenRepaPedi.Renglon_Pe = venRepaPediSerie.Renglon_Pe AND
		VenRepaPedi.venReparto = venRepaPediSerie.venReparto AND
		VenRepaPedi.Renglon_Rep = venRepaPediSerie.Renglon_Rep
	INNER JOIN venPediCuerpo ON VenRepaPedi.venPedidos = venPediCuerpo.venPedidos AND
		venRepaPedi.Renglon_Pe = venPediCuerpo.Renglon_Pe
	INNER JOIN venPedidos ON venPedidos.venPedidos = venRepaPedi.venPedidos
	INNER JOIN stkProductos ON venPediCuerpo.Producto_Id = stkProductos.stkProductos 
	INNER JOIN genEntidades ON genEntidades.genEntidades =venPedidos.Cliente_Id 
	Inner join venClientes ON venClientes.genEntidades = genEntidades.genEntidades 
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venPedidos.Cliente_Id and 
		venClieHabitual.Sucursal = venPedidos.Sucursal
	INNER JOIN genProvincias ON venClieHabitual.Provincia_Id_Entr = genProvincias.genProvincias
	INNER JOIN stkDepositos ON venReparto.Deposito_Id = stkDepositos.stkDepositos
	INNER JOIN stkUniMed ON venPediCuerpo.Medida_Id = stkUniMed.stkUniMed
	INNER JOIN venPediSegmentos ON venPedidos.venPedidos = venPediSegmentos.venPedidos
	INNER JOIN genSegmentos genSeg ON venPediSegmentos.Segmento_Id = genSeg.genSegmentos
	Inner Join venVendedores On venVendedores.venVendedores = venClieHabitual.Vendedor_Id
	LEFT JOIN stkUbiAlmacenDefecto ON stkUbiAlmacenDefecto.Producto_Id = stkProductos.stkProductos and
		stkUbiAlmacenDefecto.Deposito_Id = stkDepositos.stkDepositos
	WHERE
		venRepaSegmentos.Empresa_Id = @Empresa_Id and
		genSegmentos.Segmento_Id =  @Segmento_Id and
		venRepaSegmentos.Segmento1C = @Segmento1C and 
		venRepaSegmentos.Segmento2C = @Segmento2C and 
		venRepaSegmentos.Segmento3C = @Segmento3C and 
		venRepaSegmentos.Segmento4C = @Segmento4C and 
		venRepaSegmentos.Segmento1N = @Segmento1N and 
		venRepaSegmentos.Segmento2N = @Segmento2N and  
		venRepaSegmentos.Segmento3N = @Segmento3N and  
		venRepaSegmentos.Segmento4N = @Segmento4N 
	ORDER BY venClientes.Cliente_Id, venClieHabitual.Sucursal, PedidoStr
GO
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venSaldosClie.sql*/
-- Inf_venSaldosClie '20180630',0,1
-- Inf_venSaldosClie '20180630',1,1

DROP PROCEDURE Inf_venSaldosClie 
GO
CREATE PROCEDURE Inf_venSaldosClie 

(
	@FechaHasta DateTime,
	@EnMonedaOriginal bit, 
	@Empresa Int
)
as

if @EnMonedaOriginal = 1
BEGIN

SELECT venClientes.Cliente_Id, venClientes.RazonSocial, 
	genMonedas.Moneda_Id, 1.0000 as Cambio, sum(venMovimientos.Importe*venTipoMov.Signo) as Saldo
	from venMovimientos INNER JOIN conAsientos ON
	venMovimientos.venMovimientos = conAsientos.conAsientos
	inner join venSubTipoMov ON
	venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	INNER JOIN venTipoMov ON
	venTipoMov.venTipoMov = venMovimientos.venTipoMov
	inner join venClientes ON
	venClientes.genEntidades = venMovimientos.Cliente_Id
	inner join genMonedas ON
	genMonedas.genMonedas = conAsientos.Moneda_Id
	WHERE
		conAsientos.Empresa_Id = @Empresa and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		conAsientos.Fecha <= @FechaHasta
		group by venClientes.Cliente_Id, venClientes.RazonSocial, 
			genMonedas.Moneda_Id
		HAVING sum(venMovimientos.Importe*venTipoMov.Signo)  <> 0
ORDER BY 3,1

END

ELSE

BEGIN 

SELECT Cliente_Id, RazonSocial, Moneda_Id, 1, SUM(Saldo) as Saldo
FROM (

SELECT venClientes.Cliente_Id, venClientes.RazonSocial, 
	genMonedas.Moneda_Id, dbo.func_TipoCambioCompra(conasientos.Moneda_Id, 
		@FechaHasta, @Empresa) as Cambio, 
	sum(venMovimientos.Importe*venTipoMov.Signo*
		dbo.func_TipoCambioCompra(conasientos.Moneda_Id,@FechaHasta, @Empresa)) as Saldo
	from venMovimientos INNER JOIN conAsientos ON
	venMovimientos.venMovimientos = conAsientos.conAsientos
	inner join venSubTipoMov ON
	venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	INNER JOIN venTipoMov ON
	venTipoMov.venTipoMov = venMovimientos.venTipoMov
	inner join venClientes ON
	venClientes.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN genEmpresas ON
	genEmpresas.genEmpresas = @Empresa
	inner join genMonedas ON
	genMonedas.genMonedas = genEmpresas.Moneda_Id
	WHERE
		conAsientos.Empresa_Id = @Empresa and 
		conAsientos.Anulado = 0 and 
		conAsientos.Posteado = 1 and 
		conAsientos.Fecha <= @FechaHasta
		group by venClientes.Cliente_Id, venClientes.RazonSocial, 
			genMonedas.Moneda_Id , conasientos.Moneda_Id) AS XXX
group by Cliente_Id, RazonSocial, Moneda_Id
HAVING SUM(Saldo) <> 0
ORDER BY 3,1

END


	

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venSaldoXCuenta.sql*/
---select * from vconMovCont where conAsientos = 1637

-- Inf_venSaldoXCuenta '20191231',1
DROP PROCEDURE Inf_venSaldoXCuenta
GO
CREATE PROCEDURE Inf_venSaldoXCuenta @FechaHasta DateTime, @Empresa int
AS
SELECT Cuenta_Id, Descripcion, Cliente_id, RazonSocial , 
	SUM(Monto) as Monto
FROM (
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
From venMovimientos 
INNER JOIN conAsientos ON venMovimientos.venMovimientos = conAsientos.conAsientos
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id 
Where
	conAsientos.Anulado = 0 And conAsientos.Posteado = 1 And 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('CLI', 'ANTCL')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial
	having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
From genCancMov 
INNER JOIN conAsientos ON genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = genCancMov.Asiento_Id
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id 
Where
	conAsientos.Anulado = 0 And conAsientos.Posteado = 1 And
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('CLI', 'ANTCL')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial
	having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
From genCancMov 
INNER JOIN conAsientos ON genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN conMovCont ON conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = genCancMov.Asiento_Id
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id 
Where
	conAsientos.Anulado = 0 And conAsientos.Posteado = 1 And
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('CLI', 'ANTCL')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial
	having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0

UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) as Monto
From venAsiCierre inner join venAsiCierrecr ON venAsiCierre.Asiento_Id = venAsiCierreCr.Asiento_Id
INNER JOIN conAsientos ON venAsiCierre.Asiento_Id = conAsientos.conAsientos
INNER JOIN conMovCont ON conMovCont.conAsientos = venAsiCierreCr.Asiento_Id and 
				conMovCont.Renglon = venAsiCierreCr.conRenglon
INNER JOIN conCuentas ON conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN venClientes ON venClientes.genEntidades = venAsiCierreCr.Cliente_Id 
Where
	conAsientos.Anulado = 0 And 
	conAsientos.Posteado = 1 And
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha <= @FechaHasta  and 
	conMovCont.Clase IN('CLI', 'ANTCL')
GROUP BY conCuentas.Cuenta_Id, conCuentas.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial
	having Convert(Numeric(18,2), SUM(conMovCont.Importe* (-2*conMovCont.Tipomov+3))) <> 0

	) as XXX
GROUP BY Cuenta_Id, Descripcion, Cliente_id, RazonSocial  
	HAVING SUM(Monto) <> 0
ORDER BY 1,4  DESC
GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\INF_venSubDiario.sql*/
-- INF_venSubDiario '20210712','20210712',1,1
DROP PROCEDURE INF_venSubDiario
GO
CREATE PROCEDURE INF_venSubDiario 
(
@FechaDesde DateTime, 
@FechaHasta DateTime, 
@Empresa int, 
@IncluCobra Bit
)
AS
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	venTipoMov.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm venMovimientos INNER JOIN conAsientos ON
venMovimientos.venMovimientos = conAsientos.conAsientos
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_Id
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN venSubTipoMov ON
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipomov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluCobra=1 or venTipoMov.venTipomov NOT IN ('C','N')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	venTipoMov.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
	FROm genCancMov INNER JOIN conAsientos ON
genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = genCancMov.Asiento_Id
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN venSubTipoMov ON 
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipoMov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluCobra=1 or venTipoMov.venTipoMov NOT IN ('C','N')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta 
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	venTipoMov.Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
	FROm genCancMov INNER JOIN conAsientos ON
genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = genCancMov.Asiento_Id
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN venSubTipoMov ON 
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipoMov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluCobra=1 or venTipoMov.venTipoMov NOT IN ('C','N')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta And
	conAsientos.conAsientos Not In (Select venMovimientos From venMovimientos) -- Puedo tener ND/NC que est? aplicada y sale 2 veces --
UNION ALL
SELECT conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Cierre' as Descripcion, 
	venClientes.Cliente_Id, venClientes.RazonSocial, 
	conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
	FROm venAsiCierre INNER JOIN venAsiCierreCr ON
venAsiCierre.Asiento_Id = venAsiCierreCr.Asiento_Id
INNER JOIN conAsientos ON
conAsientos.conAsientos = venAsiCierre.Asiento_Id
INNER JOIN venClientes ON
venClientes.genEntidades = venAsiCierreCr.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = venAsiCierreCr.Asiento_Id and 
conMovCont.Renglon = venAsiCierreCr.conRenglon
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  
ORDER BY 1,2,3
GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venSubMayor.sql*/
-- Inf_venSubMayor '20190101','20191231','1130-102','1130-102',' ','ZZZ',' ','ZZZ',' ','ZZZ', 1,1
DROP PROCEDURE Inf_venSubMayor
GO

CREATE PROCEDURE [dbo].[Inf_venSubMayor] 
	(@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@CuentaDesde VarChar(25),
	@CuentaHasta VarChar(25),
	@Centro1Desde VarChar(8),
	@Centro1Hasta VarChar(8),
	@Centro2Desde VarChar(8),
	@Centro2Hasta VarChar(8),
	@ClienteDesde VarChar(15), 
	@ClienteHasta VarChar(15), 
	@Empresa int, 
	@IncluCobranza Bit
)
AS
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	venTipoMov.Descripcion, 
	venClientes.Cliente_id, venClientes.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm venMovimientos INNER JOIN conAsientos ON
venMovimientos.venMovimientos = conAsientos.conAsientos
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN venSubTipoMov ON 
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipoMov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluCobranza=1 or venTipoMov.venTipoMov NOT IN ('C','N')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	venClientes.Cliente_id BETWEEN @ClienteDesde AND @ClienteHasta 
UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	venTipoMov.Descripcion, 
	venClientes.Cliente_id, venClientes.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov INNER JOIN conAsientos ON
genCancMov.AsientoApli_Id = conAsientos.conAsientos
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = genCancMov.Asiento_Id
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN venSubTipoMov ON 
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipoMov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluCobranza=1 or venTipoMov.venTipoMov NOT IN ('C','N')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	venClientes.Cliente_id BETWEEN @ClienteDesde AND @ClienteHasta 

UNION ALL
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	venTipoMov.Descripcion, 
	venClientes.Cliente_id, venClientes.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm genCancMov INNER JOIN conAsientos ON
genCancMov.AsieDifCambio_Id = conAsientos.conAsientos
INNER JOIN venMovimientos ON
venMovimientos.venMovimientos = genCancMov.Asiento_Id
INNER JOIN venClientes ON
venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = conAsientos.conAsientos
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
INNER JOIN venSubTipoMov ON 
venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON
venTipoMov.venTipomov = venMovimientos.venTipoMov
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	(@IncluCobranza=1 or venTipoMov.venTipoMov NOT IN ('C','N')) and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	venClientes.Cliente_id BETWEEN @ClienteDesde AND @ClienteHasta 
union all
SELECT conCuentas.Cuenta_Id, conCuentas.Descripcion DescripcionCuenta,
	conAsientos.Fecha, conAsientos.conAsientos, conMovCont.Renglon,  
	dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C
	, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N
	, genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Segmento,
	'Cierre Mes' as Descripcion, 
	venClientes.Cliente_id, venClientes.RazonSocial, 
	ISNULL(conCentro1.Centro1_Id,' ') AS Centro1_Id, ISNULL(conCentro1.Descripcion,' ') AS DescripcionCentro1, 
	ISNULL(conCentro2.Centro2_Id,' ') AS Centro2_Id, ISNULL(conCentro2.Descripcion,' ') AS DescripcionCentro2, 
	Case When conMovCont.Tipomov=1 THEN conMovCont.Importe ELSE 0 END Debe, 
	Case When conMovCont.Tipomov=2 THEN conMovCont.Importe ELSE 0 END Haber,
	conMovCont.Clase
FROm venAsiCierre INNER JOIN venAsiCierreCr ON
venAsiCierre.Asiento_Id = venAsiCierreCr.Asiento_Id
INNER JOIN conAsientos ON
conAsientos.conAsientos = venAsiCierre.Asiento_Id
INNER JOIN venClientes ON
venClientes.genEntidades = venAsiCierreCr.Cliente_id 
INNER JOIN conMovCont ON 
conMovCont.conAsientos = venAsiCierreCr.Asiento_Id and 
conMovCont.Renglon = venAsiCierreCr.conRenglon
INNER JOIN conCuentas ON
conCuentas.conCuentas = conMovCont.Cuenta_id
INNER JOIN genAsiSegmentos ON 
genAsiSegmentos.Asiento_id = conAsientos.conAsientos
left OUTER JOIN conCentro1 ON
conCentro1.conCentro1 = conMovCont.Centro1_Id
left OUTER JOIN conCentro2 ON
conCentro2.conCentro2 = conMovCont.Centro2_Id
Where
	conAsientos.Anulado = 0 and 
	conAsientos.Empresa_Id = @Empresa and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta  and 
	conCuentas.Cuenta_Id Between @CuentaDesde and @CuentaHasta and
	isnull(conCentro1.Centro1_Id,' ') between @Centro1Desde and @Centro1Hasta and
	isnull(conCentro2.Centro2_Id,' ') between @Centro2Desde and @Centro2Hasta and 
	venClientes.Cliente_id BETWEEN @ClienteDesde AND @ClienteHasta 


ORDER BY 1,3,4,5

GO


Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_VentaXCliente.sql*/
-- Inf_VentaXCliente '20190901', '20190930',' ','ZZZZ', 1
DROP PROCEDURE Inf_VentaXCliente
GO
CREATE PROCEDURE Inf_VentaXCliente
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime,
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@Empresa_Id Int,
	@ConImpuestos bit,
	@TipoMovDesde Char(1),
	@TipoMovHasta Char(1)
)

as

SELECT venClientes.Cliente_Id, venClientes.RazonSocial,
dbo.Segmento(genAsiSegmentos.Segmento_Id,genAsiSegmentos.Segmento1C,
	genAsiSegmentos.Segmento2C, genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, 
	genAsiSegmentos.Segmento1N,genAsiSegmentos.Segmento2N,genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Comprobante, 
	conAsientos.Fecha, genMonedas.Moneda_Id, 
	(venMovimientos.Importe- case when @ConImpuestos=1 then 0 else ISNULL(Impuestos.importe,0) end)*venTipomov.Signo as TotalOrignal, 
	Convert(Numeric(18,2),(venMovimientos.Importe - ISNULL(Impuestos.importe,0) *conAsientos.Cambio*venTipomov.Signo)) AS SubtotalBase,
	Convert(Numeric(18,2),ISNULL(Impuestos.importe,0) *conAsientos.Cambio*venTipomov.Signo) AS ImpuestosBase,
	Convert(Numeric(18,2),(venMovimientos.Importe - case when @ConImpuestos=1 then 0 else ISNULL(Impuestos.importe,0) end) *conAsientos.Cambio*venTipomov.Signo) AS TotalBase,
	venClieHabitual.NombreFantasia, venClieHabitual.Sucursal
FROM genAsiSegmentos inner join conAsientos ON
	genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venMovimientos ON 
	venMovimientos.venMovimientos = conAsientos.conAsientos
	INNER JOIN venClientes ON 
	venClientes.genEntidades = venMovimientos.Cliente_Id
	INNER JOIN venTipoMov on 
	venTipoMov.venTipoMov = venMovimientos.venTipomov
	INNER JOIN genMonedas ON 
	genMonedas.genMonedas = conAsientos.Moneda_Id
	inner join venSubTipoMov on venMovimientos.venSubTipoMov_Id = venSubTipoMov.venSubTipoMov
	Left Join (Select venMovImpuestos.venMovimientos conAsientos, Sum(Importe) Importe 
	From venMovImpuestos Group By venMovImpuestos.venMovimientos) Impuestos 
		On Impuestos.conAsientos = conAsientos.conAsientos
	inner join venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_id and 
		venClieHabitual.Sucursal = venMovimientos.Sucursal
	Where
		venSubTipoMov.AfectaEstadistica = 1 and 
		conAsientos.Posteado = 1 and 
		conAsientos.Anulado = 0 and 
		venTipoMov.venTipoMov <> 'C' AND 
		conAsientos.Fecha between @FechaDesde And @FechaHasta And
		conAsientos.Empresa_Id = @Empresa_Id and 
		venClientes.Cliente_Id BETWEEN @ClienteDesde And @ClienteHasta AND 
		venTipoMov.venTipoMov between @TipoMovDesde and @TipoMovHasta
	ORDER BY 1,3
Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venunidadesvend.sql*/
--Inf_venunidadesvend '20190101','20191231',' ','zzz',' ','zzz',' ','zzz',' ','zzz',' ','zzz','C',0,1
--Inf_venunidadesvend '20190101','20191231',' ','zzz',' ','zzz',' ','zzz',' ','zzz',' ','zzz','V',0,1
--Inf_venunidadesvend '20190101','20191231',' ','zzz',' ','zzz',' ','zzz',' ','zzz',' ','zzz','T',0,1
--Inf_venunidadesvend '20190101','20191231',' ','zzz',' ','zzz',' ','zzz',' ','zzz',' ','zzz','R',0,1
--Inf_venunidadesvend '20190101','20191231',' ','zzz',' ','zzz',' ','zzz',' ','zzz',' ','zzz','Z',0,1

DROP PROCEDURE Inf_venunidadesvend 
GO
CREATE PROCEDURE Inf_venunidadesvend 
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@SucursaDesde VarChar(4),
	@SucursaHasta VarChar(4),
	@RegionDesde VarChar(5),
	@RegionHasta VarChar(5),
	@ZonaDesde VarChar(5),
	@ZonaHasta VarChar(5),
	@VendedorDesde VarChar(5),
	@VendedorHasta VarChar(5),
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@DetallarPor Char(1),
	@SoloFacturas Bit,
	@Empresa_Id int)
AS
if @DetallarPor = 'C' OR @DetallarPor = ' '
begin
	SELECT venClientes.Cliente_Id as Entidad, venClientes.RazonSocial as EntidadDescripcion, 
		SUM(venMovConStockCr.CantFacturada*venTipoMov.Signo) AS Unidades 
	FROM venMovimientos INNER JOIN conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON 
			venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
		INNER JOIN venTipoMov ON  venTipoMov.venTipoMov = venMovimientos.venTipoMov
		INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
		INNER JOIN venClieHabitual ON venMovimientos.Cliente_Id =  venClieHabitual.genEntidades And
			venMovimientos.Sucursal = venClieHabitual.Sucursal
		INNER JOIN venZona ON venClieHabitual.Zona_Id = venZona.venZona
		INNER JOIN venRegion ON venClieHabitual.Region_Id = venRegion.venRegion
		INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		inner join venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	WHERE
		conAsientos.Anulado = 0 and
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_id and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and 
		venRegion.Region_Id  between @RegionDesde And @RegionHasta and 
		venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
		venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
		genSucursalesEmpr.Sucursal between @SucursaDesde And @SucursaHasta and 
		(@SoloFacturas = 1 or venTipoMov.venTipoMov= 'F')
	GROUP BY venClientes.Cliente_Id ,venClientes.RazonSocial 
	ORDER BY 1
end

if @DetallarPor = 'V'
begin
	SELECT venVendedores.Vendedor_Id as Entidad, venVendedores.Nombre as EntidadDescripcion, 
		SUM(venMovConStockCr.CantFacturada*venTipoMov.Signo) AS Unidades 
	FROM venMovimientos INNER JOIN conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON 
			venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
		INNER JOIN venTipoMov ON  venTipoMov.venTipoMov = venMovimientos.venTipoMov
		INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
		INNER JOIN venClieHabitual ON venMovimientos.Cliente_Id =  venClieHabitual.genEntidades And
			venMovimientos.Sucursal = venClieHabitual.Sucursal
		INNER JOIN venZona ON venClieHabitual.Zona_Id = venZona.venZona
		INNER JOIN venRegion ON venClieHabitual.Region_Id = venRegion.venRegion
		INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		inner join venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	WHERE
		conAsientos.Anulado = 0 and
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_id and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and 
		venRegion.Region_Id  between @RegionDesde And @RegionHasta and 
		venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
		venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
		genSucursalesEmpr.Sucursal between @SucursaDesde And @SucursaHasta and 
		(@SoloFacturas = 1 or venTipoMov.venTipoMov= 'F')
	GROUP BY venVendedores.Vendedor_Id ,venVendedores.Nombre
	ORDER BY 1
end

if @DetallarPor = 'R'
begin
	SELECT venRegion.Region_Id as Entidad, venRegion.Descripcion as EntidadDescripcion, 
		SUM(venMovConStockCr.CantFacturada*venTipoMov.Signo) AS Unidades 
	FROM venMovimientos INNER JOIN conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON 
			venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
		INNER JOIN venTipoMov ON  venTipoMov.venTipoMov = venMovimientos.venTipoMov
		INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
		INNER JOIN venClieHabitual ON venMovimientos.Cliente_Id =  venClieHabitual.genEntidades And
			venMovimientos.Sucursal = venClieHabitual.Sucursal
		INNER JOIN venZona ON venClieHabitual.Zona_Id = venZona.venZona
		INNER JOIN venRegion ON venClieHabitual.Region_Id = venRegion.venRegion
		INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		inner join venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	WHERE
		conAsientos.Anulado = 0 and
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_id and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and 
		venRegion.Region_Id  between @RegionDesde And @RegionHasta and 
		venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
		venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
		genSucursalesEmpr.Sucursal between @SucursaDesde And @SucursaHasta and 
		(@SoloFacturas = 1 or venTipoMov.venTipoMov= 'F')
	GROUP BY venRegion.Region_id, venRegion.Descripcion
	ORDER BY 1
end

if @DetallarPor = 'Z'
begin
	SELECT venZona.Zona_Id as Entidad, venZona.Descripcion as EntidadDescripcion, 
		SUM(venMovConStockCr.CantFacturada*venTipoMov.Signo) AS Unidades 
	FROM venMovimientos INNER JOIN conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON 
			venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
		INNER JOIN venTipoMov ON  venTipoMov.venTipoMov = venMovimientos.venTipoMov
		INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
		INNER JOIN venClieHabitual ON venMovimientos.Cliente_Id =  venClieHabitual.genEntidades And
			venMovimientos.Sucursal = venClieHabitual.Sucursal
		INNER JOIN venZona ON venClieHabitual.Zona_Id = venZona.venZona
		INNER JOIN venRegion ON venClieHabitual.Region_Id = venRegion.venRegion
		INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		inner join venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	WHERE
		conAsientos.Anulado = 0 and
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_id and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and 
		venRegion.Region_Id  between @RegionDesde And @RegionHasta and 
		venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
		venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
		genSucursalesEmpr.Sucursal between @SucursaDesde And @SucursaHasta and 
		(@SoloFacturas = 1 or venTipoMov.venTipoMov= 'F')
	GROUP BY venZona.Zona_Id, venZona.Descripcion
	ORDER BY 1
end


if @DetallarPor = 'T'
begin
	SELECT venTiposClie.TipoClie_Id as Entidad, venTiposClie.Descripcion as EntidadDescripcion, 
		SUM(venMovConStockCr.CantFacturada*venTipoMov.Signo) AS Unidades 
	FROM venMovimientos INNER JOIN conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON 
			venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
		INNER JOIN venTipoMov ON  venTipoMov.venTipoMov = venMovimientos.venTipoMov
		INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
		INNER JOIN venClieHabitual ON venMovimientos.Cliente_Id =  venClieHabitual.genEntidades And
			venMovimientos.Sucursal = venClieHabitual.Sucursal
		INNER JOIN venZona ON venClieHabitual.Zona_Id = venZona.venZona
		INNER JOIN venRegion ON venClieHabitual.Region_Id = venRegion.venRegion
		INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		inner join venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	WHERE
		conAsientos.Anulado = 0 and
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_id and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and 
		venRegion.Region_Id  between @RegionDesde And @RegionHasta and 
		venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
		venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
		genSucursalesEmpr.Sucursal between @SucursaDesde And @SucursaHasta and 
		(@SoloFacturas = 1 or venTipoMov.venTipoMov= 'F')
	GROUP BY venTiposClie.TipoClie_Id, venTiposClie.Descripcion
	ORDER BY 1
end

if @DetallarPor = 'S'
begin
	SELECT gensucursalesEmpr.Sucursal as Entidad, gensucursalesEmpr.Descripcion as EntidadDescripcion, 
		SUM(venMovConStockCr.CantFacturada*venTipoMov.Signo) AS Unidades 
	FROM venMovimientos INNER JOIN conAsientos ON
		venMovimientos.venMovimientos = conAsientos.conAsientos
		INNER JOIN venMovConStockCr ON 
			venMovConStockCr.venMovimientos = venMovimientos.venMovimientos
		INNER JOIN venClientes ON venMovimientos.Cliente_Id = venClientes.genEntidades
		INNER JOIN venTipoMov ON  venTipoMov.venTipoMov = venMovimientos.venTipoMov
		INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
		INNER JOIN venClieHabitual ON venMovimientos.Cliente_Id =  venClieHabitual.genEntidades And
			venMovimientos.Sucursal = venClieHabitual.Sucursal
		INNER JOIN venZona ON venClieHabitual.Zona_Id = venZona.venZona
		INNER JOIN venRegion ON venClieHabitual.Region_Id = venRegion.venRegion
		INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
		inner join venTiposClie ON  venTiposClie.venTiposClie = venClieHabitual.TipoClie_Id
	WHERE
		conAsientos.Anulado = 0 and
		conAsientos.Posteado = 1 and 
		conAsientos.Empresa_Id = @Empresa_id and 
		conAsientos.Fecha between @FechaDesde And @FechaHasta and
		venZona.Zona_Id between @ZonaDesde and @ZonaHasta and 
		venRegion.Region_Id  between @RegionDesde And @RegionHasta and 
		venClientes.Cliente_Id Between @ClienteDesde And @ClienteHasta and 
		venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
		genSucursalesEmpr.Sucursal between @SucursaDesde And @SucursaHasta and 
		(@SoloFacturas = 1 or venTipoMov.venTipoMov= 'F')
	GROUP BY gensucursalesEmpr.Sucursal, gensucursalesEmpr.Descripcion
	ORDER BY 1
end

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venVendedores.sql*/
-- Inf_venVendedores ' ','ZZZ', 1
DROP PROCEDURE Inf_venVendedores
GO
CREATE PROCEDURE Inf_venVendedores
(
	@VendedorDesde VarChar(5),
	@VendedorHasta VarChar(5),
	@Empresa Int
)

AS

SELECT venVendedores.Vendedor_Id, venVendedores.Nombre, 
	venVendedores.Comision, venVendedores.ComisionxSuperv, 
	venVendedores.PisoDeVentas, venVendedores.FacturaCobrada, 
	venVendedores.ConAnticipos, venVendedores.SinImpuestos, venVendedores.Inactivo, 
	genEntidades.Cuit, genEntidades.TipoDoc, genEntidades.IdFiscal, genEntidades.FechaAlta
	FROM venVendedores INNER JOIN genEntidades ON
	venVendedores.venVendedores = genEntidades.genEntidades
	WHERE 
	venVendedores.Vendedor_Id BETWEEN @VendedorDesde and @VendedorHasta and 
	@Empresa = ISNULL(venVendedores.Empresa_Id, @Empresa)
order by 1

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venVentasPeriodo.sql*/
--EXEC Inf_venVentasPeriodo '20200401','20200430',' ','ZZZ',' ','ZZZ',' ','ZZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ','V',1,1
--EXEC Inf_venVentasPeriodo '20200101','20200131',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ','C',1,1
--EXEC Inf_venVentasPeriodo '20200101','20200131',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ','V',1,1
--EXEC Inf_venVentasPeriodo '20200401','20200430',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ','Z',1,1
--EXEC Inf_venVentasPeriodo '20200401','20200430',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ',' ','ZZZ','U',1,1
--SELECT * FROM venVendedores
DROP PROCEDURE Inf_venVentasPeriodo
GO
CREATE PROCEDURE Inf_venVentasPeriodo
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@VendedorDesde VarChar(5),
	@VendedorHasta VarChar(5),
	@ZonaDesde VarChar(5),
	@ZonaHasta VarChar(5),
	@RegionDesde VarChar(5),
	@RegionHasta VarChar(5),
	@SucursalDesde VarChar(5),
	@SucursalHasta VarChar(5),
	@TipomovDesde Char(1),
	@TipomovHasta Char(1),
	@SubTipomovDesde Char(1),
	@SubTipomovHasta Char(1),
	@TipoRepo Char(1),
	@Resumido bit,
	@Empresa_Id Int
	
)
AS

IF @Resumido = 0
Begin
SELECT case @TipoRepo when 'C' THEN venClientes.Cliente_Id  
	WHEN 'V' THEN venVendedores.Vendedor_Id
	WHEN 'Z' Then venZona.Zona_Id
	WHEN 'R' Then venRegion.Region_Id
	WHEN 'S' Then genSucursalesEmpr.Sucursal 
	WHEN 'T' Then venTipoMov.venTipoMov
	WHEN 'U' Then venSubTipoMov.SubTipoMov_Id 	end as Entidad,
	case @TipoRepo when 'C' THEN venClientes.RazonSocial
	WHEN 'V' THEN venVendedores.Nombre
	WHEN 'Z' Then venZona.Descripcion
	WHEN 'R' Then venRegion.Descripcion
	WHEN 'S' Then genSucursalesEmpr.Descripcion 
	WHEN 'T' Then venTipoMov.Descripcion 
	WHEN 'U' Then venSubTipoMov.Descripcion end as DescripcionEntidad,
venClientes.Cliente_Id, venClientes.RazonSocial, conAsientos.Fecha,
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, 
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Comprobante,
	Convert(Numeric(18,2),ISNULL((SELECT 
		ROUND(SUM(venMovConStockCr.PrecioForm*venMovConStockCr.CantOriginal),2) 
		FROM venMovConStockCr Where 
			venMovConStockCr.venMovimientos= venMovimientos.venMovimientos),venMovimientos.SubTotal)*venTipomov.Signo) SubTotal, 
	Convert(Numeric(18,2),(ISNULL((SELECT ROUND(SUM(venMovConStockCr.PrecioForm*venMovConStockCr.CantOriginal),2)
			FROM venMovConStockCr Where 
			venMovConStockCr.venMovimientos= venMovimientos.venMovimientos), venMovimientos.SubTotal) 
		-venMovimientos.SubTotalBonif)*venTipomov.Signo) Bonificaciones,
	Convert(Numeric(18,2),venMovimientos.SubTotalBonif*venTipoMov.Signo) as SubTotalBonif, 
	Convert(Numeric(18,2),(Select Sum(Importe) Importe From venMovImpuestos Where venMovimientos.venMovimientos = venMovImpuestos.venMovimientos)*venTipomov.Signo) Impuestos,
	venMovimientos.Importe*venTipomov.Signo Importe, 
	venVendedores.Vendedor_Id, venVendedores.Nombre, venZona.Zona_Id, venZona.Descripcion as DescripcionZona, 
	venRegion.Region_Id, venRegion.Descripcion as DescripcionRegion, genSucursalesEmpr.Sucursal, 
	genSucursalesEmpr.Descripcion  as DescripcionSucursal, genMonedas.Moneda_Id, conAsientos.Cambio
	FROM venMovimientos 
	INNER JOIN conAsientos ON conAsientos.conAsientos = venMovimientos.venMovimientos
	INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
	INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id 
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id AND 
		venClieHabitual.Sucursal = venMovimientos.Sucursal
	INNER JOIN venZona ON venZona.venZona = venClieHabitual.Zona_Id 
	INNER JOIN venRegion ON venRegion.venRegion = venClieHabitual.Region_Id
	INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	INNER JOIN genMonedas ON genMonedas.genMonedas = conASientos.Moneda_Id

WHERE
	
	venSubTipoMov.AfectaEstadistica = 1 AND 
	venMovimientos.VenTipoMov <> 'C' AND
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa_Id AND 
	venClientes.Cliente_Id Between @ClienteDesde AND @ClienteHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde AND @FechaHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
	venZona.Zona_Id Between @ZonaDesde and @ZonaHasta and
	venRegion.Region_Id Between @RegionDesde and @RegionHasta and
	genSucursalesEmpr.Sucursal Between @SucursalDesde and @SucursalHasta and 
	venMovimientos.VenTipoMov between @TipomovDesde and @TipomovHasta and
	venSubTipoMov.SubTipoMov_Id between @SubTipomovDesde and @SubTipomovHasta


ORDER BY 1,5,6
end
else
begin
SELECT Entidad, DescripcionEntidad, SUM(SubTotal*cambio) SubTotal, 
	Sum(Bonificaciones*cambio) as Bonificaciones,
	SUM(SubTotal*cambio) -	Sum(Bonificaciones*cambio) as Neto,
	Sum(Impuestos*cambio) Impuestos, 
	SUM(Importe*cambio) as Importe
FROM 
(
SELECT case @TipoRepo when 'C' THEN venClientes.Cliente_Id  
	WHEN 'V' THEN venVendedores.Vendedor_Id
	WHEN 'Z' Then venZona.Zona_Id
	WHEN 'R' Then venRegion.Region_Id
	WHEN 'S' Then genSucursalesEmpr.Sucursal 
	WHEN 'T' Then venTipoMov.venTipoMov
	WHEN 'U' Then venSubTipoMov.SubTipoMov_Id 	end as Entidad,
	case @TipoRepo when 'C' THEN venClientes.RazonSocial
	WHEN 'V' THEN venVendedores.Nombre
	WHEN 'Z' Then venZona.Descripcion
	WHEN 'R' Then venRegion.Descripcion
	WHEN 'S' Then genSucursalesEmpr.Descripcion 
	WHEN 'T' Then venTipoMov.Descripcion 
	WHEN 'U' Then venSubTipoMov.Descripcion end as DescripcionEntidad,
venClientes.Cliente_Id, venClientes.RazonSocial, conAsientos.Fecha,
dbo.Segmento(genAsiSegmentos.Segmento_Id, genAsiSegmentos.Segmento1C, genAsiSegmentos.Segmento2C, 
	genAsiSegmentos.Segmento3C, genAsiSegmentos.Segmento4C, genAsiSegmentos.Segmento1N, 
	genAsiSegmentos.Segmento2N, genAsiSegmentos.Segmento3N, genAsiSegmentos.Segmento4N) AS Comprobante,
	Convert(Numeric(18,2),ISNULL((SELECT 
		ROUND(SUM(venMovConStockCr.PrecioForm*venMovConStockCr.CantOriginal),2) 
		FROM venMovConStockCr Where 
			venMovConStockCr.venMovimientos= venMovimientos.venMovimientos),venMovimientos.SubTotal)*venTipomov.Signo) SubTotal, 
		Convert(Numeric(18,2),(ISNULL((SELECT ROUND(SUM(venMovConStockCr.PrecioForm*venMovConStockCr.CantOriginal),2)
			FROM venMovConStockCr Where 
			venMovConStockCr.venMovimientos= venMovimientos.venMovimientos), venMovimientos.SubTotal) 
		-venMovimientos.SubTotalBonif)*venTipomov.Signo) Bonificaciones,
	Convert(Numeric(18,2),venMovimientos.SubTotalBonif*venTipoMov.Signo) as SubTotalBonif, 
	Convert(Numeric(18,2),(Select Sum(Importe) Importe From venMovImpuestos Where venMovimientos.venMovimientos = venMovImpuestos.venMovimientos)*venTipomov.Signo) Impuestos,
	venMovimientos.Importe*venTipomov.Signo Importe, 
	venVendedores.Vendedor_Id, venVendedores.Nombre, venZona.Zona_Id, venZona.Descripcion as DescripcionZona, 
	venRegion.Region_Id, venRegion.Descripcion as DescripcionRegion, genSucursalesEmpr.Sucursal, 
	genSucursalesEmpr.Descripcion  as DescripcionSucursal, genMonedas.Moneda_Id, conAsientos.Cambio
FROM venMovimientos 
	INNER JOIN conAsientos ON conAsientos.conAsientos = venMovimientos.venMovimientos
	INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
	INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
	INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_Id 
	INNER JOIN genAsiSegmentos ON genAsiSegmentos.Asiento_Id = conAsientos.conAsientos
	INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
	INNER JOIN venClieHabitual ON venClieHabitual.genEntidades = venMovimientos.Cliente_Id AND 
		venClieHabitual.Sucursal = venMovimientos.Sucursal
	INNER JOIN venZona ON venZona.venZona = venClieHabitual.Zona_Id 
	INNER JOIN venRegion ON venRegion.venRegion = venClieHabitual.Region_Id
	INNER JOIN genSucursalesEmpr ON  genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
	INNER JOIN genMonedas ON genMonedas.genMonedas = conASientos.Moneda_Id

WHERE
	
	venSubTipoMov.AfectaEstadistica = 1 AND 
	venMovimientos.VenTipoMov <> 'C' AND
	conAsientos.Anulado = 0 AND 
	conAsientos.Posteado = 1 and
	conAsientos.Empresa_Id = @Empresa_Id AND 
	venClientes.Cliente_Id Between @ClienteDesde AND @ClienteHasta AND
	conAsientos.Fecha BETWEEN @FechaDesde AND @FechaHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde and @VendedorHasta and
	venZona.Zona_Id Between @ZonaDesde and @ZonaHasta and
	venRegion.Region_Id Between @RegionDesde and @RegionHasta and
	genSucursalesEmpr.Sucursal Between @SucursalDesde and @SucursalHasta and 
	venMovimientos.VenTipoMov between @TipomovDesde and @TipomovHasta and
	venSubTipoMov.SubTipoMov_Id between @SubTipomovDesde and @SubTipomovHasta) AS XXX

GROUP BY Entidad, DescripcionEntidad
ORDER BY 1
end

GO




Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venVentasProducto.sql*/
-- Inf_venVentasProducto  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,'C',' ','zzz',' ','zzz',' ','ZZZ'
DROP Procedure Inf_venVentasProducto
GO

Create Procedure Inf_venVentasProducto
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa_Id Int, 
	@Agrupador Char(1) = ' ',
	@VendedorDesde varchar(5),
	@VendedorHasta varchar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15)
)
AS

begin
 
if @Agrupador != 'V' AND @Agrupador != 'C'

SELECT ' ' Agrupador, ' ' DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
	ISNULL(stkGrupos.Grupo_Id,' ') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionGrupo,
stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		ISNULL(Uni2.Medida_Id,'') Medida_Alt, SUM(ISNULL(venMovConStockCr.CantidadAlternaForm,0) * venTipomov.Signo *(1-venSubTipoMov.EsPorDifPrecio)) as CantidadAlt, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
LEFT JOIN stkUniMed Uni2 ON stkProductos.MedidaAlterna = Uni2.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, stkUniMed.Medida_Id, Uni2.Medida_Id, 
	stkFamilias.Familia_Id, stkFamilias.Descripcion, stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3


if @Agrupador = 'C'

SELECT venClientes.Cliente_Id Agrupador, venClientes.RazonSocial DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
	ISNULL(stkGrupos.Grupo_Id,' ') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionGrupo,
stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		ISNULL(Uni2.Medida_Id,'') Medida_Alt, SUM(ISNULL(venMovConStockCr.CantidadAlternaForm,0) * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as CantidadAlt,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
LEFT JOIN stkUniMed Uni2 ON stkProductos.MedidaAlterna = Uni2.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, stkUniMed.Medida_Id, 
venClientes.Cliente_Id, venClientes.RazonSocial, Uni2.Medida_Id,
stkFamilias.Familia_Id, stkFamilias.Descripcion, stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3

if @Agrupador = 'V'

SELECT venVendedores.Vendedor_Id Agrupador, venVendedores.Nombre DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
	ISNULL(stkGrupos.Grupo_Id,' ') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionGrupo,
stkProductos.Producto_Id, stkProductos.Descripcion, 
	stkUniMed.Medida_Id, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad,
		ISNULL(Uni2.Medida_Id,'') Medida_Alt, SUM(ISNULL(venMovConStockCr.CantidadAlternaForm,0) * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as CantidadAlt,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
LEFT JOIN stkUniMed Uni2 ON stkProductos.MedidaAlterna = Uni2.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta
GROUP BY stkProductos.Producto_Id, stkProductos.Descripcion, stkUniMed.Medida_Id, 
	venVendedores.Vendedor_Id, venVendedores.Nombre, Uni2.Medida_Id,
	stkFamilias.Familia_Id, stkFamilias.Descripcion, stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3

end




GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venVentasProductoRes.sql*/
-- Inf_venVentasProductoRes  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,' ',' ','zzz',' ','zzz',' ','ZZZ'
-- Inf_venVentasProductoRes  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,'V',' ','zzz',' ','zzz',' ','ZZZ'
DROP Procedure Inf_venVentasProductoRes
GO

Create Procedure Inf_venVentasProductoRes
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@SucursalDesde VarChar(4),
	@SucursalHasta VarChar(4),
	@ProductoDesde VarChar(25),
	@ProductoHasta VarChar(25),
	@Empresa_Id Int, 
	@Agrupador Char(1) = ' ',
	@VendedorDesde varchar(5),
	@VendedorHasta varchar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15)
)
AS

begin
 
if @Agrupador != 'V' AND @Agrupador != 'C'

SELECT ' ' Agrupador, ' ' DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,'NA') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
	ISNULL(stkGrupos.Grupo_Id,'NA') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionGrupo,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY stkFamilias.Familia_Id, stkFamilias.Descripcion, stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3, 5


if @Agrupador = 'C'

SELECT venClientes.Cliente_Id Agrupador, venClientes.RazonSocial DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,'NA') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
	ISNULL(stkGrupos.Grupo_Id,'NA') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionGrupo,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio,
			Max(venVendedores.Vendedor_Id) as Vendedor_Id
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY venClientes.Cliente_Id, venClientes.RazonSocial, 
stkFamilias.Familia_Id, stkFamilias.Descripcion, stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3, 5

if @Agrupador = 'V'

SELECT venVendedores.Vendedor_Id Agrupador, venVendedores.Nombre DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,'NA') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
	ISNULL(stkGrupos.Grupo_Id,'NA') AS Grupo_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionGrupo,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta
GROUP BY venVendedores.Vendedor_Id, venVendedores.Nombre,
	stkFamilias.Familia_Id, stkFamilias.Descripcion, stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3, 5

end




GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venVentasProductoResFam.sql*/
-- Inf_venVentasProductoResFam  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,'C',' ','zzz',' ','zzz',' ','ZZZ'
-- Inf_venVentasProductoResFam  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,'V',' ','zzz',' ','zzz',' ','ZZZ'
DROP Procedure Inf_venVentasProductoResFam
GO

Create Procedure Inf_venVentasProductoResFam
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@SucursalDesde VarChar(25),
	@SucursalHasta VarChar(25),
	@ProductoDesde VarChar(15),
	@ProductoHasta VarChar(15),
	@Empresa_Id Int, 
	@Agrupador Char(1) = ' ',
	@VendedorDesde varchar(5),
	@VendedorHasta varchar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15)
)
AS

begin
 
if @Agrupador != 'V' AND @Agrupador != 'C'

SELECT ' ' Agrupador, ' ' DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY stkFamilias.Familia_Id, stkFamilias.Descripcion
ORDER BY 1,3


if @Agrupador = 'C'

SELECT venClientes.Cliente_Id Agrupador, venClientes.RazonSocial DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY venClientes.Cliente_Id, venClientes.RazonSocial, 
stkFamilias.Familia_Id, stkFamilias.Descripcion
ORDER BY 1,3, 5

if @Agrupador = 'V'

SELECT venVendedores.Vendedor_Id Agrupador, venVendedores.Nombre DescripcionAgrupador,
	ISNULL(stkFamilias.Familia_Id,' ') AS Familia_Id, ISNULL(stkFamilias.Descripcion,' ') AS DescripcionFamilia,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta
GROUP BY venVendedores.Vendedor_Id, venVendedores.Nombre,
	stkFamilias.Familia_Id, stkFamilias.Descripcion
ORDER BY 1,3, 5

end




GO

Go 

/* C:\V3\SummaAdvanced\Scripts\Informes\Inf_venVentasProductoResGru.sql*/
-- Inf_venVentasProductoResGru  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,'C',' ','zzz',' ','zzz',' ','ZZZ'
-- Inf_venVentasProductoResGru  '20200301','20200331',' ','ZZZ',' ','ZZZZ',' ','ZZZ',1,'V',' ','zzz',' ','zzz',' ','ZZZ'
DROP Procedure Inf_venVentasProductoResGru
GO

Create Procedure Inf_venVentasProductoResGru
(
	@FechaDesde DateTime, 
	@FechaHasta DateTime, 
	@ClienteDesde VarChar(15),
	@ClienteHasta VarChar(15),
	@SucursalDesde VarChar(25),
	@SucursalHasta VarChar(25),
	@ProductoDesde VarChar(15),
	@ProductoHasta VarChar(15),
	@Empresa_Id Int, 
	@Agrupador Char(1) = ' ',
	@VendedorDesde varchar(5),
	@VendedorHasta varchar(5),
	@FamiliaDesde VarChar(15),
	@FamiliaHasta VarChar(15),
	@GrupoDesde VarChar(15),
	@GrupoHasta VarChar(15)
)
AS

begin
 
if @Agrupador != 'V' AND @Agrupador != 'C'

SELECT ' ' Agrupador, ' ' DescripcionAgrupador,
	ISNULL(stkGrupos.Grupo_id,' ') AS Familia_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionFamilia,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id
WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3


if @Agrupador = 'C'

SELECT venClientes.Cliente_Id Agrupador, venClientes.RazonSocial DescripcionAgrupador,
	ISNULL(stkGrupos.Grupo_id,' ') AS Familia_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionFamilia,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
Inner Join venVendedores On venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 
GROUP BY venClientes.Cliente_Id, venClientes.RazonSocial, 
stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3, 5

if @Agrupador = 'V'

SELECT venVendedores.Vendedor_Id Agrupador, venVendedores.Nombre DescripcionAgrupador,
	ISNULL(stkGrupos.Grupo_id,' ') AS Familia_Id, ISNULL(stkGrupos.Descripcion,' ') AS DescripcionFamilia,
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) as Cantidad, 
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) as Monto,
		case when SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) <> 0 THEN
		SUM(venMovConStockCr.CantFacturada * venTipomov.Signo * venMovConStockCr.PrecioVenta * conAsientos.Cambio) /
			SUM(venMovConStockCr.CantFacturada * venTipomov.Signo *	(1-venSubTipoMov.EsPorDifPrecio)) ELSE 0 END AS PrecioPromedio
FROM stkProductos 
INNER JOIN stkUniMed ON stkProductos.Medida_Id = stkUniMed.stkUniMed
INNER JOIN venMovConStockCr ON venMovConStockCr.Producto_Id = stkProductos.stkProductos
INNER JOIN conAsientos ON conAsientos.conAsientos =venMovConStockCr.venMovimientos
INNER JOIN venMovimientos ON venMovimientos.venMovimientos = venMovConStockCr.venMovimientos
INNER JOIN venSubTipoMov ON venSubTipoMov.venSubTipoMov = venMovimientos.venSubTipoMov_Id
INNER JOIN venTipoMov ON venTipoMov.venTipoMov = venMovimientos.venTipoMov
inner join genSucursalesEmpr ON genSucursalesEmpr.genSucursalesEmpr = conAsientos.Sucursal
INNER JOIN venClientes ON venClientes.genEntidades = venMovimientos.Cliente_id 
INNER JOIN venVendedores ON venVendedores.venVendedores = venMovimientos.Vendedor_Id
left join stkFamilias ON stkFamilias.stkFamilias = stkProductos.Familia_Id
left join stkGrupos ON stkGrupos.stkGrupos = stkProductos.Grupo_Id and 
	ISNULL(stkFamilias.Familia_Id,' ') BETWEEN @FamiliaDesde and @FamiliaHasta and
	ISNULL(stkGrupos.Grupo_Id,' ') BETWEEN @GrupoDesde and @GrupoHasta 

WHERE
	venClientes.Cliente_Id Between @ClienteDesde and @ClienteHasta and 
	venVendedores.Vendedor_Id Between @VendedorDesde And @VendedorHasta And
	venSubTipoMov.AfectaEstadistica = 1 and 
	conAsientos.Anulado = 0 AND 
	conAsientos.Empresa_Id = @Empresa_Id AND 
	genSucursalesEmpr.Sucursal between @SucursalDesde and @SucursalHasta and 
	conAsientos.Fecha between @FechaDesde and @FechaHasta and 
	stkProductos.Producto_Id between @ProductoDesde and @ProductoHasta
GROUP BY venVendedores.Vendedor_Id, venVendedores.Nombre,
	stkGrupos.Grupo_Id, stkGrupos.Descripcion
ORDER BY 1,3, 5

end




GO

Go 

